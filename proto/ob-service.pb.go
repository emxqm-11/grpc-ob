// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ob-service.proto

package consumerdatastandards

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BankingProductCategory int32

const (
	BankingProductCategory_TRANS_AND_SAVINGS_ACCOUNTS BankingProductCategory = 0
	BankingProductCategory_TERM_DEPOSITS              BankingProductCategory = 1
	BankingProductCategory_TRAVEL_CARDS               BankingProductCategory = 2
	BankingProductCategory_REGULATED_TRUST_ACCOUNTS   BankingProductCategory = 3
	BankingProductCategory_RESIDENTIAL_MORTGAGES      BankingProductCategory = 4
	BankingProductCategory_CRED_AND_CHRG_CARDS        BankingProductCategory = 5
	BankingProductCategory_PERS_LOANS                 BankingProductCategory = 6
	BankingProductCategory_MARGIN_LOANS               BankingProductCategory = 7
	BankingProductCategory_LEASES                     BankingProductCategory = 8
	BankingProductCategory_TRADE_FINANCE              BankingProductCategory = 9
	BankingProductCategory_OVERDRAFTS                 BankingProductCategory = 10
	BankingProductCategory_BUSINESS_LOANS             BankingProductCategory = 11
)

var BankingProductCategory_name = map[int32]string{
	0:  "TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "TERM_DEPOSITS",
	2:  "TRAVEL_CARDS",
	3:  "REGULATED_TRUST_ACCOUNTS",
	4:  "RESIDENTIAL_MORTGAGES",
	5:  "CRED_AND_CHRG_CARDS",
	6:  "PERS_LOANS",
	7:  "MARGIN_LOANS",
	8:  "LEASES",
	9:  "TRADE_FINANCE",
	10: "OVERDRAFTS",
	11: "BUSINESS_LOANS",
}

var BankingProductCategory_value = map[string]int32{
	"TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"TERM_DEPOSITS":              1,
	"TRAVEL_CARDS":               2,
	"REGULATED_TRUST_ACCOUNTS":   3,
	"RESIDENTIAL_MORTGAGES":      4,
	"CRED_AND_CHRG_CARDS":        5,
	"PERS_LOANS":                 6,
	"MARGIN_LOANS":               7,
	"LEASES":                     8,
	"TRADE_FINANCE":              9,
	"OVERDRAFTS":                 10,
	"BUSINESS_LOANS":             11,
}

func (x BankingProductCategory) String() string {
	return proto.EnumName(BankingProductCategory_name, int32(x))
}

func (BankingProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{0}
}

type ParamAccountOpenStatus int32

const (
	ParamAccountOpenStatus_OPEN   ParamAccountOpenStatus = 0
	ParamAccountOpenStatus_CLOSED ParamAccountOpenStatus = 1
	ParamAccountOpenStatus_ALL    ParamAccountOpenStatus = 2
)

var ParamAccountOpenStatus_name = map[int32]string{
	0: "OPEN",
	1: "CLOSED",
	2: "ALL",
}

var ParamAccountOpenStatus_value = map[string]int32{
	"OPEN":   0,
	"CLOSED": 1,
	"ALL":    2,
}

func (x ParamAccountOpenStatus) String() string {
	return proto.EnumName(ParamAccountOpenStatus_name, int32(x))
}

func (ParamAccountOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{1}
}

type BankingAccount_BankingAccountOpenStatus int32

const (
	BankingAccount_BANKING_ACCOUNT_OPEN_STATUS_OPEN   BankingAccount_BankingAccountOpenStatus = 0
	BankingAccount_BANKING_ACCOUNT_OPEN_STATUS_CLOSED BankingAccount_BankingAccountOpenStatus = 1
)

var BankingAccount_BankingAccountOpenStatus_name = map[int32]string{
	0: "BANKING_ACCOUNT_OPEN_STATUS_OPEN",
	1: "BANKING_ACCOUNT_OPEN_STATUS_CLOSED",
}

var BankingAccount_BankingAccountOpenStatus_value = map[string]int32{
	"BANKING_ACCOUNT_OPEN_STATUS_OPEN":   0,
	"BANKING_ACCOUNT_OPEN_STATUS_CLOSED": 1,
}

func (x BankingAccount_BankingAccountOpenStatus) String() string {
	return proto.EnumName(BankingAccount_BankingAccountOpenStatus_name, int32(x))
}

func (BankingAccount_BankingAccountOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{0, 0}
}

type BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType int32

const (
	BankingDomesticPayee_BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_ACCOUNT BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType = 0
	BankingDomesticPayee_BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_CARD    BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType = 1
	BankingDomesticPayee_BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_PAY_ID  BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType = 2
)

var BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType_name = map[int32]string{
	0: "BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_ACCOUNT",
	1: "BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_CARD",
	2: "BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_PAY_ID",
}

var BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType_value = map[string]int32{
	"BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_ACCOUNT": 0,
	"BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_CARD":    1,
	"BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_PAY_ID":  2,
}

func (x BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType) String() string {
	return proto.EnumName(BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType_name, int32(x))
}

func (BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{8, 0}
}

type BankingDomesticPayeePayId_BankingDomesticPayeePayIdType int32

const (
	BankingDomesticPayeePayId_BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_EMAIL          BankingDomesticPayeePayId_BankingDomesticPayeePayIdType = 0
	BankingDomesticPayeePayId_BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_TELEPHONE      BankingDomesticPayeePayId_BankingDomesticPayeePayIdType = 1
	BankingDomesticPayeePayId_BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ABN            BankingDomesticPayeePayId_BankingDomesticPayeePayIdType = 2
	BankingDomesticPayeePayId_BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ORG_IDENTIFIER BankingDomesticPayeePayId_BankingDomesticPayeePayIdType = 3
)

var BankingDomesticPayeePayId_BankingDomesticPayeePayIdType_name = map[int32]string{
	0: "BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_EMAIL",
	1: "BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_TELEPHONE",
	2: "BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ABN",
	3: "BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ORG_IDENTIFIER",
}

var BankingDomesticPayeePayId_BankingDomesticPayeePayIdType_value = map[string]int32{
	"BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_EMAIL":          0,
	"BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_TELEPHONE":      1,
	"BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ABN":            2,
	"BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_ORG_IDENTIFIER": 3,
}

func (x BankingDomesticPayeePayId_BankingDomesticPayeePayIdType) String() string {
	return proto.EnumName(BankingDomesticPayeePayId_BankingDomesticPayeePayIdType_name, int32(x))
}

func (BankingDomesticPayeePayId_BankingDomesticPayeePayIdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{11, 0}
}

type BankingLoanAccount_BankingLoanAccountRepaymentType int32

const (
	BankingLoanAccount_BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_INTEREST_ONLY          BankingLoanAccount_BankingLoanAccountRepaymentType = 0
	BankingLoanAccount_BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_PRINCIPAL_AND_INTEREST BankingLoanAccount_BankingLoanAccountRepaymentType = 1
)

var BankingLoanAccount_BankingLoanAccountRepaymentType_name = map[int32]string{
	0: "BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_INTEREST_ONLY",
	1: "BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_PRINCIPAL_AND_INTEREST",
}

var BankingLoanAccount_BankingLoanAccountRepaymentType_value = map[string]int32{
	"BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_INTEREST_ONLY":          0,
	"BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_PRINCIPAL_AND_INTEREST": 1,
}

func (x BankingLoanAccount_BankingLoanAccountRepaymentType) String() string {
	return proto.EnumName(BankingLoanAccount_BankingLoanAccountRepaymentType_name, int32(x))
}

func (BankingLoanAccount_BankingLoanAccountRepaymentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{16, 0}
}

type BankingPayee_BankingPayeeType int32

const (
	BankingPayee_BANKING_PAYEE_TYPE_DOMESTIC      BankingPayee_BankingPayeeType = 0
	BankingPayee_BANKING_PAYEE_TYPE_INTERNATIONAL BankingPayee_BankingPayeeType = 1
	BankingPayee_BANKING_PAYEE_TYPE_BILLER        BankingPayee_BankingPayeeType = 2
)

var BankingPayee_BankingPayeeType_name = map[int32]string{
	0: "BANKING_PAYEE_TYPE_DOMESTIC",
	1: "BANKING_PAYEE_TYPE_INTERNATIONAL",
	2: "BANKING_PAYEE_TYPE_BILLER",
}

var BankingPayee_BankingPayeeType_value = map[string]int32{
	"BANKING_PAYEE_TYPE_DOMESTIC":      0,
	"BANKING_PAYEE_TYPE_INTERNATIONAL": 1,
	"BANKING_PAYEE_TYPE_BILLER":        2,
}

func (x BankingPayee_BankingPayeeType) String() string {
	return proto.EnumName(BankingPayee_BankingPayeeType_name, int32(x))
}

func (BankingPayee_BankingPayeeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{17, 0}
}

type BankingProductConstraint_BankingProductConstraintConstraintType int32

const (
	BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_BALANCE     BankingProductConstraint_BankingProductConstraintConstraintType = 0
	BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_BALANCE     BankingProductConstraint_BankingProductConstraintConstraintType = 1
	BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_OPENING_BALANCE BankingProductConstraint_BankingProductConstraintConstraintType = 2
	BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_LIMIT       BankingProductConstraint_BankingProductConstraintConstraintType = 3
	BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_LIMIT       BankingProductConstraint_BankingProductConstraintConstraintType = 4
)

var BankingProductConstraint_BankingProductConstraintConstraintType_name = map[int32]string{
	0: "BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_BALANCE",
	1: "BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_BALANCE",
	2: "BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_OPENING_BALANCE",
	3: "BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_LIMIT",
	4: "BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_LIMIT",
}

var BankingProductConstraint_BankingProductConstraintConstraintType_value = map[string]int32{
	"BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_BALANCE":     0,
	"BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_BALANCE":     1,
	"BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_OPENING_BALANCE": 2,
	"BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MAX_LIMIT":       3,
	"BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_LIMIT":       4,
}

func (x BankingProductConstraint_BankingProductConstraintConstraintType) String() string {
	return proto.EnumName(BankingProductConstraint_BankingProductConstraintConstraintType_name, int32(x))
}

func (BankingProductConstraint_BankingProductConstraintConstraintType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{20, 0}
}

type BankingProductDepositRate_BankingProductDepositRateDepositRateType int32

const (
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FIXED         BankingProductDepositRate_BankingProductDepositRateDepositRateType = 0
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BONUS         BankingProductDepositRate_BankingProductDepositRateDepositRateType = 1
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BUNDLE_BONUS  BankingProductDepositRate_BankingProductDepositRateDepositRateType = 2
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_VARIABLE      BankingProductDepositRate_BankingProductDepositRateDepositRateType = 3
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_INTRODUCTORY  BankingProductDepositRate_BankingProductDepositRateDepositRateType = 4
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FLOATING      BankingProductDepositRate_BankingProductDepositRateDepositRateType = 5
	BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_MARKET_LINKED BankingProductDepositRate_BankingProductDepositRateDepositRateType = 6
)

var BankingProductDepositRate_BankingProductDepositRateDepositRateType_name = map[int32]string{
	0: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FIXED",
	1: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BONUS",
	2: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BUNDLE_BONUS",
	3: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_VARIABLE",
	4: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_INTRODUCTORY",
	5: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FLOATING",
	6: "BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_MARKET_LINKED",
}

var BankingProductDepositRate_BankingProductDepositRateDepositRateType_value = map[string]int32{
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FIXED":         0,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BONUS":         1,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_BUNDLE_BONUS":  2,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_VARIABLE":      3,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_INTRODUCTORY":  4,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FLOATING":      5,
	"BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_MARKET_LINKED": 6,
}

func (x BankingProductDepositRate_BankingProductDepositRateDepositRateType) String() string {
	return proto.EnumName(BankingProductDepositRate_BankingProductDepositRateDepositRateType_name, int32(x))
}

func (BankingProductDepositRate_BankingProductDepositRateDepositRateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{21, 0}
}

type BankingProductDiscount_BankingProductDiscountDiscountType int32

const (
	BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_BALANCE          BankingProductDiscount_BankingProductDiscountDiscountType = 0
	BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_DEPOSITS         BankingProductDiscount_BankingProductDiscountDiscountType = 1
	BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_PAYMENTS         BankingProductDiscount_BankingProductDiscountDiscountType = 2
	BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_FEE_CAP          BankingProductDiscount_BankingProductDiscountDiscountType = 3
	BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_ELIGIBILITY_ONLY BankingProductDiscount_BankingProductDiscountDiscountType = 4
)

var BankingProductDiscount_BankingProductDiscountDiscountType_name = map[int32]string{
	0: "BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_BALANCE",
	1: "BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_DEPOSITS",
	2: "BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_PAYMENTS",
	3: "BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_FEE_CAP",
	4: "BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_ELIGIBILITY_ONLY",
}

var BankingProductDiscount_BankingProductDiscountDiscountType_value = map[string]int32{
	"BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_BALANCE":          0,
	"BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_DEPOSITS":         1,
	"BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_PAYMENTS":         2,
	"BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_FEE_CAP":          3,
	"BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_ELIGIBILITY_ONLY": 4,
}

func (x BankingProductDiscount_BankingProductDiscountDiscountType) String() string {
	return proto.EnumName(BankingProductDiscount_BankingProductDiscountDiscountType_name, int32(x))
}

func (BankingProductDiscount_BankingProductDiscountDiscountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{23, 0}
}

type BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType int32

const (
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_BUSINESS          BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 0
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_PENSION_RECIPIENT BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 1
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_AGE           BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 2
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MAX_AGE           BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 3
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_INCOME        BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 4
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_TURNOVER      BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 5
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STAFF             BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 6
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STUDENT           BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 7
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 8
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_RESIDENCY_STATUS  BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 9
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_NATURAL_PERSON    BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 10
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_INTRODUCTORY      BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 11
	BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_OTHER             BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType = 12
)

var BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType_name = map[int32]string{
	0:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_BUSINESS",
	1:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_PENSION_RECIPIENT",
	2:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_AGE",
	3:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MAX_AGE",
	4:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_INCOME",
	5:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_TURNOVER",
	6:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STAFF",
	7:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STUDENT",
	8:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS",
	9:  "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_RESIDENCY_STATUS",
	10: "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_NATURAL_PERSON",
	11: "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_INTRODUCTORY",
	12: "BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_OTHER",
}

var BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType_value = map[string]int32{
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_BUSINESS":          0,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_PENSION_RECIPIENT": 1,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_AGE":           2,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MAX_AGE":           3,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_INCOME":        4,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_MIN_TURNOVER":      5,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STAFF":             6,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_STUDENT":           7,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS": 8,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_RESIDENCY_STATUS":  9,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_NATURAL_PERSON":    10,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_INTRODUCTORY":      11,
	"BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_OTHER":             12,
}

func (x BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType) String() string {
	return proto.EnumName(BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType_name, int32(x))
}

func (BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{24, 0}
}

type BankingProductEligibility_BankingProductEligibilityEligibilityType int32

const (
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_BUSINESS          BankingProductEligibility_BankingProductEligibilityEligibilityType = 0
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_PENSION_RECIPIENT BankingProductEligibility_BankingProductEligibilityEligibilityType = 1
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_AGE           BankingProductEligibility_BankingProductEligibilityEligibilityType = 2
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MAX_AGE           BankingProductEligibility_BankingProductEligibilityEligibilityType = 3
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_INCOME        BankingProductEligibility_BankingProductEligibilityEligibilityType = 4
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_TURNOVER      BankingProductEligibility_BankingProductEligibilityEligibilityType = 5
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STAFF             BankingProductEligibility_BankingProductEligibilityEligibilityType = 6
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STUDENT           BankingProductEligibility_BankingProductEligibilityEligibilityType = 7
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS BankingProductEligibility_BankingProductEligibilityEligibilityType = 8
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_RESIDENCY_STATUS  BankingProductEligibility_BankingProductEligibilityEligibilityType = 9
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_NATURAL_PERSON    BankingProductEligibility_BankingProductEligibilityEligibilityType = 10
	BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_OTHER             BankingProductEligibility_BankingProductEligibilityEligibilityType = 11
)

var BankingProductEligibility_BankingProductEligibilityEligibilityType_name = map[int32]string{
	0:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_BUSINESS",
	1:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_PENSION_RECIPIENT",
	2:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_AGE",
	3:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MAX_AGE",
	4:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_INCOME",
	5:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_TURNOVER",
	6:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STAFF",
	7:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STUDENT",
	8:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS",
	9:  "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_RESIDENCY_STATUS",
	10: "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_NATURAL_PERSON",
	11: "BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_OTHER",
}

var BankingProductEligibility_BankingProductEligibilityEligibilityType_value = map[string]int32{
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_BUSINESS":          0,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_PENSION_RECIPIENT": 1,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_AGE":           2,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MAX_AGE":           3,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_INCOME":        4,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_MIN_TURNOVER":      5,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STAFF":             6,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_STUDENT":           7,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_EMPLOYMENT_STATUS": 8,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_RESIDENCY_STATUS":  9,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_NATURAL_PERSON":    10,
	"BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_OTHER":             11,
}

func (x BankingProductEligibility_BankingProductEligibilityEligibilityType) String() string {
	return proto.EnumName(BankingProductEligibility_BankingProductEligibilityEligibilityType_name, int32(x))
}

func (BankingProductEligibility_BankingProductEligibilityEligibilityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{25, 0}
}

type BankingProductFeature_BankingProductFeatureFeatureType int32

const (
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_CARD_ACCESS                     BankingProductFeature_BankingProductFeatureFeatureType = 0
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_ADDITIONAL_CARDS                BankingProductFeature_BankingProductFeatureFeatureType = 1
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_UNLIMITED_TXNS                  BankingProductFeature_BankingProductFeatureFeatureType = 2
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS                       BankingProductFeature_BankingProductFeatureFeatureType = 3
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS_ALLOWANCE             BankingProductFeature_BankingProductFeatureFeatureType = 4
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_LOYALTY_PROGRAM                 BankingProductFeature_BankingProductFeatureFeatureType = 5
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OFFSET                          BankingProductFeature_BankingProductFeatureFeatureType = 6
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OVERDRAFT                       BankingProductFeature_BankingProductFeatureFeatureType = 7
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_REDRAW                          BankingProductFeature_BankingProductFeatureFeatureType = 8
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INSURANCE                       BankingProductFeature_BankingProductFeatureFeatureType = 9
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BALANCE_TRANSFERS               BankingProductFeature_BankingProductFeatureFeatureType = 10
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE                   BankingProductFeature_BankingProductFeatureFeatureType = 11
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE_TRANSFERS         BankingProductFeature_BankingProductFeatureFeatureType = 12
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_WALLET                  BankingProductFeature_BankingProductFeatureFeatureType = 13
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_BANKING                 BankingProductFeature_BankingProductFeatureFeatureType = 14
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_PAYID                       BankingProductFeature_BankingProductFeatureFeatureType = 15
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_ENABLED                     BankingProductFeature_BankingProductFeatureFeatureType = 16
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DONATE_INTEREST                 BankingProductFeature_BankingProductFeatureFeatureType = 17
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BILL_PAYMENT                    BankingProductFeature_BankingProductFeatureFeatureType = 18
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_COMPLEMENTARY_PRODUCT_DISCOUNTS BankingProductFeature_BankingProductFeatureFeatureType = 19
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BONUS_REWARDS                   BankingProductFeature_BankingProductFeatureFeatureType = 20
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NOTIFICATIONS                   BankingProductFeature_BankingProductFeatureFeatureType = 21
	BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OTHER                           BankingProductFeature_BankingProductFeatureFeatureType = 22
)

var BankingProductFeature_BankingProductFeatureFeatureType_name = map[int32]string{
	0:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_CARD_ACCESS",
	1:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_ADDITIONAL_CARDS",
	2:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_UNLIMITED_TXNS",
	3:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS",
	4:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS_ALLOWANCE",
	5:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_LOYALTY_PROGRAM",
	6:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OFFSET",
	7:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OVERDRAFT",
	8:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_REDRAW",
	9:  "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INSURANCE",
	10: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BALANCE_TRANSFERS",
	11: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE",
	12: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE_TRANSFERS",
	13: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_WALLET",
	14: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_BANKING",
	15: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_PAYID",
	16: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_ENABLED",
	17: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DONATE_INTEREST",
	18: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BILL_PAYMENT",
	19: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_COMPLEMENTARY_PRODUCT_DISCOUNTS",
	20: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BONUS_REWARDS",
	21: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NOTIFICATIONS",
	22: "BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OTHER",
}

var BankingProductFeature_BankingProductFeatureFeatureType_value = map[string]int32{
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_CARD_ACCESS":                     0,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_ADDITIONAL_CARDS":                1,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_UNLIMITED_TXNS":                  2,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS":                       3,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_FREE_TXNS_ALLOWANCE":             4,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_LOYALTY_PROGRAM":                 5,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OFFSET":                          6,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OVERDRAFT":                       7,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_REDRAW":                          8,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INSURANCE":                       9,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BALANCE_TRANSFERS":               10,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE":                   11,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_INTEREST_FREE_TRANSFERS":         12,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_WALLET":                  13,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DIGITAL_BANKING":                 14,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_PAYID":                       15,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NPP_ENABLED":                     16,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_DONATE_INTEREST":                 17,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BILL_PAYMENT":                    18,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_COMPLEMENTARY_PRODUCT_DISCOUNTS": 19,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_BONUS_REWARDS":                   20,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_NOTIFICATIONS":                   21,
	"BANKING_PRODUCT_FEATURE_FEATURE_TYPE_OTHER":                           22,
}

func (x BankingProductFeature_BankingProductFeatureFeatureType) String() string {
	return proto.EnumName(BankingProductFeature_BankingProductFeatureFeatureType_name, int32(x))
}

func (BankingProductFeature_BankingProductFeatureFeatureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{26, 0}
}

type BankingProductFee_BankingProductFeeFeeType int32

const (
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_PERIODIC    BankingProductFee_BankingProductFeeFeeType = 0
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_TRANSACTION BankingProductFee_BankingProductFeeFeeType = 1
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_WITHDRAWAL  BankingProductFee_BankingProductFeeFeeType = 2
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_DEPOSIT     BankingProductFee_BankingProductFeeFeeType = 3
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_PAYMENT     BankingProductFee_BankingProductFeeFeeType = 4
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_PURCHASE    BankingProductFee_BankingProductFeeFeeType = 5
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_EVENT       BankingProductFee_BankingProductFeeFeeType = 6
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_UPFRONT     BankingProductFee_BankingProductFeeFeeType = 7
	BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_EXIT        BankingProductFee_BankingProductFeeFeeType = 8
)

var BankingProductFee_BankingProductFeeFeeType_name = map[int32]string{
	0: "BANKING_PRODUCT_FEE_FEE_TYPE_PERIODIC",
	1: "BANKING_PRODUCT_FEE_FEE_TYPE_TRANSACTION",
	2: "BANKING_PRODUCT_FEE_FEE_TYPE_WITHDRAWAL",
	3: "BANKING_PRODUCT_FEE_FEE_TYPE_DEPOSIT",
	4: "BANKING_PRODUCT_FEE_FEE_TYPE_PAYMENT",
	5: "BANKING_PRODUCT_FEE_FEE_TYPE_PURCHASE",
	6: "BANKING_PRODUCT_FEE_FEE_TYPE_EVENT",
	7: "BANKING_PRODUCT_FEE_FEE_TYPE_UPFRONT",
	8: "BANKING_PRODUCT_FEE_FEE_TYPE_EXIT",
}

var BankingProductFee_BankingProductFeeFeeType_value = map[string]int32{
	"BANKING_PRODUCT_FEE_FEE_TYPE_PERIODIC":    0,
	"BANKING_PRODUCT_FEE_FEE_TYPE_TRANSACTION": 1,
	"BANKING_PRODUCT_FEE_FEE_TYPE_WITHDRAWAL":  2,
	"BANKING_PRODUCT_FEE_FEE_TYPE_DEPOSIT":     3,
	"BANKING_PRODUCT_FEE_FEE_TYPE_PAYMENT":     4,
	"BANKING_PRODUCT_FEE_FEE_TYPE_PURCHASE":    5,
	"BANKING_PRODUCT_FEE_FEE_TYPE_EVENT":       6,
	"BANKING_PRODUCT_FEE_FEE_TYPE_UPFRONT":     7,
	"BANKING_PRODUCT_FEE_FEE_TYPE_EXIT":        8,
}

func (x BankingProductFee_BankingProductFeeFeeType) String() string {
	return proto.EnumName(BankingProductFee_BankingProductFeeFeeType_name, int32(x))
}

func (BankingProductFee_BankingProductFeeFeeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{27, 0}
}

type BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue int32

const (
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ARREARS BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue = 0
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ADVANCE BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue = 1
)

var BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue_name = map[int32]string{
	0: "BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ARREARS",
	1: "BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ADVANCE",
}

var BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue_value = map[string]int32{
	"BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ARREARS": 0,
	"BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ADVANCE": 1,
}

func (x BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue) String() string {
	return proto.EnumName(BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue_name, int32(x))
}

func (BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{28, 0}
}

type BankingProductLendingRate_BankingProductLendingRateLendingRateType int32

const (
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FIXED                    BankingProductLendingRate_BankingProductLendingRateLendingRateType = 0
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_VARIABLE                 BankingProductLendingRate_BankingProductLendingRateLendingRateType = 1
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_INTRODUCTORY             BankingProductLendingRate_BankingProductLendingRateLendingRateType = 2
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_DISCOUNT                 BankingProductLendingRate_BankingProductLendingRateLendingRateType = 3
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PENALTY                  BankingProductLendingRate_BankingProductLendingRateLendingRateType = 4
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FLOATING                 BankingProductLendingRate_BankingProductLendingRateLendingRateType = 5
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_MARKET_LINKED            BankingProductLendingRate_BankingProductLendingRateLendingRateType = 6
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_CASH_ADVANCE             BankingProductLendingRate_BankingProductLendingRateLendingRateType = 7
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PURCHASE                 BankingProductLendingRate_BankingProductLendingRateLendingRateType = 8
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_FIXED    BankingProductLendingRate_BankingProductLendingRateLendingRateType = 9
	BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_VARIABLE BankingProductLendingRate_BankingProductLendingRateLendingRateType = 10
)

var BankingProductLendingRate_BankingProductLendingRateLendingRateType_name = map[int32]string{
	0:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FIXED",
	1:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_VARIABLE",
	2:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_INTRODUCTORY",
	3:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_DISCOUNT",
	4:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PENALTY",
	5:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FLOATING",
	6:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_MARKET_LINKED",
	7:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_CASH_ADVANCE",
	8:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PURCHASE",
	9:  "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_FIXED",
	10: "BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_VARIABLE",
}

var BankingProductLendingRate_BankingProductLendingRateLendingRateType_value = map[string]int32{
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FIXED":                    0,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_VARIABLE":                 1,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_INTRODUCTORY":             2,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_DISCOUNT":                 3,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PENALTY":                  4,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FLOATING":                 5,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_MARKET_LINKED":            6,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_CASH_ADVANCE":             7,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_PURCHASE":                 8,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_FIXED":    9,
	"BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_BUNDLE_DISCOUNT_VARIABLE": 10,
}

func (x BankingProductLendingRate_BankingProductLendingRateLendingRateType) String() string {
	return proto.EnumName(BankingProductLendingRate_BankingProductLendingRateLendingRateType_name, int32(x))
}

func (BankingProductLendingRate_BankingProductLendingRateLendingRateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{28, 1}
}

type BankingProductRateTier_BankingProductRateTierRateApplicationMethod int32

const (
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE BankingProductRateTier_BankingProductRateTierRateApplicationMethod = 0
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_PER_TIER      BankingProductRateTier_BankingProductRateTierRateApplicationMethod = 1
)

var BankingProductRateTier_BankingProductRateTierRateApplicationMethod_name = map[int32]string{
	0: "BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE",
	1: "BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_PER_TIER",
}

var BankingProductRateTier_BankingProductRateTierRateApplicationMethod_value = map[string]int32{
	"BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE": 0,
	"BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_PER_TIER":      1,
}

func (x BankingProductRateTier_BankingProductRateTierRateApplicationMethod) String() string {
	return proto.EnumName(BankingProductRateTier_BankingProductRateTierRateApplicationMethod_name, int32(x))
}

func (BankingProductRateTier_BankingProductRateTierRateApplicationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{30, 0}
}

type BankingProductRateTier_BankingProductRateTierUnitOfMeasure int32

const (
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DOLLAR  BankingProductRateTier_BankingProductRateTierUnitOfMeasure = 0
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_PERCENT BankingProductRateTier_BankingProductRateTierUnitOfMeasure = 1
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_MONTH   BankingProductRateTier_BankingProductRateTierUnitOfMeasure = 2
	BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DAY     BankingProductRateTier_BankingProductRateTierUnitOfMeasure = 3
)

var BankingProductRateTier_BankingProductRateTierUnitOfMeasure_name = map[int32]string{
	0: "BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DOLLAR",
	1: "BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_PERCENT",
	2: "BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_MONTH",
	3: "BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DAY",
}

var BankingProductRateTier_BankingProductRateTierUnitOfMeasure_value = map[string]int32{
	"BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DOLLAR":  0,
	"BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_PERCENT": 1,
	"BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_MONTH":   2,
	"BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DAY":     3,
}

func (x BankingProductRateTier_BankingProductRateTierUnitOfMeasure) String() string {
	return proto.EnumName(BankingProductRateTier_BankingProductRateTierUnitOfMeasure_name, int32(x))
}

func (BankingProductRateTier_BankingProductRateTierUnitOfMeasure) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{30, 1}
}

type BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod int32

const (
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod = 0
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_PER_TIER      BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod = 1
)

var BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod_name = map[int32]string{
	0: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE",
	1: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_PER_TIER",
}

var BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod_value = map[string]int32{
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE": 0,
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_PER_TIER":      1,
}

func (x BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod) String() string {
	return proto.EnumName(BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod_name, int32(x))
}

func (BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{31, 0}
}

type BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure int32

const (
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DOLLAR  BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure = 0
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_PERCENT BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure = 1
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_MONTH   BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure = 2
	BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DAY     BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure = 3
)

var BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure_name = map[int32]string{
	0: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DOLLAR",
	1: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_PERCENT",
	2: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_MONTH",
	3: "BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DAY",
}

var BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure_value = map[string]int32{
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DOLLAR":  0,
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_PERCENT": 1,
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_MONTH":   2,
	"BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DAY":     3,
}

func (x BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure) String() string {
	return proto.EnumName(BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure_name, int32(x))
}

func (BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{31, 1}
}

type BankingScheduledPayment_BankingScheduledPaymentStatus int32

const (
	BankingScheduledPayment_BANKING_SCHEDULED_PAYMENT_STATUS_ACTIVE   BankingScheduledPayment_BankingScheduledPaymentStatus = 0
	BankingScheduledPayment_BANKING_SCHEDULED_PAYMENT_STATUS_SKIP     BankingScheduledPayment_BankingScheduledPaymentStatus = 1
	BankingScheduledPayment_BANKING_SCHEDULED_PAYMENT_STATUS_INACTIVE BankingScheduledPayment_BankingScheduledPaymentStatus = 2
)

var BankingScheduledPayment_BankingScheduledPaymentStatus_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_STATUS_ACTIVE",
	1: "BANKING_SCHEDULED_PAYMENT_STATUS_SKIP",
	2: "BANKING_SCHEDULED_PAYMENT_STATUS_INACTIVE",
}

var BankingScheduledPayment_BankingScheduledPaymentStatus_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_STATUS_ACTIVE":   0,
	"BANKING_SCHEDULED_PAYMENT_STATUS_SKIP":     1,
	"BANKING_SCHEDULED_PAYMENT_STATUS_INACTIVE": 2,
}

func (x BankingScheduledPayment_BankingScheduledPaymentStatus) String() string {
	return proto.EnumName(BankingScheduledPayment_BankingScheduledPaymentStatus_name, int32(x))
}

func (BankingScheduledPayment_BankingScheduledPaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{35, 0}
}

type BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType int32

const (
	BankingScheduledPaymentRecurrence_BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_ONCE_OFF          BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType = 0
	BankingScheduledPaymentRecurrence_BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_INTERVAL_SCHEDULE BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType = 1
	BankingScheduledPaymentRecurrence_BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_LAST_WEEK_DAY     BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType = 2
	BankingScheduledPaymentRecurrence_BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_EVENT_BASED       BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType = 3
)

var BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_ONCE_OFF",
	1: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_INTERVAL_SCHEDULE",
	2: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_LAST_WEEK_DAY",
	3: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_EVENT_BASED",
}

var BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_ONCE_OFF":          0,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_INTERVAL_SCHEDULE": 1,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_LAST_WEEK_DAY":     2,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_EVENT_BASED":       3,
}

func (x BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType) String() string {
	return proto.EnumName(BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType_name, int32(x))
}

func (BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{38, 0}
}

type BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment int32

const (
	BankingScheduledPaymentRecurrenceIntervalSchedule_BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_AFTER  BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment = 0
	BankingScheduledPaymentRecurrenceIntervalSchedule_BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_BEFORE BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment = 1
	BankingScheduledPaymentRecurrenceIntervalSchedule_BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ON     BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment = 2
	BankingScheduledPaymentRecurrenceIntervalSchedule_BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ONLY   BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment = 3
)

var BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_AFTER",
	1: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_BEFORE",
	2: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ON",
	3: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ONLY",
}

var BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_AFTER":  0,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_BEFORE": 1,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ON":     2,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_ONLY":   3,
}

func (x BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment) String() string {
	return proto.EnumName(BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment_name, int32(x))
}

func (BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{40, 0}
}

type BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay int32

const (
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_MON BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 0
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_TUE BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 1
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_WED BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 2
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_THU BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 3
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_FRI BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 4
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SAT BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 5
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SUN BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay = 6
)

var BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_MON",
	1: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_TUE",
	2: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_WED",
	3: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_THU",
	4: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_FRI",
	5: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SAT",
	6: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SUN",
}

var BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_MON": 0,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_TUE": 1,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_WED": 2,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_THU": 3,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_FRI": 4,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SAT": 5,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_SUN": 6,
}

func (x BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay) String() string {
	return proto.EnumName(BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay_name, int32(x))
}

func (BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{41, 0}
}

type BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment int32

const (
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_AFTER  BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment = 0
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_BEFORE BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment = 1
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ON     BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment = 2
	BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ONLY   BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment = 3
)

var BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_AFTER",
	1: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_BEFORE",
	2: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ON",
	3: "BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ONLY",
}

var BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_AFTER":  0,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_BEFORE": 1,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ON":     2,
	"BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_ONLY":   3,
}

func (x BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment) String() string {
	return proto.EnumName(BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment_name, int32(x))
}

func (BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{41, 1}
}

type BankingScheduledPaymentTo_BankingScheduledPaymentToToUType int32

const (
	BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_ACCOUNT_ID    BankingScheduledPaymentTo_BankingScheduledPaymentToToUType = 0
	BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_PAYEE_ID      BankingScheduledPaymentTo_BankingScheduledPaymentToToUType = 1
	BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_DOMESTIC      BankingScheduledPaymentTo_BankingScheduledPaymentToToUType = 2
	BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_BILLER        BankingScheduledPaymentTo_BankingScheduledPaymentToToUType = 3
	BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_INTERNATIONAL BankingScheduledPaymentTo_BankingScheduledPaymentToToUType = 4
)

var BankingScheduledPaymentTo_BankingScheduledPaymentToToUType_name = map[int32]string{
	0: "BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_ACCOUNT_ID",
	1: "BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_PAYEE_ID",
	2: "BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_DOMESTIC",
	3: "BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_BILLER",
	4: "BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_INTERNATIONAL",
}

var BankingScheduledPaymentTo_BankingScheduledPaymentToToUType_value = map[string]int32{
	"BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_ACCOUNT_ID":    0,
	"BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_PAYEE_ID":      1,
	"BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_DOMESTIC":      2,
	"BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_BILLER":        3,
	"BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_INTERNATIONAL": 4,
}

func (x BankingScheduledPaymentTo_BankingScheduledPaymentToToUType) String() string {
	return proto.EnumName(BankingScheduledPaymentTo_BankingScheduledPaymentToToUType_name, int32(x))
}

func (BankingScheduledPaymentTo_BankingScheduledPaymentToToUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{44, 0}
}

type BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions int32

const (
	BankingTermDepositAccount_BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_ROLLED_OVER          BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions = 0
	BankingTermDepositAccount_BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_PAID_OUT_AT_MATURITY BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions = 1
)

var BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions_name = map[int32]string{
	0: "BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_ROLLED_OVER",
	1: "BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_PAID_OUT_AT_MATURITY",
}

var BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions_value = map[string]int32{
	"BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_ROLLED_OVER":          0,
	"BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_PAID_OUT_AT_MATURITY": 1,
}

func (x BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions) String() string {
	return proto.EnumName(BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions_name, int32(x))
}

func (BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{45, 0}
}

type BankingTransaction_BankingTransactionStatus int32

const (
	BankingTransaction_BANKING_TRANSACTION_STATUS_PENDING BankingTransaction_BankingTransactionStatus = 0
	BankingTransaction_BANKING_TRANSACTION_STATUS_POSTED  BankingTransaction_BankingTransactionStatus = 1
)

var BankingTransaction_BankingTransactionStatus_name = map[int32]string{
	0: "BANKING_TRANSACTION_STATUS_PENDING",
	1: "BANKING_TRANSACTION_STATUS_POSTED",
}

var BankingTransaction_BankingTransactionStatus_value = map[string]int32{
	"BANKING_TRANSACTION_STATUS_PENDING": 0,
	"BANKING_TRANSACTION_STATUS_POSTED":  1,
}

func (x BankingTransaction_BankingTransactionStatus) String() string {
	return proto.EnumName(BankingTransaction_BankingTransactionStatus_name, int32(x))
}

func (BankingTransaction_BankingTransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{46, 0}
}

type BankingTransaction_BankingTransactionType int32

const (
	BankingTransaction_BANKING_TRANSACTION_TYPE_FEE               BankingTransaction_BankingTransactionType = 0
	BankingTransaction_BANKING_TRANSACTION_TYPE_INTEREST_CHARGED  BankingTransaction_BankingTransactionType = 1
	BankingTransaction_BANKING_TRANSACTION_TYPE_INTEREST_PAID     BankingTransaction_BankingTransactionType = 2
	BankingTransaction_BANKING_TRANSACTION_TYPE_TRANSFER_OUTGOING BankingTransaction_BankingTransactionType = 3
	BankingTransaction_BANKING_TRANSACTION_TYPE_TRANSFER_INCOMING BankingTransaction_BankingTransactionType = 4
	BankingTransaction_BANKING_TRANSACTION_TYPE_PAYMENT           BankingTransaction_BankingTransactionType = 5
	BankingTransaction_BANKING_TRANSACTION_TYPE_DIRECT_DEBIT      BankingTransaction_BankingTransactionType = 6
	BankingTransaction_BANKING_TRANSACTION_TYPE_OTHER             BankingTransaction_BankingTransactionType = 7
)

var BankingTransaction_BankingTransactionType_name = map[int32]string{
	0: "BANKING_TRANSACTION_TYPE_FEE",
	1: "BANKING_TRANSACTION_TYPE_INTEREST_CHARGED",
	2: "BANKING_TRANSACTION_TYPE_INTEREST_PAID",
	3: "BANKING_TRANSACTION_TYPE_TRANSFER_OUTGOING",
	4: "BANKING_TRANSACTION_TYPE_TRANSFER_INCOMING",
	5: "BANKING_TRANSACTION_TYPE_PAYMENT",
	6: "BANKING_TRANSACTION_TYPE_DIRECT_DEBIT",
	7: "BANKING_TRANSACTION_TYPE_OTHER",
}

var BankingTransaction_BankingTransactionType_value = map[string]int32{
	"BANKING_TRANSACTION_TYPE_FEE":               0,
	"BANKING_TRANSACTION_TYPE_INTEREST_CHARGED":  1,
	"BANKING_TRANSACTION_TYPE_INTEREST_PAID":     2,
	"BANKING_TRANSACTION_TYPE_TRANSFER_OUTGOING": 3,
	"BANKING_TRANSACTION_TYPE_TRANSFER_INCOMING": 4,
	"BANKING_TRANSACTION_TYPE_PAYMENT":           5,
	"BANKING_TRANSACTION_TYPE_DIRECT_DEBIT":      6,
	"BANKING_TRANSACTION_TYPE_OTHER":             7,
}

func (x BankingTransaction_BankingTransactionType) String() string {
	return proto.EnumName(BankingTransaction_BankingTransactionType_name, int32(x))
}

func (BankingTransaction_BankingTransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{46, 1}
}

type BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType int32

const (
	BankingTransactionDetailExtendedData_BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_EXTENSION_U_TYPE_X2P101_PAYLOAD BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType = 0
)

var BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType_name = map[int32]string{
	0: "BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_EXTENSION_U_TYPE_X2P101_PAYLOAD",
}

var BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType_value = map[string]int32{
	"BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_EXTENSION_U_TYPE_X2P101_PAYLOAD": 0,
}

func (x BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType) String() string {
	return proto.EnumName(BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType_name, int32(x))
}

func (BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{48, 0}
}

type BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService int32

const (
	BankingTransactionDetailExtendedData_BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_SERVICE_X2_P101 BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService = 0
)

var BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService_name = map[int32]string{
	0: "BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_SERVICE_X2_P101",
}

var BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService_value = map[string]int32{
	"BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_SERVICE_X2_P101": 0,
}

func (x BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService) String() string {
	return proto.EnumName(BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService_name, int32(x))
}

func (BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{48, 1}
}

type CommonEmailAddress_CommonEmailAddressPurpose int32

const (
	CommonEmailAddress_COMMON_EMAIL_ADDRESS_PURPOSE_WORK        CommonEmailAddress_CommonEmailAddressPurpose = 0
	CommonEmailAddress_COMMON_EMAIL_ADDRESS_PURPOSE_HOME        CommonEmailAddress_CommonEmailAddressPurpose = 1
	CommonEmailAddress_COMMON_EMAIL_ADDRESS_PURPOSE_OTHER       CommonEmailAddress_CommonEmailAddressPurpose = 2
	CommonEmailAddress_COMMON_EMAIL_ADDRESS_PURPOSE_UNSPECIFIED CommonEmailAddress_CommonEmailAddressPurpose = 3
)

var CommonEmailAddress_CommonEmailAddressPurpose_name = map[int32]string{
	0: "COMMON_EMAIL_ADDRESS_PURPOSE_WORK",
	1: "COMMON_EMAIL_ADDRESS_PURPOSE_HOME",
	2: "COMMON_EMAIL_ADDRESS_PURPOSE_OTHER",
	3: "COMMON_EMAIL_ADDRESS_PURPOSE_UNSPECIFIED",
}

var CommonEmailAddress_CommonEmailAddressPurpose_value = map[string]int32{
	"COMMON_EMAIL_ADDRESS_PURPOSE_WORK":        0,
	"COMMON_EMAIL_ADDRESS_PURPOSE_HOME":        1,
	"COMMON_EMAIL_ADDRESS_PURPOSE_OTHER":       2,
	"COMMON_EMAIL_ADDRESS_PURPOSE_UNSPECIFIED": 3,
}

func (x CommonEmailAddress_CommonEmailAddressPurpose) String() string {
	return proto.EnumName(CommonEmailAddress_CommonEmailAddressPurpose_name, int32(x))
}

func (CommonEmailAddress_CommonEmailAddressPurpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{50, 0}
}

type CommonOrganisation_CommonOrganisationOrganisationType int32

const (
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_SOLE_TRADER       CommonOrganisation_CommonOrganisationOrganisationType = 0
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_COMPANY           CommonOrganisation_CommonOrganisationOrganisationType = 1
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_PARTNERSHIP       CommonOrganisation_CommonOrganisationOrganisationType = 2
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_TRUST             CommonOrganisation_CommonOrganisationOrganisationType = 3
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_GOVERNMENT_ENTITY CommonOrganisation_CommonOrganisationOrganisationType = 4
	CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_OTHER             CommonOrganisation_CommonOrganisationOrganisationType = 5
)

var CommonOrganisation_CommonOrganisationOrganisationType_name = map[int32]string{
	0: "COMMON_ORGANISATION_ORGANISATION_TYPE_SOLE_TRADER",
	1: "COMMON_ORGANISATION_ORGANISATION_TYPE_COMPANY",
	2: "COMMON_ORGANISATION_ORGANISATION_TYPE_PARTNERSHIP",
	3: "COMMON_ORGANISATION_ORGANISATION_TYPE_TRUST",
	4: "COMMON_ORGANISATION_ORGANISATION_TYPE_GOVERNMENT_ENTITY",
	5: "COMMON_ORGANISATION_ORGANISATION_TYPE_OTHER",
}

var CommonOrganisation_CommonOrganisationOrganisationType_value = map[string]int32{
	"COMMON_ORGANISATION_ORGANISATION_TYPE_SOLE_TRADER":       0,
	"COMMON_ORGANISATION_ORGANISATION_TYPE_COMPANY":           1,
	"COMMON_ORGANISATION_ORGANISATION_TYPE_PARTNERSHIP":       2,
	"COMMON_ORGANISATION_ORGANISATION_TYPE_TRUST":             3,
	"COMMON_ORGANISATION_ORGANISATION_TYPE_GOVERNMENT_ENTITY": 4,
	"COMMON_ORGANISATION_ORGANISATION_TYPE_OTHER":             5,
}

func (x CommonOrganisation_CommonOrganisationOrganisationType) String() string {
	return proto.EnumName(CommonOrganisation_CommonOrganisationOrganisationType_name, int32(x))
}

func (CommonOrganisation_CommonOrganisationOrganisationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{51, 0}
}

type CommonPhoneNumber_CommonPhoneNumberPurpose int32

const (
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_MOBILE        CommonPhoneNumber_CommonPhoneNumberPurpose = 0
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_HOME          CommonPhoneNumber_CommonPhoneNumberPurpose = 1
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_WORK          CommonPhoneNumber_CommonPhoneNumberPurpose = 2
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_OTHER         CommonPhoneNumber_CommonPhoneNumberPurpose = 3
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_INTERNATIONAL CommonPhoneNumber_CommonPhoneNumberPurpose = 4
	CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_UNSPECIFIED   CommonPhoneNumber_CommonPhoneNumberPurpose = 5
)

var CommonPhoneNumber_CommonPhoneNumberPurpose_name = map[int32]string{
	0: "COMMON_PHONE_NUMBER_PURPOSE_MOBILE",
	1: "COMMON_PHONE_NUMBER_PURPOSE_HOME",
	2: "COMMON_PHONE_NUMBER_PURPOSE_WORK",
	3: "COMMON_PHONE_NUMBER_PURPOSE_OTHER",
	4: "COMMON_PHONE_NUMBER_PURPOSE_INTERNATIONAL",
	5: "COMMON_PHONE_NUMBER_PURPOSE_UNSPECIFIED",
}

var CommonPhoneNumber_CommonPhoneNumberPurpose_value = map[string]int32{
	"COMMON_PHONE_NUMBER_PURPOSE_MOBILE":        0,
	"COMMON_PHONE_NUMBER_PURPOSE_HOME":          1,
	"COMMON_PHONE_NUMBER_PURPOSE_WORK":          2,
	"COMMON_PHONE_NUMBER_PURPOSE_OTHER":         3,
	"COMMON_PHONE_NUMBER_PURPOSE_INTERNATIONAL": 4,
	"COMMON_PHONE_NUMBER_PURPOSE_UNSPECIFIED":   5,
}

func (x CommonPhoneNumber_CommonPhoneNumberPurpose) String() string {
	return proto.EnumName(CommonPhoneNumber_CommonPhoneNumberPurpose_name, int32(x))
}

func (CommonPhoneNumber_CommonPhoneNumberPurpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{56, 0}
}

type CommonPhysicalAddress_CommonPhysicalAddressAddressUType int32

const (
	CommonPhysicalAddress_COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_SIMPLE CommonPhysicalAddress_CommonPhysicalAddressAddressUType = 0
	CommonPhysicalAddress_COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_PAF    CommonPhysicalAddress_CommonPhysicalAddressAddressUType = 1
)

var CommonPhysicalAddress_CommonPhysicalAddressAddressUType_name = map[int32]string{
	0: "COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_SIMPLE",
	1: "COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_PAF",
}

var CommonPhysicalAddress_CommonPhysicalAddressAddressUType_value = map[string]int32{
	"COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_SIMPLE": 0,
	"COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_PAF":    1,
}

func (x CommonPhysicalAddress_CommonPhysicalAddressAddressUType) String() string {
	return proto.EnumName(CommonPhysicalAddress_CommonPhysicalAddressAddressUType_name, int32(x))
}

func (CommonPhysicalAddress_CommonPhysicalAddressAddressUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{57, 0}
}

type ListAccountsRequest_ListAccountsRequestOpenStatus int32

const (
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_OPEN_STATUS_OPEN   ListAccountsRequest_ListAccountsRequestOpenStatus = 0
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_OPEN_STATUS_CLOSED ListAccountsRequest_ListAccountsRequestOpenStatus = 1
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_OPEN_STATUS_ALL    ListAccountsRequest_ListAccountsRequestOpenStatus = 2
)

var ListAccountsRequest_ListAccountsRequestOpenStatus_name = map[int32]string{
	0: "LIST_ACCOUNTS_REQUEST_OPEN_STATUS_OPEN",
	1: "LIST_ACCOUNTS_REQUEST_OPEN_STATUS_CLOSED",
	2: "LIST_ACCOUNTS_REQUEST_OPEN_STATUS_ALL",
}

var ListAccountsRequest_ListAccountsRequestOpenStatus_value = map[string]int32{
	"LIST_ACCOUNTS_REQUEST_OPEN_STATUS_OPEN":   0,
	"LIST_ACCOUNTS_REQUEST_OPEN_STATUS_CLOSED": 1,
	"LIST_ACCOUNTS_REQUEST_OPEN_STATUS_ALL":    2,
}

func (x ListAccountsRequest_ListAccountsRequestOpenStatus) String() string {
	return proto.EnumName(ListAccountsRequest_ListAccountsRequestOpenStatus_name, int32(x))
}

func (ListAccountsRequest_ListAccountsRequestOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{73, 0}
}

type ListAccountsRequest_ListAccountsRequestProductCategory int32

const (
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS ListAccountsRequest_ListAccountsRequestProductCategory = 0
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS              ListAccountsRequest_ListAccountsRequestProductCategory = 1
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS               ListAccountsRequest_ListAccountsRequestProductCategory = 2
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS   ListAccountsRequest_ListAccountsRequestProductCategory = 3
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES      ListAccountsRequest_ListAccountsRequestProductCategory = 4
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS        ListAccountsRequest_ListAccountsRequestProductCategory = 5
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS                 ListAccountsRequest_ListAccountsRequestProductCategory = 6
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS               ListAccountsRequest_ListAccountsRequestProductCategory = 7
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_LEASES                     ListAccountsRequest_ListAccountsRequestProductCategory = 8
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE              ListAccountsRequest_ListAccountsRequestProductCategory = 9
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS                 ListAccountsRequest_ListAccountsRequestProductCategory = 10
	ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS             ListAccountsRequest_ListAccountsRequestProductCategory = 11
)

var ListAccountsRequest_ListAccountsRequestProductCategory_name = map[int32]string{
	0:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS",
	2:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS",
	3:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS",
	4:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES",
	5:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS",
	6:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS",
	7:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS",
	8:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_LEASES",
	9:  "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE",
	10: "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS",
	11: "LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS",
}

var ListAccountsRequest_ListAccountsRequestProductCategory_value = map[string]int32{
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS":              1,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS":               2,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS":   3,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES":      4,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS":        5,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS":                 6,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS":               7,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_LEASES":                     8,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE":              9,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS":                 10,
	"LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS":             11,
}

func (x ListAccountsRequest_ListAccountsRequestProductCategory) String() string {
	return proto.EnumName(ListAccountsRequest_ListAccountsRequestProductCategory_name, int32(x))
}

func (ListAccountsRequest_ListAccountsRequestProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{73, 1}
}

type ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus int32

const (
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_OPEN   ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus = 0
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_CLOSED ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus = 1
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_ALL    ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus = 2
)

var ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus_name = map[int32]string{
	0: "LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_OPEN",
	1: "LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_CLOSED",
	2: "LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_ALL",
}

var ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus_value = map[string]int32{
	"LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_OPEN":   0,
	"LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_CLOSED": 1,
	"LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_ALL":    2,
}

func (x ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus) String() string {
	return proto.EnumName(ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus_name, int32(x))
}

func (ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{74, 0}
}

type ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory int32

const (
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 0
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS              ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 1
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS               ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 2
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS   ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 3
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES      ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 4
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS        ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 5
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS                 ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 6
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS               ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 7
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_LEASES                     ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 8
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE              ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 9
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS                 ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 10
	ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS             ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory = 11
)

var ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory_name = map[int32]string{
	0:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS",
	2:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS",
	3:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS",
	4:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES",
	5:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS",
	6:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS",
	7:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS",
	8:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_LEASES",
	9:  "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE",
	10: "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS",
	11: "LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS",
}

var ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory_value = map[string]int32{
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS":              1,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS":               2,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS":   3,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES":      4,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS":        5,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS":                 6,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS":               7,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_LEASES":                     8,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE":              9,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS":                 10,
	"LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS":             11,
}

func (x ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory) String() string {
	return proto.EnumName(ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory_name, int32(x))
}

func (ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{74, 1}
}

type ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus int32

const (
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_OPEN   ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus = 0
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_CLOSED ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus = 1
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_ALL    ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus = 2
)

var ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus_name = map[int32]string{
	0: "LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_OPEN",
	1: "LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_CLOSED",
	2: "LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_ALL",
}

var ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus_value = map[string]int32{
	"LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_OPEN":   0,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_CLOSED": 1,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_ALL":    2,
}

func (x ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus) String() string {
	return proto.EnumName(ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus_name, int32(x))
}

func (ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{76, 0}
}

type ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory int32

const (
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 0
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS              ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 1
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS               ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 2
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS   ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 3
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES      ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 4
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS        ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 5
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS                 ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 6
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS               ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 7
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES                     ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 8
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE              ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 9
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS                 ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 10
	ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS             ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory = 11
)

var ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory_name = map[int32]string{
	0:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS",
	2:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS",
	3:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS",
	4:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES",
	5:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS",
	6:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS",
	7:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS",
	8:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES",
	9:  "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE",
	10: "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS",
	11: "LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS",
}

var ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory_value = map[string]int32{
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS":              1,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS":               2,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS":   3,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES":      4,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS":        5,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS":                 6,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS":               7,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES":                     8,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE":              9,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS":                 10,
	"LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS":             11,
}

func (x ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory) String() string {
	return proto.EnumName(ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory_name, int32(x))
}

func (ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{76, 1}
}

type ListPayeesRequest_ListPayeesRequestType int32

const (
	ListPayeesRequest_LIST_PAYEES_REQUEST_TYPE_DOMESTIC      ListPayeesRequest_ListPayeesRequestType = 0
	ListPayeesRequest_LIST_PAYEES_REQUEST_TYPE_INTERNATIONAL ListPayeesRequest_ListPayeesRequestType = 1
	ListPayeesRequest_LIST_PAYEES_REQUEST_TYPE_BILLER        ListPayeesRequest_ListPayeesRequestType = 2
	ListPayeesRequest_LIST_PAYEES_REQUEST_TYPE_ALL           ListPayeesRequest_ListPayeesRequestType = 3
)

var ListPayeesRequest_ListPayeesRequestType_name = map[int32]string{
	0: "LIST_PAYEES_REQUEST_TYPE_DOMESTIC",
	1: "LIST_PAYEES_REQUEST_TYPE_INTERNATIONAL",
	2: "LIST_PAYEES_REQUEST_TYPE_BILLER",
	3: "LIST_PAYEES_REQUEST_TYPE_ALL",
}

var ListPayeesRequest_ListPayeesRequestType_value = map[string]int32{
	"LIST_PAYEES_REQUEST_TYPE_DOMESTIC":      0,
	"LIST_PAYEES_REQUEST_TYPE_INTERNATIONAL": 1,
	"LIST_PAYEES_REQUEST_TYPE_BILLER":        2,
	"LIST_PAYEES_REQUEST_TYPE_ALL":           3,
}

func (x ListPayeesRequest_ListPayeesRequestType) String() string {
	return proto.EnumName(ListPayeesRequest_ListPayeesRequestType_name, int32(x))
}

func (ListPayeesRequest_ListPayeesRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{79, 0}
}

type ListProductsRequest_ListProductsRequestEffective int32

const (
	ListProductsRequest_LIST_PRODUCTS_REQUEST_EFFECTIVE_CURRENT ListProductsRequest_ListProductsRequestEffective = 0
	ListProductsRequest_LIST_PRODUCTS_REQUEST_EFFECTIVE_FUTURE  ListProductsRequest_ListProductsRequestEffective = 1
	ListProductsRequest_LIST_PRODUCTS_REQUEST_EFFECTIVE_ALL     ListProductsRequest_ListProductsRequestEffective = 2
)

var ListProductsRequest_ListProductsRequestEffective_name = map[int32]string{
	0: "LIST_PRODUCTS_REQUEST_EFFECTIVE_CURRENT",
	1: "LIST_PRODUCTS_REQUEST_EFFECTIVE_FUTURE",
	2: "LIST_PRODUCTS_REQUEST_EFFECTIVE_ALL",
}

var ListProductsRequest_ListProductsRequestEffective_value = map[string]int32{
	"LIST_PRODUCTS_REQUEST_EFFECTIVE_CURRENT": 0,
	"LIST_PRODUCTS_REQUEST_EFFECTIVE_FUTURE":  1,
	"LIST_PRODUCTS_REQUEST_EFFECTIVE_ALL":     2,
}

func (x ListProductsRequest_ListProductsRequestEffective) String() string {
	return proto.EnumName(ListProductsRequest_ListProductsRequestEffective_name, int32(x))
}

func (ListProductsRequest_ListProductsRequestEffective) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{80, 0}
}

type ListProductsRequest_ListProductsRequestProductCategory int32

const (
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS ListProductsRequest_ListProductsRequestProductCategory = 0
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS              ListProductsRequest_ListProductsRequestProductCategory = 1
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS               ListProductsRequest_ListProductsRequestProductCategory = 2
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS   ListProductsRequest_ListProductsRequestProductCategory = 3
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES      ListProductsRequest_ListProductsRequestProductCategory = 4
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS        ListProductsRequest_ListProductsRequestProductCategory = 5
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS                 ListProductsRequest_ListProductsRequestProductCategory = 6
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS               ListProductsRequest_ListProductsRequestProductCategory = 7
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_LEASES                     ListProductsRequest_ListProductsRequestProductCategory = 8
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE              ListProductsRequest_ListProductsRequestProductCategory = 9
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS                 ListProductsRequest_ListProductsRequestProductCategory = 10
	ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS             ListProductsRequest_ListProductsRequestProductCategory = 11
)

var ListProductsRequest_ListProductsRequestProductCategory_name = map[int32]string{
	0:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS",
	2:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS",
	3:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS",
	4:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES",
	5:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS",
	6:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS",
	7:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS",
	8:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_LEASES",
	9:  "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE",
	10: "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS",
	11: "LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS",
}

var ListProductsRequest_ListProductsRequestProductCategory_value = map[string]int32{
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS":              1,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS":               2,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS":   3,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES":      4,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS":        5,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_PERS_LOANS":                 6,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS":               7,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_LEASES":                     8,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE":              9,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS":                 10,
	"LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS":             11,
}

func (x ListProductsRequest_ListProductsRequestProductCategory) String() string {
	return proto.EnumName(ListProductsRequest_ListProductsRequestProductCategory_name, int32(x))
}

func (ListProductsRequest_ListProductsRequestProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{80, 1}
}

type ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus int32

const (
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_OPEN   ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus = 0
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_CLOSED ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus = 1
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_ALL    ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus = 2
)

var ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus_name = map[int32]string{
	0: "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_OPEN",
	1: "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_CLOSED",
	2: "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_ALL",
}

var ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus_value = map[string]int32{
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_OPEN":   0,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_CLOSED": 1,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_ALL":    2,
}

func (x ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus) String() string {
	return proto.EnumName(ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus_name, int32(x))
}

func (ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{81, 0}
}

type ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory int32

const (
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 0
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS              ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 1
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS               ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 2
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS   ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 3
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES      ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 4
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS        ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 5
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS                 ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 6
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS               ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 7
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES                     ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 8
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE              ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 9
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS                 ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 10
	ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS             ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory = 11
)

var ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory_name = map[int32]string{
	0:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS",
	1:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS",
	2:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS",
	3:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS",
	4:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES",
	5:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS",
	6:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS",
	7:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS",
	8:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES",
	9:  "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE",
	10: "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS",
	11: "LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS",
}

var ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory_value = map[string]int32{
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS": 0,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TERM_DEPOSITS":              1,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRAVEL_CARDS":               2,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_REGULATED_TRUST_ACCOUNTS":   3,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_RESIDENTIAL_MORTGAGES":      4,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_CRED_AND_CHRG_CARDS":        5,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_PERS_LOANS":                 6,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_MARGIN_LOANS":               7,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_LEASES":                     8,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRADE_FINANCE":              9,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_OVERDRAFTS":                 10,
	"LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_BUSINESS_LOANS":             11,
}

func (x ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory) String() string {
	return proto.EnumName(ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory_name, int32(x))
}

func (ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{81, 1}
}

type ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType int32

const (
	ResponseCommonCustomerData_RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_PERSON       ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType = 0
	ResponseCommonCustomerData_RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_ORGANISATION ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType = 1
)

var ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType_name = map[int32]string{
	0: "RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_PERSON",
	1: "RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_ORGANISATION",
}

var ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType_value = map[string]int32{
	"RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_PERSON":       0,
	"RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_ORGANISATION": 1,
}

func (x ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType) String() string {
	return proto.EnumName(ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType_name, int32(x))
}

func (ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{108, 0}
}

type ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType int32

const (
	ResponseCommonCustomerDetailData_RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_PERSON       ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType = 0
	ResponseCommonCustomerDetailData_RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_ORGANISATION ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType = 1
)

var ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType_name = map[int32]string{
	0: "RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_PERSON",
	1: "RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_ORGANISATION",
}

var ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType_value = map[string]int32{
	"RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_PERSON":       0,
	"RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_ORGANISATION": 1,
}

func (x ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType) String() string {
	return proto.EnumName(ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType_name, int32(x))
}

func (ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{110, 0}
}

type ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus int32

const (
	ResponseCommonDiscoveryStatusData_RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_OK               ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus = 0
	ResponseCommonDiscoveryStatusData_RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_PARTIAL_FAILURE  ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus = 1
	ResponseCommonDiscoveryStatusData_RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_UNAVAILABLE      ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus = 2
	ResponseCommonDiscoveryStatusData_RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_SCHEDULED_OUTAGE ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus = 3
)

var ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus_name = map[int32]string{
	0: "RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_OK",
	1: "RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_PARTIAL_FAILURE",
	2: "RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_UNAVAILABLE",
	3: "RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_SCHEDULED_OUTAGE",
}

var ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus_value = map[string]int32{
	"RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_OK":               0,
	"RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_PARTIAL_FAILURE":  1,
	"RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_UNAVAILABLE":      2,
	"RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_SCHEDULED_OUTAGE": 3,
}

func (x ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus) String() string {
	return proto.EnumName(ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus_name, int32(x))
}

func (ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{112, 0}
}

type BankingAccount struct {
	// A unique ID of the account adhering to the standards for ID permanence
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Date that the account was created (if known)
	CreationDate string `protobuf:"bytes,2,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	// The display name of the account as defined by the bank. This should not incorporate account numbers or PANs. If it does the values should be masked according to the rules of the MaskedAccountString common type.
	DisplayName string `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed
	IsOwned bool `protobuf:"varint,4,opt,name=isOwned,proto3" json:"isOwned,omitempty"`
	// A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number
	MaskedNumber string `protobuf:"bytes,5,opt,name=maskedNumber,proto3" json:"maskedNumber,omitempty"`
	// A customer supplied nick name for the account
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// Open or closed status for the account. If not present then OPEN is assumed
	OpenStatus      BankingAccount_BankingAccountOpenStatus `protobuf:"varint,7,opt,name=openStatus,proto3,enum=consumerdatastandards.BankingAccount_BankingAccountOpenStatus" json:"openStatus,omitempty"`
	ProductCategory BankingProductCategory                  `protobuf:"varint,8,opt,name=productCategory,proto3,enum=consumerdatastandards.BankingProductCategory" json:"productCategory,omitempty"`
	// The unique identifier of the account as defined by the data holder (akin to model number for the account)
	ProductName          string   `protobuf:"bytes,9,opt,name=productName,proto3" json:"productName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingAccount) Reset()         { *m = BankingAccount{} }
func (m *BankingAccount) String() string { return proto.CompactTextString(m) }
func (*BankingAccount) ProtoMessage()    {}
func (*BankingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{0}
}

func (m *BankingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingAccount.Unmarshal(m, b)
}
func (m *BankingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingAccount.Marshal(b, m, deterministic)
}
func (m *BankingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingAccount.Merge(m, src)
}
func (m *BankingAccount) XXX_Size() int {
	return xxx_messageInfo_BankingAccount.Size(m)
}
func (m *BankingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingAccount proto.InternalMessageInfo

func (m *BankingAccount) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BankingAccount) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *BankingAccount) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *BankingAccount) GetIsOwned() bool {
	if m != nil {
		return m.IsOwned
	}
	return false
}

func (m *BankingAccount) GetMaskedNumber() string {
	if m != nil {
		return m.MaskedNumber
	}
	return ""
}

func (m *BankingAccount) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *BankingAccount) GetOpenStatus() BankingAccount_BankingAccountOpenStatus {
	if m != nil {
		return m.OpenStatus
	}
	return BankingAccount_BANKING_ACCOUNT_OPEN_STATUS_OPEN
}

func (m *BankingAccount) GetProductCategory() BankingProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return BankingProductCategory_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *BankingAccount) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

type BankingAccountDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingAccountDetail) Reset()         { *m = BankingAccountDetail{} }
func (m *BankingAccountDetail) String() string { return proto.CompactTextString(m) }
func (*BankingAccountDetail) ProtoMessage()    {}
func (*BankingAccountDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{1}
}

func (m *BankingAccountDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingAccountDetail.Unmarshal(m, b)
}
func (m *BankingAccountDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingAccountDetail.Marshal(b, m, deterministic)
}
func (m *BankingAccountDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingAccountDetail.Merge(m, src)
}
func (m *BankingAccountDetail) XXX_Size() int {
	return xxx_messageInfo_BankingAccountDetail.Size(m)
}
func (m *BankingAccountDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingAccountDetail.DiscardUnknown(m)
}

var xxx_messageInfo_BankingAccountDetail proto.InternalMessageInfo

type BankingAuthorisedEntity struct {
	// Australian Business Number for the authorised entity
	Abn string `protobuf:"bytes,1,opt,name=abn,proto3" json:"abn,omitempty"`
	// Australian Company Number for the authorised entity
	Acn string `protobuf:"bytes,2,opt,name=acn,proto3" json:"acn,omitempty"`
	// Australian Registered Body Number for the authorised entity
	Arbn string `protobuf:"bytes,3,opt,name=arbn,proto3" json:"arbn,omitempty"`
	// Description of the authorised entity derived from previously executed direct debits
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Name of the financial institution through which the direct debit will be executed. Is required unless the payment is made via a credit card scheme
	FinancialInstitution string   `protobuf:"bytes,5,opt,name=financialInstitution,proto3" json:"financialInstitution,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingAuthorisedEntity) Reset()         { *m = BankingAuthorisedEntity{} }
func (m *BankingAuthorisedEntity) String() string { return proto.CompactTextString(m) }
func (*BankingAuthorisedEntity) ProtoMessage()    {}
func (*BankingAuthorisedEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{2}
}

func (m *BankingAuthorisedEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingAuthorisedEntity.Unmarshal(m, b)
}
func (m *BankingAuthorisedEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingAuthorisedEntity.Marshal(b, m, deterministic)
}
func (m *BankingAuthorisedEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingAuthorisedEntity.Merge(m, src)
}
func (m *BankingAuthorisedEntity) XXX_Size() int {
	return xxx_messageInfo_BankingAuthorisedEntity.Size(m)
}
func (m *BankingAuthorisedEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingAuthorisedEntity.DiscardUnknown(m)
}

var xxx_messageInfo_BankingAuthorisedEntity proto.InternalMessageInfo

func (m *BankingAuthorisedEntity) GetAbn() string {
	if m != nil {
		return m.Abn
	}
	return ""
}

func (m *BankingAuthorisedEntity) GetAcn() string {
	if m != nil {
		return m.Acn
	}
	return ""
}

func (m *BankingAuthorisedEntity) GetArbn() string {
	if m != nil {
		return m.Arbn
	}
	return ""
}

func (m *BankingAuthorisedEntity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingAuthorisedEntity) GetFinancialInstitution() string {
	if m != nil {
		return m.FinancialInstitution
	}
	return ""
}

type BankingBalance struct {
	// A unique ID of the account adhering to the standards for ID permanence
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent
	AmortisedLimit string `protobuf:"bytes,2,opt,name=amortisedLimit,proto3" json:"amortisedLimit,omitempty"`
	// Balance representing the amount of funds available for transfer. Assumed to be zero or positive
	AvailableBalance string `protobuf:"bytes,3,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	// Object representing the maximum amount of credit that is available for this account. Assumed to be zero if absent
	CreditLimit string `protobuf:"bytes,4,opt,name=creditLimit,proto3" json:"creditLimit,omitempty"`
	// The currency for the balance amounts. If absent assumed to be AUD
	Currency string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	// The balance of the account at this time. Should align to the balance available via other channels such as Internet Banking. Assumed to be negative if the customer has money owing
	CurrentBalance string `protobuf:"bytes,6,opt,name=currentBalance,proto3" json:"currentBalance,omitempty"`
	// Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards
	Purses               []*BankingBalancePurse `protobuf:"bytes,7,rep,name=purses,proto3" json:"purses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BankingBalance) Reset()         { *m = BankingBalance{} }
func (m *BankingBalance) String() string { return proto.CompactTextString(m) }
func (*BankingBalance) ProtoMessage()    {}
func (*BankingBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{3}
}

func (m *BankingBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingBalance.Unmarshal(m, b)
}
func (m *BankingBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingBalance.Marshal(b, m, deterministic)
}
func (m *BankingBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingBalance.Merge(m, src)
}
func (m *BankingBalance) XXX_Size() int {
	return xxx_messageInfo_BankingBalance.Size(m)
}
func (m *BankingBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingBalance.DiscardUnknown(m)
}

var xxx_messageInfo_BankingBalance proto.InternalMessageInfo

func (m *BankingBalance) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BankingBalance) GetAmortisedLimit() string {
	if m != nil {
		return m.AmortisedLimit
	}
	return ""
}

func (m *BankingBalance) GetAvailableBalance() string {
	if m != nil {
		return m.AvailableBalance
	}
	return ""
}

func (m *BankingBalance) GetCreditLimit() string {
	if m != nil {
		return m.CreditLimit
	}
	return ""
}

func (m *BankingBalance) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BankingBalance) GetCurrentBalance() string {
	if m != nil {
		return m.CurrentBalance
	}
	return ""
}

func (m *BankingBalance) GetPurses() []*BankingBalancePurse {
	if m != nil {
		return m.Purses
	}
	return nil
}

type BankingBalancePurse struct {
	// The balance available for this additional currency purse
	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The currency for the purse
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingBalancePurse) Reset()         { *m = BankingBalancePurse{} }
func (m *BankingBalancePurse) String() string { return proto.CompactTextString(m) }
func (*BankingBalancePurse) ProtoMessage()    {}
func (*BankingBalancePurse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{4}
}

func (m *BankingBalancePurse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingBalancePurse.Unmarshal(m, b)
}
func (m *BankingBalancePurse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingBalancePurse.Marshal(b, m, deterministic)
}
func (m *BankingBalancePurse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingBalancePurse.Merge(m, src)
}
func (m *BankingBalancePurse) XXX_Size() int {
	return xxx_messageInfo_BankingBalancePurse.Size(m)
}
func (m *BankingBalancePurse) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingBalancePurse.DiscardUnknown(m)
}

var xxx_messageInfo_BankingBalancePurse proto.InternalMessageInfo

func (m *BankingBalancePurse) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *BankingBalancePurse) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type BankingBillerPayee struct {
	// BPAY Biller Code of the Biller
	BillerCode string `protobuf:"bytes,1,opt,name=billerCode,proto3" json:"billerCode,omitempty"`
	// Name of the Biller
	BillerName string `protobuf:"bytes,2,opt,name=billerName,proto3" json:"billerName,omitempty"`
	// BPAY CRN of the Biller. If the contents of the CRN match the format of a Credit Card PAN then it should be masked using the rules applicable for the MaskedPANString common type
	Crn                  string   `protobuf:"bytes,3,opt,name=crn,proto3" json:"crn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingBillerPayee) Reset()         { *m = BankingBillerPayee{} }
func (m *BankingBillerPayee) String() string { return proto.CompactTextString(m) }
func (*BankingBillerPayee) ProtoMessage()    {}
func (*BankingBillerPayee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{5}
}

func (m *BankingBillerPayee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingBillerPayee.Unmarshal(m, b)
}
func (m *BankingBillerPayee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingBillerPayee.Marshal(b, m, deterministic)
}
func (m *BankingBillerPayee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingBillerPayee.Merge(m, src)
}
func (m *BankingBillerPayee) XXX_Size() int {
	return xxx_messageInfo_BankingBillerPayee.Size(m)
}
func (m *BankingBillerPayee) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingBillerPayee.DiscardUnknown(m)
}

var xxx_messageInfo_BankingBillerPayee proto.InternalMessageInfo

func (m *BankingBillerPayee) GetBillerCode() string {
	if m != nil {
		return m.BillerCode
	}
	return ""
}

func (m *BankingBillerPayee) GetBillerName() string {
	if m != nil {
		return m.BillerName
	}
	return ""
}

func (m *BankingBillerPayee) GetCrn() string {
	if m != nil {
		return m.Crn
	}
	return ""
}

type BankingCreditCardAccount struct {
	// The minimum payment amount due for the next card payment
	MinPaymentAmount string `protobuf:"bytes,1,opt,name=minPaymentAmount,proto3" json:"minPaymentAmount,omitempty"`
	// If absent assumes AUD
	PaymentCurrency string `protobuf:"bytes,2,opt,name=paymentCurrency,proto3" json:"paymentCurrency,omitempty"`
	// The amount due for the next card payment
	PaymentDueAmount string `protobuf:"bytes,3,opt,name=paymentDueAmount,proto3" json:"paymentDueAmount,omitempty"`
	// Date that the next payment for the card is due
	PaymentDueDate       string   `protobuf:"bytes,4,opt,name=paymentDueDate,proto3" json:"paymentDueDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingCreditCardAccount) Reset()         { *m = BankingCreditCardAccount{} }
func (m *BankingCreditCardAccount) String() string { return proto.CompactTextString(m) }
func (*BankingCreditCardAccount) ProtoMessage()    {}
func (*BankingCreditCardAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{6}
}

func (m *BankingCreditCardAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingCreditCardAccount.Unmarshal(m, b)
}
func (m *BankingCreditCardAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingCreditCardAccount.Marshal(b, m, deterministic)
}
func (m *BankingCreditCardAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingCreditCardAccount.Merge(m, src)
}
func (m *BankingCreditCardAccount) XXX_Size() int {
	return xxx_messageInfo_BankingCreditCardAccount.Size(m)
}
func (m *BankingCreditCardAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingCreditCardAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingCreditCardAccount proto.InternalMessageInfo

func (m *BankingCreditCardAccount) GetMinPaymentAmount() string {
	if m != nil {
		return m.MinPaymentAmount
	}
	return ""
}

func (m *BankingCreditCardAccount) GetPaymentCurrency() string {
	if m != nil {
		return m.PaymentCurrency
	}
	return ""
}

func (m *BankingCreditCardAccount) GetPaymentDueAmount() string {
	if m != nil {
		return m.PaymentDueAmount
	}
	return ""
}

func (m *BankingCreditCardAccount) GetPaymentDueDate() string {
	if m != nil {
		return m.PaymentDueDate
	}
	return ""
}

type BankingDirectDebit struct {
	// A unique ID of the account adhering to the standards for ID permanence.
	AccountId        string                   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	AuthorisedEntity *BankingAuthorisedEntity `protobuf:"bytes,2,opt,name=authorisedEntity,proto3" json:"authorisedEntity,omitempty"`
	// The amount of the last debit executed under this authorisation
	LastDebitAmount string `protobuf:"bytes,3,opt,name=lastDebitAmount,proto3" json:"lastDebitAmount,omitempty"`
	// The date and time of the last debit executed under this authorisation
	LastDebitDateTime    string   `protobuf:"bytes,4,opt,name=lastDebitDateTime,proto3" json:"lastDebitDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingDirectDebit) Reset()         { *m = BankingDirectDebit{} }
func (m *BankingDirectDebit) String() string { return proto.CompactTextString(m) }
func (*BankingDirectDebit) ProtoMessage()    {}
func (*BankingDirectDebit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{7}
}

func (m *BankingDirectDebit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDirectDebit.Unmarshal(m, b)
}
func (m *BankingDirectDebit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDirectDebit.Marshal(b, m, deterministic)
}
func (m *BankingDirectDebit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDirectDebit.Merge(m, src)
}
func (m *BankingDirectDebit) XXX_Size() int {
	return xxx_messageInfo_BankingDirectDebit.Size(m)
}
func (m *BankingDirectDebit) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDirectDebit.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDirectDebit proto.InternalMessageInfo

func (m *BankingDirectDebit) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BankingDirectDebit) GetAuthorisedEntity() *BankingAuthorisedEntity {
	if m != nil {
		return m.AuthorisedEntity
	}
	return nil
}

func (m *BankingDirectDebit) GetLastDebitAmount() string {
	if m != nil {
		return m.LastDebitAmount
	}
	return ""
}

func (m *BankingDirectDebit) GetLastDebitDateTime() string {
	if m != nil {
		return m.LastDebitDateTime
	}
	return ""
}

type BankingDomesticPayee struct {
	Account *BankingDomesticPayeeAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Card    *BankingDomesticPayeeCard    `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	PayId   *BankingDomesticPayeePayId   `protobuf:"bytes,3,opt,name=payId,proto3" json:"payId,omitempty"`
	// Type of account object included. Valid values are: **account** A standard Australian account defined by BSB/Account Number. **card** A credit or charge card to pay to (note that PANs are masked). **payId** A PayID recognised by NPP
	PayeeAccountUType    BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType `protobuf:"varint,4,opt,name=payeeAccountUType,proto3,enum=consumerdatastandards.BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType" json:"payeeAccountUType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *BankingDomesticPayee) Reset()         { *m = BankingDomesticPayee{} }
func (m *BankingDomesticPayee) String() string { return proto.CompactTextString(m) }
func (*BankingDomesticPayee) ProtoMessage()    {}
func (*BankingDomesticPayee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{8}
}

func (m *BankingDomesticPayee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDomesticPayee.Unmarshal(m, b)
}
func (m *BankingDomesticPayee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDomesticPayee.Marshal(b, m, deterministic)
}
func (m *BankingDomesticPayee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDomesticPayee.Merge(m, src)
}
func (m *BankingDomesticPayee) XXX_Size() int {
	return xxx_messageInfo_BankingDomesticPayee.Size(m)
}
func (m *BankingDomesticPayee) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDomesticPayee.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDomesticPayee proto.InternalMessageInfo

func (m *BankingDomesticPayee) GetAccount() *BankingDomesticPayeeAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *BankingDomesticPayee) GetCard() *BankingDomesticPayeeCard {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *BankingDomesticPayee) GetPayId() *BankingDomesticPayeePayId {
	if m != nil {
		return m.PayId
	}
	return nil
}

func (m *BankingDomesticPayee) GetPayeeAccountUType() BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType {
	if m != nil {
		return m.PayeeAccountUType
	}
	return BankingDomesticPayee_BANKING_DOMESTIC_PAYEE_PAYEE_ACCOUNT_U_TYPE_ACCOUNT
}

type BankingDomesticPayeeAccount struct {
	// Name of the account to pay to
	AccountName string `protobuf:"bytes,1,opt,name=accountName,proto3" json:"accountName,omitempty"`
	// Number of the account to pay to
	AccountNumber string `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	// BSB of the account to pay to
	Bsb                  string   `protobuf:"bytes,3,opt,name=bsb,proto3" json:"bsb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingDomesticPayeeAccount) Reset()         { *m = BankingDomesticPayeeAccount{} }
func (m *BankingDomesticPayeeAccount) String() string { return proto.CompactTextString(m) }
func (*BankingDomesticPayeeAccount) ProtoMessage()    {}
func (*BankingDomesticPayeeAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{9}
}

func (m *BankingDomesticPayeeAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDomesticPayeeAccount.Unmarshal(m, b)
}
func (m *BankingDomesticPayeeAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDomesticPayeeAccount.Marshal(b, m, deterministic)
}
func (m *BankingDomesticPayeeAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDomesticPayeeAccount.Merge(m, src)
}
func (m *BankingDomesticPayeeAccount) XXX_Size() int {
	return xxx_messageInfo_BankingDomesticPayeeAccount.Size(m)
}
func (m *BankingDomesticPayeeAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDomesticPayeeAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDomesticPayeeAccount proto.InternalMessageInfo

func (m *BankingDomesticPayeeAccount) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *BankingDomesticPayeeAccount) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *BankingDomesticPayeeAccount) GetBsb() string {
	if m != nil {
		return m.Bsb
	}
	return ""
}

type BankingDomesticPayeeCard struct {
	// Name of the account to pay to
	CardNumber           string   `protobuf:"bytes,1,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingDomesticPayeeCard) Reset()         { *m = BankingDomesticPayeeCard{} }
func (m *BankingDomesticPayeeCard) String() string { return proto.CompactTextString(m) }
func (*BankingDomesticPayeeCard) ProtoMessage()    {}
func (*BankingDomesticPayeeCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{10}
}

func (m *BankingDomesticPayeeCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDomesticPayeeCard.Unmarshal(m, b)
}
func (m *BankingDomesticPayeeCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDomesticPayeeCard.Marshal(b, m, deterministic)
}
func (m *BankingDomesticPayeeCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDomesticPayeeCard.Merge(m, src)
}
func (m *BankingDomesticPayeeCard) XXX_Size() int {
	return xxx_messageInfo_BankingDomesticPayeeCard.Size(m)
}
func (m *BankingDomesticPayeeCard) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDomesticPayeeCard.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDomesticPayeeCard proto.InternalMessageInfo

func (m *BankingDomesticPayeeCard) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

type BankingDomesticPayeePayId struct {
	// The identifier of the PayID (dependent on type)
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The name assigned to the PayID by the owner of the PayID
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the PayID
	Type                 BankingDomesticPayeePayId_BankingDomesticPayeePayIdType `protobuf:"varint,3,opt,name=type,proto3,enum=consumerdatastandards.BankingDomesticPayeePayId_BankingDomesticPayeePayIdType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *BankingDomesticPayeePayId) Reset()         { *m = BankingDomesticPayeePayId{} }
func (m *BankingDomesticPayeePayId) String() string { return proto.CompactTextString(m) }
func (*BankingDomesticPayeePayId) ProtoMessage()    {}
func (*BankingDomesticPayeePayId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{11}
}

func (m *BankingDomesticPayeePayId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDomesticPayeePayId.Unmarshal(m, b)
}
func (m *BankingDomesticPayeePayId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDomesticPayeePayId.Marshal(b, m, deterministic)
}
func (m *BankingDomesticPayeePayId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDomesticPayeePayId.Merge(m, src)
}
func (m *BankingDomesticPayeePayId) XXX_Size() int {
	return xxx_messageInfo_BankingDomesticPayeePayId.Size(m)
}
func (m *BankingDomesticPayeePayId) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDomesticPayeePayId.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDomesticPayeePayId proto.InternalMessageInfo

func (m *BankingDomesticPayeePayId) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *BankingDomesticPayeePayId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingDomesticPayeePayId) GetType() BankingDomesticPayeePayId_BankingDomesticPayeePayIdType {
	if m != nil {
		return m.Type
	}
	return BankingDomesticPayeePayId_BANKING_DOMESTIC_PAYEE_PAY_ID_TYPE_EMAIL
}

type BankingInternationalPayee struct {
	BankDetails          *BankingInternationalPayeeBankDetails        `protobuf:"bytes,1,opt,name=bankDetails,proto3" json:"bankDetails,omitempty"`
	BeneficiaryDetails   *BankingInternationalPayeeBeneficiaryDetails `protobuf:"bytes,2,opt,name=beneficiaryDetails,proto3" json:"beneficiaryDetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *BankingInternationalPayee) Reset()         { *m = BankingInternationalPayee{} }
func (m *BankingInternationalPayee) String() string { return proto.CompactTextString(m) }
func (*BankingInternationalPayee) ProtoMessage()    {}
func (*BankingInternationalPayee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{12}
}

func (m *BankingInternationalPayee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingInternationalPayee.Unmarshal(m, b)
}
func (m *BankingInternationalPayee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingInternationalPayee.Marshal(b, m, deterministic)
}
func (m *BankingInternationalPayee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingInternationalPayee.Merge(m, src)
}
func (m *BankingInternationalPayee) XXX_Size() int {
	return xxx_messageInfo_BankingInternationalPayee.Size(m)
}
func (m *BankingInternationalPayee) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingInternationalPayee.DiscardUnknown(m)
}

var xxx_messageInfo_BankingInternationalPayee proto.InternalMessageInfo

func (m *BankingInternationalPayee) GetBankDetails() *BankingInternationalPayeeBankDetails {
	if m != nil {
		return m.BankDetails
	}
	return nil
}

func (m *BankingInternationalPayee) GetBeneficiaryDetails() *BankingInternationalPayeeBeneficiaryDetails {
	if m != nil {
		return m.BeneficiaryDetails
	}
	return nil
}

type BankingInternationalPayeeBankDetails struct {
	// Account Targeted for payment
	AccountNumber string                                           `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	BankAddress   *BankingInternationalPayeeBankDetailsBankAddress `protobuf:"bytes,2,opt,name=bankAddress,proto3" json:"bankAddress,omitempty"`
	// Swift bank code.  Aligns with standard [ISO 9362](https://www.iso.org/standard/60390.html)
	BeneficiaryBankBIC string `protobuf:"bytes,3,opt,name=beneficiaryBankBIC,proto3" json:"beneficiaryBankBIC,omitempty"`
	// Number for the Clearing House Interbank Payments System
	ChipNumber string `protobuf:"bytes,4,opt,name=chipNumber,proto3" json:"chipNumber,omitempty"`
	// Country of the recipient institution. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	// Number for Fedwire payment (Federal Reserve Wire Network)
	FedWireNumber string `protobuf:"bytes,6,opt,name=fedWireNumber,proto3" json:"fedWireNumber,omitempty"`
	// The legal entity identifier (LEI) for the beneficiary.  Aligns with [ISO 17442](https://www.iso.org/standard/59771.html)
	LegalEntityIdentifier string `protobuf:"bytes,7,opt,name=legalEntityIdentifier,proto3" json:"legalEntityIdentifier,omitempty"`
	// International bank routing number
	RoutingNumber string `protobuf:"bytes,8,opt,name=routingNumber,proto3" json:"routingNumber,omitempty"`
	// Sort code used for account identification in some jurisdictions
	SortCode             string   `protobuf:"bytes,9,opt,name=sortCode,proto3" json:"sortCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingInternationalPayeeBankDetails) Reset()         { *m = BankingInternationalPayeeBankDetails{} }
func (m *BankingInternationalPayeeBankDetails) String() string { return proto.CompactTextString(m) }
func (*BankingInternationalPayeeBankDetails) ProtoMessage()    {}
func (*BankingInternationalPayeeBankDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{13}
}

func (m *BankingInternationalPayeeBankDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingInternationalPayeeBankDetails.Unmarshal(m, b)
}
func (m *BankingInternationalPayeeBankDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingInternationalPayeeBankDetails.Marshal(b, m, deterministic)
}
func (m *BankingInternationalPayeeBankDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingInternationalPayeeBankDetails.Merge(m, src)
}
func (m *BankingInternationalPayeeBankDetails) XXX_Size() int {
	return xxx_messageInfo_BankingInternationalPayeeBankDetails.Size(m)
}
func (m *BankingInternationalPayeeBankDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingInternationalPayeeBankDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BankingInternationalPayeeBankDetails proto.InternalMessageInfo

func (m *BankingInternationalPayeeBankDetails) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetBankAddress() *BankingInternationalPayeeBankDetailsBankAddress {
	if m != nil {
		return m.BankAddress
	}
	return nil
}

func (m *BankingInternationalPayeeBankDetails) GetBeneficiaryBankBIC() string {
	if m != nil {
		return m.BeneficiaryBankBIC
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetChipNumber() string {
	if m != nil {
		return m.ChipNumber
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetFedWireNumber() string {
	if m != nil {
		return m.FedWireNumber
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetLegalEntityIdentifier() string {
	if m != nil {
		return m.LegalEntityIdentifier
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetRoutingNumber() string {
	if m != nil {
		return m.RoutingNumber
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetails) GetSortCode() string {
	if m != nil {
		return m.SortCode
	}
	return ""
}

type BankingInternationalPayeeBankDetailsBankAddress struct {
	// Address of the recipient Bank
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Name of the recipient Bank
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingInternationalPayeeBankDetailsBankAddress) Reset() {
	*m = BankingInternationalPayeeBankDetailsBankAddress{}
}
func (m *BankingInternationalPayeeBankDetailsBankAddress) String() string {
	return proto.CompactTextString(m)
}
func (*BankingInternationalPayeeBankDetailsBankAddress) ProtoMessage() {}
func (*BankingInternationalPayeeBankDetailsBankAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{14}
}

func (m *BankingInternationalPayeeBankDetailsBankAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress.Unmarshal(m, b)
}
func (m *BankingInternationalPayeeBankDetailsBankAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress.Marshal(b, m, deterministic)
}
func (m *BankingInternationalPayeeBankDetailsBankAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress.Merge(m, src)
}
func (m *BankingInternationalPayeeBankDetailsBankAddress) XXX_Size() int {
	return xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress.Size(m)
}
func (m *BankingInternationalPayeeBankDetailsBankAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress.DiscardUnknown(m)
}

var xxx_messageInfo_BankingInternationalPayeeBankDetailsBankAddress proto.InternalMessageInfo

func (m *BankingInternationalPayeeBankDetailsBankAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BankingInternationalPayeeBankDetailsBankAddress) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BankingInternationalPayeeBeneficiaryDetails struct {
	// Country where the beneficiary resides. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	// Response message for the payment
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Name of the beneficiary
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingInternationalPayeeBeneficiaryDetails) Reset() {
	*m = BankingInternationalPayeeBeneficiaryDetails{}
}
func (m *BankingInternationalPayeeBeneficiaryDetails) String() string {
	return proto.CompactTextString(m)
}
func (*BankingInternationalPayeeBeneficiaryDetails) ProtoMessage() {}
func (*BankingInternationalPayeeBeneficiaryDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{15}
}

func (m *BankingInternationalPayeeBeneficiaryDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails.Unmarshal(m, b)
}
func (m *BankingInternationalPayeeBeneficiaryDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails.Marshal(b, m, deterministic)
}
func (m *BankingInternationalPayeeBeneficiaryDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails.Merge(m, src)
}
func (m *BankingInternationalPayeeBeneficiaryDetails) XXX_Size() int {
	return xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails.Size(m)
}
func (m *BankingInternationalPayeeBeneficiaryDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BankingInternationalPayeeBeneficiaryDetails proto.InternalMessageInfo

func (m *BankingInternationalPayeeBeneficiaryDetails) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *BankingInternationalPayeeBeneficiaryDetails) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BankingInternationalPayeeBeneficiaryDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BankingLoanAccount struct {
	// Date that the loan is due to be repaid in full
	LoanEndDate string `protobuf:"bytes,1,opt,name=loanEndDate,proto3" json:"loanEndDate,omitempty"`
	// Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account
	MaxRedraw string `protobuf:"bytes,2,opt,name=maxRedraw,proto3" json:"maxRedraw,omitempty"`
	// If absent assumes AUD
	MaxRedrawCurrency string `protobuf:"bytes,3,opt,name=maxRedrawCurrency,proto3" json:"maxRedrawCurrency,omitempty"`
	// Minimum amount of next instalment
	MinInstalmentAmount string `protobuf:"bytes,4,opt,name=minInstalmentAmount,proto3" json:"minInstalmentAmount,omitempty"`
	// If absent assumes AUD
	MinInstalmentCurrency string `protobuf:"bytes,5,opt,name=minInstalmentCurrency,proto3" json:"minInstalmentCurrency,omitempty"`
	// Minimum redraw amount
	MinRedraw string `protobuf:"bytes,6,opt,name=minRedraw,proto3" json:"minRedraw,omitempty"`
	// If absent assumes AUD
	MinRedrawCurrency string `protobuf:"bytes,7,opt,name=minRedrawCurrency,proto3" json:"minRedrawCurrency,omitempty"`
	// Next date that an instalment is required
	NextInstalmentDate string `protobuf:"bytes,8,opt,name=nextInstalmentDate,proto3" json:"nextInstalmentDate,omitempty"`
	// Set to true if one or more offset accounts are configured for this loan account
	OffsetAccountEnabled bool `protobuf:"varint,9,opt,name=offsetAccountEnabled,proto3" json:"offsetAccountEnabled,omitempty"`
	// The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation
	OffsetAccountIds []string `protobuf:"bytes,10,rep,name=offsetAccountIds,proto3" json:"offsetAccountIds,omitempty"`
	// Optional original loan value
	OriginalLoanAmount string `protobuf:"bytes,11,opt,name=originalLoanAmount,proto3" json:"originalLoanAmount,omitempty"`
	// If absent assumes AUD
	OriginalLoanCurrency string `protobuf:"bytes,12,opt,name=originalLoanCurrency,proto3" json:"originalLoanCurrency,omitempty"`
	// Optional original start date for the loan
	OriginalStartDate string `protobuf:"bytes,13,opt,name=originalStartDate,proto3" json:"originalStartDate,omitempty"`
	// The expected or required repayment frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	RepaymentFrequency string `protobuf:"bytes,14,opt,name=repaymentFrequency,proto3" json:"repaymentFrequency,omitempty"`
	// Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST
	RepaymentType        BankingLoanAccount_BankingLoanAccountRepaymentType `protobuf:"varint,15,opt,name=repaymentType,proto3,enum=consumerdatastandards.BankingLoanAccount_BankingLoanAccountRepaymentType" json:"repaymentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *BankingLoanAccount) Reset()         { *m = BankingLoanAccount{} }
func (m *BankingLoanAccount) String() string { return proto.CompactTextString(m) }
func (*BankingLoanAccount) ProtoMessage()    {}
func (*BankingLoanAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{16}
}

func (m *BankingLoanAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingLoanAccount.Unmarshal(m, b)
}
func (m *BankingLoanAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingLoanAccount.Marshal(b, m, deterministic)
}
func (m *BankingLoanAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingLoanAccount.Merge(m, src)
}
func (m *BankingLoanAccount) XXX_Size() int {
	return xxx_messageInfo_BankingLoanAccount.Size(m)
}
func (m *BankingLoanAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingLoanAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingLoanAccount proto.InternalMessageInfo

func (m *BankingLoanAccount) GetLoanEndDate() string {
	if m != nil {
		return m.LoanEndDate
	}
	return ""
}

func (m *BankingLoanAccount) GetMaxRedraw() string {
	if m != nil {
		return m.MaxRedraw
	}
	return ""
}

func (m *BankingLoanAccount) GetMaxRedrawCurrency() string {
	if m != nil {
		return m.MaxRedrawCurrency
	}
	return ""
}

func (m *BankingLoanAccount) GetMinInstalmentAmount() string {
	if m != nil {
		return m.MinInstalmentAmount
	}
	return ""
}

func (m *BankingLoanAccount) GetMinInstalmentCurrency() string {
	if m != nil {
		return m.MinInstalmentCurrency
	}
	return ""
}

func (m *BankingLoanAccount) GetMinRedraw() string {
	if m != nil {
		return m.MinRedraw
	}
	return ""
}

func (m *BankingLoanAccount) GetMinRedrawCurrency() string {
	if m != nil {
		return m.MinRedrawCurrency
	}
	return ""
}

func (m *BankingLoanAccount) GetNextInstalmentDate() string {
	if m != nil {
		return m.NextInstalmentDate
	}
	return ""
}

func (m *BankingLoanAccount) GetOffsetAccountEnabled() bool {
	if m != nil {
		return m.OffsetAccountEnabled
	}
	return false
}

func (m *BankingLoanAccount) GetOffsetAccountIds() []string {
	if m != nil {
		return m.OffsetAccountIds
	}
	return nil
}

func (m *BankingLoanAccount) GetOriginalLoanAmount() string {
	if m != nil {
		return m.OriginalLoanAmount
	}
	return ""
}

func (m *BankingLoanAccount) GetOriginalLoanCurrency() string {
	if m != nil {
		return m.OriginalLoanCurrency
	}
	return ""
}

func (m *BankingLoanAccount) GetOriginalStartDate() string {
	if m != nil {
		return m.OriginalStartDate
	}
	return ""
}

func (m *BankingLoanAccount) GetRepaymentFrequency() string {
	if m != nil {
		return m.RepaymentFrequency
	}
	return ""
}

func (m *BankingLoanAccount) GetRepaymentType() BankingLoanAccount_BankingLoanAccountRepaymentType {
	if m != nil {
		return m.RepaymentType
	}
	return BankingLoanAccount_BANKING_LOAN_ACCOUNT_REPAYMENT_TYPE_INTEREST_ONLY
}

type BankingPayee struct {
	// The date the payee was created by the customer
	CreationDate string `protobuf:"bytes,1,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	// A description of the payee provided by the customer
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The short display name of the payee as provided by the customer
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// ID of the payee adhering to the rules of ID permanence
	PayeeId string `protobuf:"bytes,4,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	// The type of payee. DOMESTIC means a registered payee for domestic payments including NPP. INTERNATIONAL means a registered payee for international payments. BILLER means a registered payee for BPAY
	Type                 BankingPayee_BankingPayeeType `protobuf:"varint,5,opt,name=type,proto3,enum=consumerdatastandards.BankingPayee_BankingPayeeType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BankingPayee) Reset()         { *m = BankingPayee{} }
func (m *BankingPayee) String() string { return proto.CompactTextString(m) }
func (*BankingPayee) ProtoMessage()    {}
func (*BankingPayee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{17}
}

func (m *BankingPayee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingPayee.Unmarshal(m, b)
}
func (m *BankingPayee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingPayee.Marshal(b, m, deterministic)
}
func (m *BankingPayee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingPayee.Merge(m, src)
}
func (m *BankingPayee) XXX_Size() int {
	return xxx_messageInfo_BankingPayee.Size(m)
}
func (m *BankingPayee) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingPayee.DiscardUnknown(m)
}

var xxx_messageInfo_BankingPayee proto.InternalMessageInfo

func (m *BankingPayee) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *BankingPayee) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingPayee) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *BankingPayee) GetPayeeId() string {
	if m != nil {
		return m.PayeeId
	}
	return ""
}

func (m *BankingPayee) GetType() BankingPayee_BankingPayeeType {
	if m != nil {
		return m.Type
	}
	return BankingPayee_BANKING_PAYEE_TYPE_DOMESTIC
}

type BankingPayeeDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingPayeeDetail) Reset()         { *m = BankingPayeeDetail{} }
func (m *BankingPayeeDetail) String() string { return proto.CompactTextString(m) }
func (*BankingPayeeDetail) ProtoMessage()    {}
func (*BankingPayeeDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{18}
}

func (m *BankingPayeeDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingPayeeDetail.Unmarshal(m, b)
}
func (m *BankingPayeeDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingPayeeDetail.Marshal(b, m, deterministic)
}
func (m *BankingPayeeDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingPayeeDetail.Merge(m, src)
}
func (m *BankingPayeeDetail) XXX_Size() int {
	return xxx_messageInfo_BankingPayeeDetail.Size(m)
}
func (m *BankingPayeeDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingPayeeDetail.DiscardUnknown(m)
}

var xxx_messageInfo_BankingPayeeDetail proto.InternalMessageInfo

type BankingProductBundle struct {
	// Display text providing more information on the bundle
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on the bundle criteria and benefits
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Description of the bundle
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Name of the bundle
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points
	ProductIds           []string `protobuf:"bytes,5,rep,name=productIds,proto3" json:"productIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductBundle) Reset()         { *m = BankingProductBundle{} }
func (m *BankingProductBundle) String() string { return proto.CompactTextString(m) }
func (*BankingProductBundle) ProtoMessage()    {}
func (*BankingProductBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{19}
}

func (m *BankingProductBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductBundle.Unmarshal(m, b)
}
func (m *BankingProductBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductBundle.Marshal(b, m, deterministic)
}
func (m *BankingProductBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductBundle.Merge(m, src)
}
func (m *BankingProductBundle) XXX_Size() int {
	return xxx_messageInfo_BankingProductBundle.Size(m)
}
func (m *BankingProductBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductBundle.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductBundle proto.InternalMessageInfo

func (m *BankingProductBundle) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductBundle) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductBundle) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingProductBundle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingProductBundle) GetProductIds() []string {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

type BankingProductConstraint struct {
	// Display text providing more information the constraint
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on the constraint
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [constraintType](#tocSproductconstrainttypedoc) specified.  Whether mandatory or not is dependent on the value of [constraintType](#tocSproductconstrainttypedoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The type of constraint described.  See the next section for an overview of valid values and their meaning
	ConstraintType       BankingProductConstraint_BankingProductConstraintConstraintType `protobuf:"varint,4,opt,name=constraintType,proto3,enum=consumerdatastandards.BankingProductConstraint_BankingProductConstraintConstraintType" json:"constraintType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_unrecognized     []byte                                                          `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *BankingProductConstraint) Reset()         { *m = BankingProductConstraint{} }
func (m *BankingProductConstraint) String() string { return proto.CompactTextString(m) }
func (*BankingProductConstraint) ProtoMessage()    {}
func (*BankingProductConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{20}
}

func (m *BankingProductConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductConstraint.Unmarshal(m, b)
}
func (m *BankingProductConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductConstraint.Marshal(b, m, deterministic)
}
func (m *BankingProductConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductConstraint.Merge(m, src)
}
func (m *BankingProductConstraint) XXX_Size() int {
	return xxx_messageInfo_BankingProductConstraint.Size(m)
}
func (m *BankingProductConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductConstraint proto.InternalMessageInfo

func (m *BankingProductConstraint) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductConstraint) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductConstraint) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductConstraint) GetConstraintType() BankingProductConstraint_BankingProductConstraintConstraintType {
	if m != nil {
		return m.ConstraintType
	}
	return BankingProductConstraint_BANKING_PRODUCT_CONSTRAINT_CONSTRAINT_TYPE_MIN_BALANCE
}

type BankingProductDepositRate struct {
	// Display text providing more information on the rate
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this rate
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [depositRateType](#tocSproductdepositratetypedoc) specified. Whether mandatory or not is dependent on the value of [depositRateType](#tocSproductdepositratetypedoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	ApplicationFrequency string `protobuf:"bytes,4,opt,name=applicationFrequency,proto3" json:"applicationFrequency,omitempty"`
	// The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	CalculationFrequency string `protobuf:"bytes,5,opt,name=calculationFrequency,proto3" json:"calculationFrequency,omitempty"`
	// The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning
	DepositRateType BankingProductDepositRate_BankingProductDepositRateDepositRateType `protobuf:"varint,6,opt,name=depositRateType,proto3,enum=consumerdatastandards.BankingProductDepositRate_BankingProductDepositRateDepositRateType" json:"depositRateType,omitempty"`
	// The rate to be applied
	Rate string `protobuf:"bytes,7,opt,name=rate,proto3" json:"rate,omitempty"`
	// Rate tiers applicable for this rate
	Tiers                []*BankingProductRateTier `protobuf:"bytes,8,rep,name=tiers,proto3" json:"tiers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BankingProductDepositRate) Reset()         { *m = BankingProductDepositRate{} }
func (m *BankingProductDepositRate) String() string { return proto.CompactTextString(m) }
func (*BankingProductDepositRate) ProtoMessage()    {}
func (*BankingProductDepositRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{21}
}

func (m *BankingProductDepositRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductDepositRate.Unmarshal(m, b)
}
func (m *BankingProductDepositRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductDepositRate.Marshal(b, m, deterministic)
}
func (m *BankingProductDepositRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductDepositRate.Merge(m, src)
}
func (m *BankingProductDepositRate) XXX_Size() int {
	return xxx_messageInfo_BankingProductDepositRate.Size(m)
}
func (m *BankingProductDepositRate) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductDepositRate.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductDepositRate proto.InternalMessageInfo

func (m *BankingProductDepositRate) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductDepositRate) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductDepositRate) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductDepositRate) GetApplicationFrequency() string {
	if m != nil {
		return m.ApplicationFrequency
	}
	return ""
}

func (m *BankingProductDepositRate) GetCalculationFrequency() string {
	if m != nil {
		return m.CalculationFrequency
	}
	return ""
}

func (m *BankingProductDepositRate) GetDepositRateType() BankingProductDepositRate_BankingProductDepositRateDepositRateType {
	if m != nil {
		return m.DepositRateType
	}
	return BankingProductDepositRate_BANKING_PRODUCT_DEPOSIT_RATE_DEPOSIT_RATE_TYPE_FIXED
}

func (m *BankingProductDepositRate) GetRate() string {
	if m != nil {
		return m.Rate
	}
	return ""
}

func (m *BankingProductDepositRate) GetTiers() []*BankingProductRateTier {
	if m != nil {
		return m.Tiers
	}
	return nil
}

type BankingProductDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductDetail) Reset()         { *m = BankingProductDetail{} }
func (m *BankingProductDetail) String() string { return proto.CompactTextString(m) }
func (*BankingProductDetail) ProtoMessage()    {}
func (*BankingProductDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{22}
}

func (m *BankingProductDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductDetail.Unmarshal(m, b)
}
func (m *BankingProductDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductDetail.Marshal(b, m, deterministic)
}
func (m *BankingProductDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductDetail.Merge(m, src)
}
func (m *BankingProductDetail) XXX_Size() int {
	return xxx_messageInfo_BankingProductDetail.Size(m)
}
func (m *BankingProductDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductDetail.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductDetail proto.InternalMessageInfo

type BankingProductDiscount struct {
	// A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
	AccruedRate string `protobuf:"bytes,1,opt,name=accruedRate,proto3" json:"accruedRate,omitempty"`
	// Display text providing more information on the discount
	AdditionalInfo string `protobuf:"bytes,2,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this discount
	AdditionalInfoUri string `protobuf:"bytes,3,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [discountType](#tocSproductdiscounttypedoc) specified. Whether mandatory or not is dependent on the value of [discountType](#tocSproductdiscounttypedoc)
	AdditionalValue string `protobuf:"bytes,4,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// Value of the discount. When following properties include one of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory
	Amount string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	// A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
	BalanceRate string `protobuf:"bytes,6,opt,name=balanceRate,proto3" json:"balanceRate,omitempty"`
	// Description of the discount
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// The type of discount. See the next section for an overview of valid values and their meaning
	DiscountType BankingProductDiscount_BankingProductDiscountDiscountType `protobuf:"varint,8,opt,name=discountType,proto3,enum=consumerdatastandards.BankingProductDiscount_BankingProductDiscountDiscountType" json:"discountType,omitempty"`
	// Eligibility constraints that apply to this discount
	Eligibility []*BankingProductDiscountEligibility `protobuf:"bytes,9,rep,name=eligibility,proto3" json:"eligibility,omitempty"`
	// A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
	FeeRate string `protobuf:"bytes,10,opt,name=feeRate,proto3" json:"feeRate,omitempty"`
	// A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory
	TransactionRate      string   `protobuf:"bytes,11,opt,name=transactionRate,proto3" json:"transactionRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductDiscount) Reset()         { *m = BankingProductDiscount{} }
func (m *BankingProductDiscount) String() string { return proto.CompactTextString(m) }
func (*BankingProductDiscount) ProtoMessage()    {}
func (*BankingProductDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{23}
}

func (m *BankingProductDiscount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductDiscount.Unmarshal(m, b)
}
func (m *BankingProductDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductDiscount.Marshal(b, m, deterministic)
}
func (m *BankingProductDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductDiscount.Merge(m, src)
}
func (m *BankingProductDiscount) XXX_Size() int {
	return xxx_messageInfo_BankingProductDiscount.Size(m)
}
func (m *BankingProductDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductDiscount proto.InternalMessageInfo

func (m *BankingProductDiscount) GetAccruedRate() string {
	if m != nil {
		return m.AccruedRate
	}
	return ""
}

func (m *BankingProductDiscount) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductDiscount) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductDiscount) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductDiscount) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *BankingProductDiscount) GetBalanceRate() string {
	if m != nil {
		return m.BalanceRate
	}
	return ""
}

func (m *BankingProductDiscount) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingProductDiscount) GetDiscountType() BankingProductDiscount_BankingProductDiscountDiscountType {
	if m != nil {
		return m.DiscountType
	}
	return BankingProductDiscount_BANKING_PRODUCT_DISCOUNT_DISCOUNT_TYPE_BALANCE
}

func (m *BankingProductDiscount) GetEligibility() []*BankingProductDiscountEligibility {
	if m != nil {
		return m.Eligibility
	}
	return nil
}

func (m *BankingProductDiscount) GetFeeRate() string {
	if m != nil {
		return m.FeeRate
	}
	return ""
}

func (m *BankingProductDiscount) GetTransactionRate() string {
	if m != nil {
		return m.TransactionRate
	}
	return ""
}

type BankingProductDiscountEligibility struct {
	// Display text providing more information on this eligibility constraint
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this eligibility constraint
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [discountEligibilityType](#tocSproductdiscounteligibilitydoc) specified. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The type of the specific eligibility constraint for a discount
	DiscountEligibilityType BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType `protobuf:"varint,4,opt,name=discountEligibilityType,proto3,enum=consumerdatastandards.BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType" json:"discountEligibilityType,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                                                                   `json:"-"`
	XXX_unrecognized        []byte                                                                                     `json:"-"`
	XXX_sizecache           int32                                                                                      `json:"-"`
}

func (m *BankingProductDiscountEligibility) Reset()         { *m = BankingProductDiscountEligibility{} }
func (m *BankingProductDiscountEligibility) String() string { return proto.CompactTextString(m) }
func (*BankingProductDiscountEligibility) ProtoMessage()    {}
func (*BankingProductDiscountEligibility) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{24}
}

func (m *BankingProductDiscountEligibility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductDiscountEligibility.Unmarshal(m, b)
}
func (m *BankingProductDiscountEligibility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductDiscountEligibility.Marshal(b, m, deterministic)
}
func (m *BankingProductDiscountEligibility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductDiscountEligibility.Merge(m, src)
}
func (m *BankingProductDiscountEligibility) XXX_Size() int {
	return xxx_messageInfo_BankingProductDiscountEligibility.Size(m)
}
func (m *BankingProductDiscountEligibility) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductDiscountEligibility.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductDiscountEligibility proto.InternalMessageInfo

func (m *BankingProductDiscountEligibility) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductDiscountEligibility) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductDiscountEligibility) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductDiscountEligibility) GetDiscountEligibilityType() BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType {
	if m != nil {
		return m.DiscountEligibilityType
	}
	return BankingProductDiscountEligibility_BANKING_PRODUCT_DISCOUNT_ELIGIBILITY_DISCOUNT_ELIGIBILITY_TYPE_BUSINESS
}

type BankingProductEligibility struct {
	// Display text providing more information on the [eligibility](#tocSproducteligibilitytypedoc) criteria. Mandatory if the field is set to OTHER
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this eligibility criteria
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [eligibilityType](#tocSproducteligibilitytypedoc) specified. Whether mandatory or not is dependent on the value of [eligibilityType](#tocSproducteligibilitytypedoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The type of eligibility criteria described.  See the next section for an overview of valid values and their meaning
	EligibilityType      BankingProductEligibility_BankingProductEligibilityEligibilityType `protobuf:"varint,4,opt,name=eligibilityType,proto3,enum=consumerdatastandards.BankingProductEligibility_BankingProductEligibilityEligibilityType" json:"eligibilityType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                           `json:"-"`
	XXX_unrecognized     []byte                                                             `json:"-"`
	XXX_sizecache        int32                                                              `json:"-"`
}

func (m *BankingProductEligibility) Reset()         { *m = BankingProductEligibility{} }
func (m *BankingProductEligibility) String() string { return proto.CompactTextString(m) }
func (*BankingProductEligibility) ProtoMessage()    {}
func (*BankingProductEligibility) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{25}
}

func (m *BankingProductEligibility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductEligibility.Unmarshal(m, b)
}
func (m *BankingProductEligibility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductEligibility.Marshal(b, m, deterministic)
}
func (m *BankingProductEligibility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductEligibility.Merge(m, src)
}
func (m *BankingProductEligibility) XXX_Size() int {
	return xxx_messageInfo_BankingProductEligibility.Size(m)
}
func (m *BankingProductEligibility) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductEligibility.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductEligibility proto.InternalMessageInfo

func (m *BankingProductEligibility) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductEligibility) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductEligibility) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductEligibility) GetEligibilityType() BankingProductEligibility_BankingProductEligibilityEligibilityType {
	if m != nil {
		return m.EligibilityType
	}
	return BankingProductEligibility_BANKING_PRODUCT_ELIGIBILITY_ELIGIBILITY_TYPE_BUSINESS
}

type BankingProductFeature struct {
	// Display text providing more information on the feature. Mandatory if the [feature type](#tocSproductfeaturetypedoc) is set to OTHER
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this feature
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [featureType](#tocSproductfeaturetypedoc) specified. Whether mandatory or not is dependent on the value of the [featureType.](#tocSproductfeaturetypedoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The type of feature described
	FeatureType          BankingProductFeature_BankingProductFeatureFeatureType `protobuf:"varint,4,opt,name=featureType,proto3,enum=consumerdatastandards.BankingProductFeature_BankingProductFeatureFeatureType" json:"featureType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *BankingProductFeature) Reset()         { *m = BankingProductFeature{} }
func (m *BankingProductFeature) String() string { return proto.CompactTextString(m) }
func (*BankingProductFeature) ProtoMessage()    {}
func (*BankingProductFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{26}
}

func (m *BankingProductFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductFeature.Unmarshal(m, b)
}
func (m *BankingProductFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductFeature.Marshal(b, m, deterministic)
}
func (m *BankingProductFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductFeature.Merge(m, src)
}
func (m *BankingProductFeature) XXX_Size() int {
	return xxx_messageInfo_BankingProductFeature.Size(m)
}
func (m *BankingProductFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductFeature.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductFeature proto.InternalMessageInfo

func (m *BankingProductFeature) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductFeature) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductFeature) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductFeature) GetFeatureType() BankingProductFeature_BankingProductFeatureFeatureType {
	if m != nil {
		return m.FeatureType
	}
	return BankingProductFeature_BANKING_PRODUCT_FEATURE_FEATURE_TYPE_CARD_ACCESS
}

type BankingProductFee struct {
	// The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	AccrualFrequency string `protobuf:"bytes,1,opt,name=accrualFrequency,proto3" json:"accrualFrequency,omitempty"`
	// A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory
	AccruedRate string `protobuf:"bytes,2,opt,name=accruedRate,proto3" json:"accruedRate,omitempty"`
	// Display text providing more information on the fee
	AdditionalInfo string `protobuf:"bytes,3,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this fee
	AdditionalInfoUri string `protobuf:"bytes,4,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](#tocSproductfeetypedoc)
	AdditionalValue string `protobuf:"bytes,5,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory
	Amount string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	// A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory
	BalanceRate string `protobuf:"bytes,7,opt,name=balanceRate,proto3" json:"balanceRate,omitempty"`
	// The currency the fee will be charged in. Assumes AUD if absent
	Currency string `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	// An optional list of discounts to this fee that may be available
	Discounts []*BankingProductDiscount `protobuf:"bytes,9,rep,name=discounts,proto3" json:"discounts,omitempty"`
	// The type of fee
	FeeType BankingProductFee_BankingProductFeeFeeType `protobuf:"varint,10,opt,name=feeType,proto3,enum=consumerdatastandards.BankingProductFee_BankingProductFeeFeeType" json:"feeType,omitempty"`
	// Name of the fee
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory
	TransactionRate      string   `protobuf:"bytes,12,opt,name=transactionRate,proto3" json:"transactionRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductFee) Reset()         { *m = BankingProductFee{} }
func (m *BankingProductFee) String() string { return proto.CompactTextString(m) }
func (*BankingProductFee) ProtoMessage()    {}
func (*BankingProductFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{27}
}

func (m *BankingProductFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductFee.Unmarshal(m, b)
}
func (m *BankingProductFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductFee.Marshal(b, m, deterministic)
}
func (m *BankingProductFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductFee.Merge(m, src)
}
func (m *BankingProductFee) XXX_Size() int {
	return xxx_messageInfo_BankingProductFee.Size(m)
}
func (m *BankingProductFee) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductFee.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductFee proto.InternalMessageInfo

func (m *BankingProductFee) GetAccrualFrequency() string {
	if m != nil {
		return m.AccrualFrequency
	}
	return ""
}

func (m *BankingProductFee) GetAccruedRate() string {
	if m != nil {
		return m.AccruedRate
	}
	return ""
}

func (m *BankingProductFee) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductFee) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductFee) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductFee) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *BankingProductFee) GetBalanceRate() string {
	if m != nil {
		return m.BalanceRate
	}
	return ""
}

func (m *BankingProductFee) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BankingProductFee) GetDiscounts() []*BankingProductDiscount {
	if m != nil {
		return m.Discounts
	}
	return nil
}

func (m *BankingProductFee) GetFeeType() BankingProductFee_BankingProductFeeFeeType {
	if m != nil {
		return m.FeeType
	}
	return BankingProductFee_BANKING_PRODUCT_FEE_FEE_TYPE_PERIODIC
}

func (m *BankingProductFee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingProductFee) GetTransactionRate() string {
	if m != nil {
		return m.TransactionRate
	}
	return ""
}

type BankingProductLendingRate struct {
	// Display text providing more information on the rate.
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this rate
	AdditionalInfoUri string `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	// Generic field containing additional information relevant to the [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](#tocSproductlendingratetypedoc)
	AdditionalValue string `protobuf:"bytes,3,opt,name=additionalValue,proto3" json:"additionalValue,omitempty"`
	// The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	ApplicationFrequency string `protobuf:"bytes,4,opt,name=applicationFrequency,proto3" json:"applicationFrequency,omitempty"`
	// The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	CalculationFrequency string `protobuf:"bytes,5,opt,name=calculationFrequency,proto3" json:"calculationFrequency,omitempty"`
	// A comparison rate equivalent for this rate
	ComparisonRate string `protobuf:"bytes,6,opt,name=comparisonRate,proto3" json:"comparisonRate,omitempty"`
	// When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered
	InterestPaymentDue BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue `protobuf:"varint,7,opt,name=interestPaymentDue,proto3,enum=consumerdatastandards.BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue" json:"interestPaymentDue,omitempty"`
	// The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning
	LendingRateType BankingProductLendingRate_BankingProductLendingRateLendingRateType `protobuf:"varint,8,opt,name=lendingRateType,proto3,enum=consumerdatastandards.BankingProductLendingRate_BankingProductLendingRateLendingRateType" json:"lendingRateType,omitempty"`
	// The rate to be applied
	Rate string `protobuf:"bytes,9,opt,name=rate,proto3" json:"rate,omitempty"`
	// Rate tiers applicable for this rate
	Tiers                []*BankingProductRateTier `protobuf:"bytes,10,rep,name=tiers,proto3" json:"tiers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BankingProductLendingRate) Reset()         { *m = BankingProductLendingRate{} }
func (m *BankingProductLendingRate) String() string { return proto.CompactTextString(m) }
func (*BankingProductLendingRate) ProtoMessage()    {}
func (*BankingProductLendingRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{28}
}

func (m *BankingProductLendingRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductLendingRate.Unmarshal(m, b)
}
func (m *BankingProductLendingRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductLendingRate.Marshal(b, m, deterministic)
}
func (m *BankingProductLendingRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductLendingRate.Merge(m, src)
}
func (m *BankingProductLendingRate) XXX_Size() int {
	return xxx_messageInfo_BankingProductLendingRate.Size(m)
}
func (m *BankingProductLendingRate) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductLendingRate.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductLendingRate proto.InternalMessageInfo

func (m *BankingProductLendingRate) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductLendingRate) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

func (m *BankingProductLendingRate) GetAdditionalValue() string {
	if m != nil {
		return m.AdditionalValue
	}
	return ""
}

func (m *BankingProductLendingRate) GetApplicationFrequency() string {
	if m != nil {
		return m.ApplicationFrequency
	}
	return ""
}

func (m *BankingProductLendingRate) GetCalculationFrequency() string {
	if m != nil {
		return m.CalculationFrequency
	}
	return ""
}

func (m *BankingProductLendingRate) GetComparisonRate() string {
	if m != nil {
		return m.ComparisonRate
	}
	return ""
}

func (m *BankingProductLendingRate) GetInterestPaymentDue() BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue {
	if m != nil {
		return m.InterestPaymentDue
	}
	return BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_INTEREST_PAYMENT_DUE_IN_ARREARS
}

func (m *BankingProductLendingRate) GetLendingRateType() BankingProductLendingRate_BankingProductLendingRateLendingRateType {
	if m != nil {
		return m.LendingRateType
	}
	return BankingProductLendingRate_BANKING_PRODUCT_LENDING_RATE_LENDING_RATE_TYPE_FIXED
}

func (m *BankingProductLendingRate) GetRate() string {
	if m != nil {
		return m.Rate
	}
	return ""
}

func (m *BankingProductLendingRate) GetTiers() []*BankingProductRateTier {
	if m != nil {
		return m.Tiers
	}
	return nil
}

// Defines a condition for the applicability of a tiered rate
type BankingProductRateCondition struct {
	// Display text providing more information on the condition
	AdditionalInfo string `protobuf:"bytes,1,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	// Link to a web page with more information on this condition
	AdditionalInfoUri    string   `protobuf:"bytes,2,opt,name=additionalInfoUri,proto3" json:"additionalInfoUri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductRateCondition) Reset()         { *m = BankingProductRateCondition{} }
func (m *BankingProductRateCondition) String() string { return proto.CompactTextString(m) }
func (*BankingProductRateCondition) ProtoMessage()    {}
func (*BankingProductRateCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{29}
}

func (m *BankingProductRateCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductRateCondition.Unmarshal(m, b)
}
func (m *BankingProductRateCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductRateCondition.Marshal(b, m, deterministic)
}
func (m *BankingProductRateCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductRateCondition.Merge(m, src)
}
func (m *BankingProductRateCondition) XXX_Size() int {
	return xxx_messageInfo_BankingProductRateCondition.Size(m)
}
func (m *BankingProductRateCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductRateCondition.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductRateCondition proto.InternalMessageInfo

func (m *BankingProductRateCondition) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *BankingProductRateCondition) GetAdditionalInfoUri() string {
	if m != nil {
		return m.AdditionalInfoUri
	}
	return ""
}

// Defines the criteria and conditions for which a rate applies
type BankingProductRateTier struct {
	ApplicabilityConditions *BankingProductRateCondition `protobuf:"bytes,1,opt,name=applicabilityConditions,proto3" json:"applicabilityConditions,omitempty"`
	// The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 – 2 months, 2 – 3 months). If absent the tier's range has no upper bound.
	MaximumValue float64 `protobuf:"fixed64,2,opt,name=maximumValue,proto3" json:"maximumValue,omitempty"`
	// The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value
	MinimumValue float64 `protobuf:"fixed64,3,opt,name=minimumValue,proto3" json:"minimumValue,omitempty"`
	// A display name for the tier
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')
	RateApplicationMethod BankingProductRateTier_BankingProductRateTierRateApplicationMethod `protobuf:"varint,5,opt,name=rateApplicationMethod,proto3,enum=consumerdatastandards.BankingProductRateTier_BankingProductRateTierRateApplicationMethod" json:"rateApplicationMethod,omitempty"`
	SubTier               *BankingProductRateTierSubTier                                     `protobuf:"bytes,6,opt,name=subTier,proto3" json:"subTier,omitempty"`
	// The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)
	UnitOfMeasure        BankingProductRateTier_BankingProductRateTierUnitOfMeasure `protobuf:"varint,7,opt,name=unitOfMeasure,proto3,enum=consumerdatastandards.BankingProductRateTier_BankingProductRateTierUnitOfMeasure" json:"unitOfMeasure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *BankingProductRateTier) Reset()         { *m = BankingProductRateTier{} }
func (m *BankingProductRateTier) String() string { return proto.CompactTextString(m) }
func (*BankingProductRateTier) ProtoMessage()    {}
func (*BankingProductRateTier) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{30}
}

func (m *BankingProductRateTier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductRateTier.Unmarshal(m, b)
}
func (m *BankingProductRateTier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductRateTier.Marshal(b, m, deterministic)
}
func (m *BankingProductRateTier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductRateTier.Merge(m, src)
}
func (m *BankingProductRateTier) XXX_Size() int {
	return xxx_messageInfo_BankingProductRateTier.Size(m)
}
func (m *BankingProductRateTier) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductRateTier.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductRateTier proto.InternalMessageInfo

func (m *BankingProductRateTier) GetApplicabilityConditions() *BankingProductRateCondition {
	if m != nil {
		return m.ApplicabilityConditions
	}
	return nil
}

func (m *BankingProductRateTier) GetMaximumValue() float64 {
	if m != nil {
		return m.MaximumValue
	}
	return 0
}

func (m *BankingProductRateTier) GetMinimumValue() float64 {
	if m != nil {
		return m.MinimumValue
	}
	return 0
}

func (m *BankingProductRateTier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingProductRateTier) GetRateApplicationMethod() BankingProductRateTier_BankingProductRateTierRateApplicationMethod {
	if m != nil {
		return m.RateApplicationMethod
	}
	return BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE
}

func (m *BankingProductRateTier) GetSubTier() *BankingProductRateTierSubTier {
	if m != nil {
		return m.SubTier
	}
	return nil
}

func (m *BankingProductRateTier) GetUnitOfMeasure() BankingProductRateTier_BankingProductRateTierUnitOfMeasure {
	if m != nil {
		return m.UnitOfMeasure
	}
	return BankingProductRateTier_BANKING_PRODUCT_RATE_TIER_UNIT_OF_MEASURE_DOLLAR
}

// Defines the sub-tier criteria and conditions for which a rate applies
type BankingProductRateTierSubTier struct {
	ApplicabilityConditions *BankingProductRateCondition `protobuf:"bytes,1,opt,name=applicabilityConditions,proto3" json:"applicabilityConditions,omitempty"`
	// The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 – 2 months, 2 – 3 months)
	MaximumValue float64 `protobuf:"fixed64,2,opt,name=maximumValue,proto3" json:"maximumValue,omitempty"`
	// The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value
	MinimumValue float64 `protobuf:"fixed64,3,opt,name=minimumValue,proto3" json:"minimumValue,omitempty"`
	// A display name for the tier
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')
	RateApplicationMethod BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod `protobuf:"varint,5,opt,name=rateApplicationMethod,proto3,enum=consumerdatastandards.BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod" json:"rateApplicationMethod,omitempty"`
	// The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)
	UnitOfMeasure        BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure `protobuf:"varint,6,opt,name=unitOfMeasure,proto3,enum=consumerdatastandards.BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure" json:"unitOfMeasure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                   `json:"-"`
	XXX_sizecache        int32                                                                    `json:"-"`
}

func (m *BankingProductRateTierSubTier) Reset()         { *m = BankingProductRateTierSubTier{} }
func (m *BankingProductRateTierSubTier) String() string { return proto.CompactTextString(m) }
func (*BankingProductRateTierSubTier) ProtoMessage()    {}
func (*BankingProductRateTierSubTier) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{31}
}

func (m *BankingProductRateTierSubTier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductRateTierSubTier.Unmarshal(m, b)
}
func (m *BankingProductRateTierSubTier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductRateTierSubTier.Marshal(b, m, deterministic)
}
func (m *BankingProductRateTierSubTier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductRateTierSubTier.Merge(m, src)
}
func (m *BankingProductRateTierSubTier) XXX_Size() int {
	return xxx_messageInfo_BankingProductRateTierSubTier.Size(m)
}
func (m *BankingProductRateTierSubTier) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductRateTierSubTier.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductRateTierSubTier proto.InternalMessageInfo

func (m *BankingProductRateTierSubTier) GetApplicabilityConditions() *BankingProductRateCondition {
	if m != nil {
		return m.ApplicabilityConditions
	}
	return nil
}

func (m *BankingProductRateTierSubTier) GetMaximumValue() float64 {
	if m != nil {
		return m.MaximumValue
	}
	return 0
}

func (m *BankingProductRateTierSubTier) GetMinimumValue() float64 {
	if m != nil {
		return m.MinimumValue
	}
	return 0
}

func (m *BankingProductRateTierSubTier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingProductRateTierSubTier) GetRateApplicationMethod() BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod {
	if m != nil {
		return m.RateApplicationMethod
	}
	return BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_RATE_APPLICATION_METHOD_WHOLE_BALANCE
}

func (m *BankingProductRateTierSubTier) GetUnitOfMeasure() BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure {
	if m != nil {
		return m.UnitOfMeasure
	}
	return BankingProductRateTierSubTier_BANKING_PRODUCT_RATE_TIER_SUB_TIER_UNIT_OF_MEASURE_DOLLAR
}

type BankingProductV2 struct {
	AdditionalInformation *BankingProductV2AdditionalInformation `protobuf:"bytes,1,opt,name=additionalInformation,proto3" json:"additionalInformation,omitempty"`
	// A link to an application web page where this product can be applied for.
	ApplicationUri string `protobuf:"bytes,2,opt,name=applicationUri,proto3" json:"applicationUri,omitempty"`
	// A label of the brand for the product. Able to be used for filtering. For data holders with single brands this value is still required
	Brand string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	// An optional display name of the brand
	BrandName string `protobuf:"bytes,4,opt,name=brandName,proto3" json:"brandName,omitempty"`
	// An array of card art images
	CardArt []*BankingProductV2CardArt `protobuf:"bytes,5,rep,name=cardArt,proto3" json:"cardArt,omitempty"`
	// A description of the product
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// The date and time from which this product is effective (ie. is available for origination).  Used to enable the articulation of products to the regime before they are available for customers to originate
	EffectiveFrom string `protobuf:"bytes,7,opt,name=effectiveFrom,proto3" json:"effectiveFrom,omitempty"`
	// The date and time at which this product will be retired and will no longer be offered.  Used to enable the managed deprecation of products
	EffectiveTo string `protobuf:"bytes,8,opt,name=effectiveTo,proto3" json:"effectiveTo,omitempty"`
	// Indicates whether the product is specifically tailored to a circumstance.  In this case fees and prices are significantly negotiated depending on context. While all products are open to a degree of tailoring this flag indicates that tailoring is expected and thus that the provision of specific fees and rates is not applicable
	IsTailored bool `protobuf:"varint,9,opt,name=isTailored,proto3" json:"isTailored,omitempty"`
	// The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered)
	LastUpdated string `protobuf:"bytes,10,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	// The display name of the product
	Name            string                 `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	ProductCategory BankingProductCategory `protobuf:"varint,12,opt,name=productCategory,proto3,enum=consumerdatastandards.BankingProductCategory" json:"productCategory,omitempty"`
	// A data holder specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines.
	ProductId            string   `protobuf:"bytes,13,opt,name=productId,proto3" json:"productId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductV2) Reset()         { *m = BankingProductV2{} }
func (m *BankingProductV2) String() string { return proto.CompactTextString(m) }
func (*BankingProductV2) ProtoMessage()    {}
func (*BankingProductV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{32}
}

func (m *BankingProductV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductV2.Unmarshal(m, b)
}
func (m *BankingProductV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductV2.Marshal(b, m, deterministic)
}
func (m *BankingProductV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductV2.Merge(m, src)
}
func (m *BankingProductV2) XXX_Size() int {
	return xxx_messageInfo_BankingProductV2.Size(m)
}
func (m *BankingProductV2) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductV2.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductV2 proto.InternalMessageInfo

func (m *BankingProductV2) GetAdditionalInformation() *BankingProductV2AdditionalInformation {
	if m != nil {
		return m.AdditionalInformation
	}
	return nil
}

func (m *BankingProductV2) GetApplicationUri() string {
	if m != nil {
		return m.ApplicationUri
	}
	return ""
}

func (m *BankingProductV2) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *BankingProductV2) GetBrandName() string {
	if m != nil {
		return m.BrandName
	}
	return ""
}

func (m *BankingProductV2) GetCardArt() []*BankingProductV2CardArt {
	if m != nil {
		return m.CardArt
	}
	return nil
}

func (m *BankingProductV2) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingProductV2) GetEffectiveFrom() string {
	if m != nil {
		return m.EffectiveFrom
	}
	return ""
}

func (m *BankingProductV2) GetEffectiveTo() string {
	if m != nil {
		return m.EffectiveTo
	}
	return ""
}

func (m *BankingProductV2) GetIsTailored() bool {
	if m != nil {
		return m.IsTailored
	}
	return false
}

func (m *BankingProductV2) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

func (m *BankingProductV2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankingProductV2) GetProductCategory() BankingProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return BankingProductCategory_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *BankingProductV2) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

// Object that contains links to additional information on specific topics
type BankingProductV2AdditionalInformation struct {
	// Description of a bundle that this product can be part of
	BundleUri string `protobuf:"bytes,1,opt,name=bundleUri,proto3" json:"bundleUri,omitempty"`
	// Eligibility rules and criteria for the product
	EligibilityUri string `protobuf:"bytes,2,opt,name=eligibilityUri,proto3" json:"eligibilityUri,omitempty"`
	// Description of fees, pricing, discounts, exemptions and bonuses for the product
	FeesAndPricingUri string `protobuf:"bytes,3,opt,name=feesAndPricingUri,proto3" json:"feesAndPricingUri,omitempty"`
	// General overview of the product
	OverviewUri string `protobuf:"bytes,4,opt,name=overviewUri,proto3" json:"overviewUri,omitempty"`
	// Terms and conditions for the product
	TermsUri             string   `protobuf:"bytes,5,opt,name=termsUri,proto3" json:"termsUri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductV2AdditionalInformation) Reset()         { *m = BankingProductV2AdditionalInformation{} }
func (m *BankingProductV2AdditionalInformation) String() string { return proto.CompactTextString(m) }
func (*BankingProductV2AdditionalInformation) ProtoMessage()    {}
func (*BankingProductV2AdditionalInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{33}
}

func (m *BankingProductV2AdditionalInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductV2AdditionalInformation.Unmarshal(m, b)
}
func (m *BankingProductV2AdditionalInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductV2AdditionalInformation.Marshal(b, m, deterministic)
}
func (m *BankingProductV2AdditionalInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductV2AdditionalInformation.Merge(m, src)
}
func (m *BankingProductV2AdditionalInformation) XXX_Size() int {
	return xxx_messageInfo_BankingProductV2AdditionalInformation.Size(m)
}
func (m *BankingProductV2AdditionalInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductV2AdditionalInformation.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductV2AdditionalInformation proto.InternalMessageInfo

func (m *BankingProductV2AdditionalInformation) GetBundleUri() string {
	if m != nil {
		return m.BundleUri
	}
	return ""
}

func (m *BankingProductV2AdditionalInformation) GetEligibilityUri() string {
	if m != nil {
		return m.EligibilityUri
	}
	return ""
}

func (m *BankingProductV2AdditionalInformation) GetFeesAndPricingUri() string {
	if m != nil {
		return m.FeesAndPricingUri
	}
	return ""
}

func (m *BankingProductV2AdditionalInformation) GetOverviewUri() string {
	if m != nil {
		return m.OverviewUri
	}
	return ""
}

func (m *BankingProductV2AdditionalInformation) GetTermsUri() string {
	if m != nil {
		return m.TermsUri
	}
	return ""
}

type BankingProductV2CardArt struct {
	// Link to a PNG, JPG or GIF image with proportions defined by ISO 7810 ID-1 and width no greater than 512 pixels
	ImageUri string `protobuf:"bytes,1,opt,name=imageUri,proto3" json:"imageUri,omitempty"`
	// Display label for the specific image
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingProductV2CardArt) Reset()         { *m = BankingProductV2CardArt{} }
func (m *BankingProductV2CardArt) String() string { return proto.CompactTextString(m) }
func (*BankingProductV2CardArt) ProtoMessage()    {}
func (*BankingProductV2CardArt) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{34}
}

func (m *BankingProductV2CardArt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingProductV2CardArt.Unmarshal(m, b)
}
func (m *BankingProductV2CardArt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingProductV2CardArt.Marshal(b, m, deterministic)
}
func (m *BankingProductV2CardArt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingProductV2CardArt.Merge(m, src)
}
func (m *BankingProductV2CardArt) XXX_Size() int {
	return xxx_messageInfo_BankingProductV2CardArt.Size(m)
}
func (m *BankingProductV2CardArt) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingProductV2CardArt.DiscardUnknown(m)
}

var xxx_messageInfo_BankingProductV2CardArt proto.InternalMessageInfo

func (m *BankingProductV2CardArt) GetImageUri() string {
	if m != nil {
		return m.ImageUri
	}
	return ""
}

func (m *BankingProductV2CardArt) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type BankingScheduledPayment struct {
	From *BankingScheduledPaymentFrom `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The short display name of the payee as provided by the customer
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// The reference for the transaction that will be provided by the originating institution. Empty string if no data provided
	PayeeReference string `protobuf:"bytes,3,opt,name=payeeReference,proto3" json:"payeeReference,omitempty"`
	// The reference for the transaction that will be used by the originating institution for the purposes of constructing a statement narrative on the payer’s account. Empty string if no data provided
	PayerReference string                             `protobuf:"bytes,4,opt,name=payerReference,proto3" json:"payerReference,omitempty"`
	PaymentSet     []*BankingScheduledPaymentSet      `protobuf:"bytes,5,rep,name=paymentSet,proto3" json:"paymentSet,omitempty"`
	Recurrence     *BankingScheduledPaymentRecurrence `protobuf:"bytes,6,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	// A unique ID of the scheduled payment adhering to the standards for ID permanence
	ScheduledPaymentId string `protobuf:"bytes,7,opt,name=scheduledPaymentId,proto3" json:"scheduledPaymentId,omitempty"`
	// Indicates whether the schedule is currently active. The value SKIP is equivalent to ACTIVE except that the customer has requested the next normal occurrence to be skipped.
	Status               BankingScheduledPayment_BankingScheduledPaymentStatus `protobuf:"varint,8,opt,name=status,proto3,enum=consumerdatastandards.BankingScheduledPayment_BankingScheduledPaymentStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *BankingScheduledPayment) Reset()         { *m = BankingScheduledPayment{} }
func (m *BankingScheduledPayment) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPayment) ProtoMessage()    {}
func (*BankingScheduledPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{35}
}

func (m *BankingScheduledPayment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPayment.Unmarshal(m, b)
}
func (m *BankingScheduledPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPayment.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPayment.Merge(m, src)
}
func (m *BankingScheduledPayment) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPayment.Size(m)
}
func (m *BankingScheduledPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPayment.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPayment proto.InternalMessageInfo

func (m *BankingScheduledPayment) GetFrom() *BankingScheduledPaymentFrom {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *BankingScheduledPayment) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *BankingScheduledPayment) GetPayeeReference() string {
	if m != nil {
		return m.PayeeReference
	}
	return ""
}

func (m *BankingScheduledPayment) GetPayerReference() string {
	if m != nil {
		return m.PayerReference
	}
	return ""
}

func (m *BankingScheduledPayment) GetPaymentSet() []*BankingScheduledPaymentSet {
	if m != nil {
		return m.PaymentSet
	}
	return nil
}

func (m *BankingScheduledPayment) GetRecurrence() *BankingScheduledPaymentRecurrence {
	if m != nil {
		return m.Recurrence
	}
	return nil
}

func (m *BankingScheduledPayment) GetScheduledPaymentId() string {
	if m != nil {
		return m.ScheduledPaymentId
	}
	return ""
}

func (m *BankingScheduledPayment) GetStatus() BankingScheduledPayment_BankingScheduledPaymentStatus {
	if m != nil {
		return m.Status
	}
	return BankingScheduledPayment_BANKING_SCHEDULED_PAYMENT_STATUS_ACTIVE
}

// Object containing details of the source of the payment. Currently only specifies an account ID but provided as an object to facilitate future extensibility and consistency with the to object
type BankingScheduledPaymentFrom struct {
	// ID of the account that is the source of funds for the payment
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentFrom) Reset()         { *m = BankingScheduledPaymentFrom{} }
func (m *BankingScheduledPaymentFrom) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentFrom) ProtoMessage()    {}
func (*BankingScheduledPaymentFrom) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{36}
}

func (m *BankingScheduledPaymentFrom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentFrom.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentFrom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentFrom.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentFrom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentFrom.Merge(m, src)
}
func (m *BankingScheduledPaymentFrom) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentFrom.Size(m)
}
func (m *BankingScheduledPaymentFrom) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentFrom.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentFrom proto.InternalMessageInfo

func (m *BankingScheduledPaymentFrom) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type BankingScheduledPaymentInterval struct {
	// Uses an interval to define the ordinal day within the interval defined by the interval field on which the payment occurs. If the resulting duration is 0 days in length or larger than the number of days in the interval then the payment will occur on the last day of the interval. A duration of 1 day indicates the first day of the interval. If absent the assumed value is P1D. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. The first day of a week is considered to be Monday.
	DayInInterval string `protobuf:"bytes,1,opt,name=dayInInterval,proto3" json:"dayInInterval,omitempty"`
	// An interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)  (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
	Interval             string   `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentInterval) Reset()         { *m = BankingScheduledPaymentInterval{} }
func (m *BankingScheduledPaymentInterval) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentInterval) ProtoMessage()    {}
func (*BankingScheduledPaymentInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{37}
}

func (m *BankingScheduledPaymentInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentInterval.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentInterval.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentInterval.Merge(m, src)
}
func (m *BankingScheduledPaymentInterval) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentInterval.Size(m)
}
func (m *BankingScheduledPaymentInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentInterval.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentInterval proto.InternalMessageInfo

func (m *BankingScheduledPaymentInterval) GetDayInInterval() string {
	if m != nil {
		return m.DayInInterval
	}
	return ""
}

func (m *BankingScheduledPaymentInterval) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

// Object containing the detail of the schedule for the payment
type BankingScheduledPaymentRecurrence struct {
	EventBased       *BankingScheduledPaymentRecurrenceEventBased       `protobuf:"bytes,1,opt,name=eventBased,proto3" json:"eventBased,omitempty"`
	IntervalSchedule *BankingScheduledPaymentRecurrenceIntervalSchedule `protobuf:"bytes,2,opt,name=intervalSchedule,proto3" json:"intervalSchedule,omitempty"`
	LastWeekDay      *BankingScheduledPaymentRecurrenceLastWeekday      `protobuf:"bytes,3,opt,name=lastWeekDay,proto3" json:"lastWeekDay,omitempty"`
	// The date of the next payment under the recurrence schedule
	NextPaymentDate string                                    `protobuf:"bytes,4,opt,name=nextPaymentDate,proto3" json:"nextPaymentDate,omitempty"`
	OnceOff         *BankingScheduledPaymentRecurrenceOnceOff `protobuf:"bytes,5,opt,name=onceOff,proto3" json:"onceOff,omitempty"`
	// The type of recurrence used to define the schedule
	RecurrenceUType      BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType `protobuf:"varint,6,opt,name=recurrenceUType,proto3,enum=consumerdatastandards.BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType" json:"recurrenceUType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                             `json:"-"`
	XXX_sizecache        int32                                                                              `json:"-"`
}

func (m *BankingScheduledPaymentRecurrence) Reset()         { *m = BankingScheduledPaymentRecurrence{} }
func (m *BankingScheduledPaymentRecurrence) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentRecurrence) ProtoMessage()    {}
func (*BankingScheduledPaymentRecurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{38}
}

func (m *BankingScheduledPaymentRecurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentRecurrence.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentRecurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentRecurrence.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentRecurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentRecurrence.Merge(m, src)
}
func (m *BankingScheduledPaymentRecurrence) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentRecurrence.Size(m)
}
func (m *BankingScheduledPaymentRecurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentRecurrence.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentRecurrence proto.InternalMessageInfo

func (m *BankingScheduledPaymentRecurrence) GetEventBased() *BankingScheduledPaymentRecurrenceEventBased {
	if m != nil {
		return m.EventBased
	}
	return nil
}

func (m *BankingScheduledPaymentRecurrence) GetIntervalSchedule() *BankingScheduledPaymentRecurrenceIntervalSchedule {
	if m != nil {
		return m.IntervalSchedule
	}
	return nil
}

func (m *BankingScheduledPaymentRecurrence) GetLastWeekDay() *BankingScheduledPaymentRecurrenceLastWeekday {
	if m != nil {
		return m.LastWeekDay
	}
	return nil
}

func (m *BankingScheduledPaymentRecurrence) GetNextPaymentDate() string {
	if m != nil {
		return m.NextPaymentDate
	}
	return ""
}

func (m *BankingScheduledPaymentRecurrence) GetOnceOff() *BankingScheduledPaymentRecurrenceOnceOff {
	if m != nil {
		return m.OnceOff
	}
	return nil
}

func (m *BankingScheduledPaymentRecurrence) GetRecurrenceUType() BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType {
	if m != nil {
		return m.RecurrenceUType
	}
	return BankingScheduledPaymentRecurrence_BANKING_SCHEDULED_PAYMENT_RECURRENCE_RECURRENCE_U_TYPE_ONCE_OFF
}

// Indicates that the schedule of payments is defined according to an external event that cannot be predetermined. Mandatory if recurrenceUType is set to eventBased
type BankingScheduledPaymentRecurrenceEventBased struct {
	// Description of the event and conditions that will result in the payment. Expected to be formatted for display to a customer
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentRecurrenceEventBased) Reset() {
	*m = BankingScheduledPaymentRecurrenceEventBased{}
}
func (m *BankingScheduledPaymentRecurrenceEventBased) String() string {
	return proto.CompactTextString(m)
}
func (*BankingScheduledPaymentRecurrenceEventBased) ProtoMessage() {}
func (*BankingScheduledPaymentRecurrenceEventBased) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{39}
}

func (m *BankingScheduledPaymentRecurrenceEventBased) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentRecurrenceEventBased) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentRecurrenceEventBased) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased.Merge(m, src)
}
func (m *BankingScheduledPaymentRecurrenceEventBased) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased.Size(m)
}
func (m *BankingScheduledPaymentRecurrenceEventBased) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentRecurrenceEventBased proto.InternalMessageInfo

func (m *BankingScheduledPaymentRecurrenceEventBased) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Indicates that the schedule of payments is defined by a series of intervals. Mandatory if recurrenceUType is set to intervalSchedule
type BankingScheduledPaymentRecurrenceIntervalSchedule struct {
	// The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
	FinalPaymentDate string `protobuf:"bytes,1,opt,name=finalPaymentDate,proto3" json:"finalPaymentDate,omitempty"`
	// An array of interval objects defining the payment schedule.  Each entry in the array is additive, in that it adds payments to the overall payment schedule.  If multiple intervals result in a payment on the same day then only one payment will be made. Must have at least one entry
	Intervals []*BankingScheduledPaymentInterval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
	// Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.<br/>**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.<br/>**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.<br/>**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.<br/>**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
	NonBusinessDayTreatment BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment `protobuf:"varint,3,opt,name=nonBusinessDayTreatment,proto3,enum=consumerdatastandards.BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment" json:"nonBusinessDayTreatment,omitempty"`
	// Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value, If neither field is present the payments will continue indefinitely
	PaymentsRemaining    int32    `protobuf:"varint,4,opt,name=paymentsRemaining,proto3" json:"paymentsRemaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) Reset() {
	*m = BankingScheduledPaymentRecurrenceIntervalSchedule{}
}
func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) String() string {
	return proto.CompactTextString(m)
}
func (*BankingScheduledPaymentRecurrenceIntervalSchedule) ProtoMessage() {}
func (*BankingScheduledPaymentRecurrenceIntervalSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{40}
}

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule.Merge(m, src)
}
func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule.Size(m)
}
func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentRecurrenceIntervalSchedule proto.InternalMessageInfo

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) GetFinalPaymentDate() string {
	if m != nil {
		return m.FinalPaymentDate
	}
	return ""
}

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) GetIntervals() []*BankingScheduledPaymentInterval {
	if m != nil {
		return m.Intervals
	}
	return nil
}

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) GetNonBusinessDayTreatment() BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment {
	if m != nil {
		return m.NonBusinessDayTreatment
	}
	return BankingScheduledPaymentRecurrenceIntervalSchedule_BANKING_SCHEDULED_PAYMENT_RECURRENCE_INTERVAL_SCHEDULE_NON_BUSINESS_DAY_TREATMENT_AFTER
}

func (m *BankingScheduledPaymentRecurrenceIntervalSchedule) GetPaymentsRemaining() int32 {
	if m != nil {
		return m.PaymentsRemaining
	}
	return 0
}

// Indicates that the schedule of payments is defined according to the last occurrence of a specific weekday in an interval. Mandatory if recurrenceUType is set to lastWeekDay
type BankingScheduledPaymentRecurrenceLastWeekday struct {
	// The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
	FinalPaymentDate string `protobuf:"bytes,1,opt,name=finalPaymentDate,proto3" json:"finalPaymentDate,omitempty"`
	// The interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// The weekDay specified. The payment will occur on the last occurrence of this weekday in the interval.
	LastWeekDay BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay `protobuf:"varint,3,opt,name=lastWeekDay,proto3,enum=consumerdatastandards.BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay" json:"lastWeekDay,omitempty"`
	// Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.<br/>**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.<br/>**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.<br/>**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.<br/>**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
	NonBusinessDayTreatment BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment `protobuf:"varint,4,opt,name=nonBusinessDayTreatment,proto3,enum=consumerdatastandards.BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment" json:"nonBusinessDayTreatment,omitempty"`
	// Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
	PaymentsRemaining    int32    `protobuf:"varint,5,opt,name=paymentsRemaining,proto3" json:"paymentsRemaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) Reset() {
	*m = BankingScheduledPaymentRecurrenceLastWeekday{}
}
func (m *BankingScheduledPaymentRecurrenceLastWeekday) String() string {
	return proto.CompactTextString(m)
}
func (*BankingScheduledPaymentRecurrenceLastWeekday) ProtoMessage() {}
func (*BankingScheduledPaymentRecurrenceLastWeekday) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{41}
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentRecurrenceLastWeekday) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentRecurrenceLastWeekday) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday.Merge(m, src)
}
func (m *BankingScheduledPaymentRecurrenceLastWeekday) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday.Size(m)
}
func (m *BankingScheduledPaymentRecurrenceLastWeekday) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentRecurrenceLastWeekday proto.InternalMessageInfo

func (m *BankingScheduledPaymentRecurrenceLastWeekday) GetFinalPaymentDate() string {
	if m != nil {
		return m.FinalPaymentDate
	}
	return ""
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) GetLastWeekDay() BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay {
	if m != nil {
		return m.LastWeekDay
	}
	return BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_LAST_WEEK_DAY_MON
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) GetNonBusinessDayTreatment() BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment {
	if m != nil {
		return m.NonBusinessDayTreatment
	}
	return BankingScheduledPaymentRecurrenceLastWeekday_BANKING_SCHEDULED_PAYMENT_RECURRENCE_LAST_WEEKDAY_NON_BUSINESS_DAY_TREATMENT_AFTER
}

func (m *BankingScheduledPaymentRecurrenceLastWeekday) GetPaymentsRemaining() int32 {
	if m != nil {
		return m.PaymentsRemaining
	}
	return 0
}

// Indicates that the payment is a once off payment on a specific future date. Mandatory if recurrenceUType is set to onceOff
type BankingScheduledPaymentRecurrenceOnceOff struct {
	// The scheduled date for the once off payment
	PaymentDate          string   `protobuf:"bytes,1,opt,name=paymentDate,proto3" json:"paymentDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingScheduledPaymentRecurrenceOnceOff) Reset() {
	*m = BankingScheduledPaymentRecurrenceOnceOff{}
}
func (m *BankingScheduledPaymentRecurrenceOnceOff) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentRecurrenceOnceOff) ProtoMessage()    {}
func (*BankingScheduledPaymentRecurrenceOnceOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{42}
}

func (m *BankingScheduledPaymentRecurrenceOnceOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentRecurrenceOnceOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentRecurrenceOnceOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff.Merge(m, src)
}
func (m *BankingScheduledPaymentRecurrenceOnceOff) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff.Size(m)
}
func (m *BankingScheduledPaymentRecurrenceOnceOff) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentRecurrenceOnceOff proto.InternalMessageInfo

func (m *BankingScheduledPaymentRecurrenceOnceOff) GetPaymentDate() string {
	if m != nil {
		return m.PaymentDate
	}
	return ""
}

// The set of payment amounts and destination accounts for this payment accommodating multi-part payments. A single entry indicates a simple payment with one destination account. Must have at least one entry
type BankingScheduledPaymentSet struct {
	// The amount of the next payment if known. Mandatory unless the isAmountCalculated field is set to true. Must be zero or positive if present
	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The currency for the payment. AUD assumed if not present
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// Flag indicating whether the amount of the payment is calculated based on the context of the event. For instance a payment to reduce the balance of a credit card to zero. If absent then false is assumed
	IsAmountCalculated   bool                       `protobuf:"varint,3,opt,name=isAmountCalculated,proto3" json:"isAmountCalculated,omitempty"`
	To                   *BankingScheduledPaymentTo `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BankingScheduledPaymentSet) Reset()         { *m = BankingScheduledPaymentSet{} }
func (m *BankingScheduledPaymentSet) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentSet) ProtoMessage()    {}
func (*BankingScheduledPaymentSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{43}
}

func (m *BankingScheduledPaymentSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentSet.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentSet.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentSet.Merge(m, src)
}
func (m *BankingScheduledPaymentSet) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentSet.Size(m)
}
func (m *BankingScheduledPaymentSet) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentSet.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentSet proto.InternalMessageInfo

func (m *BankingScheduledPaymentSet) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *BankingScheduledPaymentSet) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BankingScheduledPaymentSet) GetIsAmountCalculated() bool {
	if m != nil {
		return m.IsAmountCalculated
	}
	return false
}

func (m *BankingScheduledPaymentSet) GetTo() *BankingScheduledPaymentTo {
	if m != nil {
		return m.To
	}
	return nil
}

// Object containing details of the destination of the payment. Used to specify a variety of payment destination types
type BankingScheduledPaymentTo struct {
	// Present if toUType is set to accountId. Indicates that the payment is to another account that is accessible under the current consent
	AccountId     string                     `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Biller        *BankingBillerPayee        `protobuf:"bytes,2,opt,name=biller,proto3" json:"biller,omitempty"`
	Domestic      *BankingDomesticPayee      `protobuf:"bytes,3,opt,name=domestic,proto3" json:"domestic,omitempty"`
	International *BankingInternationalPayee `protobuf:"bytes,4,opt,name=international,proto3" json:"international,omitempty"`
	// Present if toUType is set to payeeId. Indicates that the payment is to registered payee that can be accessed using the payee end point. If the Bank Payees scope has not been consented to then a payeeId should not be provided and the full payee details should be provided instead
	PayeeId string `protobuf:"bytes,5,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	// The type of object provided that specifies the destination of the funds for the payment.
	ToUType              BankingScheduledPaymentTo_BankingScheduledPaymentToToUType `protobuf:"varint,6,opt,name=toUType,proto3,enum=consumerdatastandards.BankingScheduledPaymentTo_BankingScheduledPaymentToToUType" json:"toUType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *BankingScheduledPaymentTo) Reset()         { *m = BankingScheduledPaymentTo{} }
func (m *BankingScheduledPaymentTo) String() string { return proto.CompactTextString(m) }
func (*BankingScheduledPaymentTo) ProtoMessage()    {}
func (*BankingScheduledPaymentTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{44}
}

func (m *BankingScheduledPaymentTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingScheduledPaymentTo.Unmarshal(m, b)
}
func (m *BankingScheduledPaymentTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingScheduledPaymentTo.Marshal(b, m, deterministic)
}
func (m *BankingScheduledPaymentTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingScheduledPaymentTo.Merge(m, src)
}
func (m *BankingScheduledPaymentTo) XXX_Size() int {
	return xxx_messageInfo_BankingScheduledPaymentTo.Size(m)
}
func (m *BankingScheduledPaymentTo) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingScheduledPaymentTo.DiscardUnknown(m)
}

var xxx_messageInfo_BankingScheduledPaymentTo proto.InternalMessageInfo

func (m *BankingScheduledPaymentTo) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BankingScheduledPaymentTo) GetBiller() *BankingBillerPayee {
	if m != nil {
		return m.Biller
	}
	return nil
}

func (m *BankingScheduledPaymentTo) GetDomestic() *BankingDomesticPayee {
	if m != nil {
		return m.Domestic
	}
	return nil
}

func (m *BankingScheduledPaymentTo) GetInternational() *BankingInternationalPayee {
	if m != nil {
		return m.International
	}
	return nil
}

func (m *BankingScheduledPaymentTo) GetPayeeId() string {
	if m != nil {
		return m.PayeeId
	}
	return ""
}

func (m *BankingScheduledPaymentTo) GetToUType() BankingScheduledPaymentTo_BankingScheduledPaymentToToUType {
	if m != nil {
		return m.ToUType
	}
	return BankingScheduledPaymentTo_BANKING_SCHEDULED_PAYMENT_TO_TO_U_TYPE_ACCOUNT_ID
}

type BankingTermDepositAccount struct {
	// The lodgement date of the original deposit
	LodgementDate string `protobuf:"bytes,1,opt,name=lodgementDate,proto3" json:"lodgementDate,omitempty"`
	// Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated
	MaturityAmount string `protobuf:"bytes,2,opt,name=maturityAmount,proto3" json:"maturityAmount,omitempty"`
	// If absent assumes AUD
	MaturityCurrency string `protobuf:"bytes,3,opt,name=maturityCurrency,proto3" json:"maturityCurrency,omitempty"`
	// Maturity date for the term deposit
	MaturityDate string `protobuf:"bytes,4,opt,name=maturityDate,proto3" json:"maturityDate,omitempty"`
	// Current instructions on action to be taken at maturity
	MaturityInstructions BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions `protobuf:"varint,5,opt,name=maturityInstructions,proto3,enum=consumerdatastandards.BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions" json:"maturityInstructions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                  `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *BankingTermDepositAccount) Reset()         { *m = BankingTermDepositAccount{} }
func (m *BankingTermDepositAccount) String() string { return proto.CompactTextString(m) }
func (*BankingTermDepositAccount) ProtoMessage()    {}
func (*BankingTermDepositAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{45}
}

func (m *BankingTermDepositAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingTermDepositAccount.Unmarshal(m, b)
}
func (m *BankingTermDepositAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingTermDepositAccount.Marshal(b, m, deterministic)
}
func (m *BankingTermDepositAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingTermDepositAccount.Merge(m, src)
}
func (m *BankingTermDepositAccount) XXX_Size() int {
	return xxx_messageInfo_BankingTermDepositAccount.Size(m)
}
func (m *BankingTermDepositAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingTermDepositAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankingTermDepositAccount proto.InternalMessageInfo

func (m *BankingTermDepositAccount) GetLodgementDate() string {
	if m != nil {
		return m.LodgementDate
	}
	return ""
}

func (m *BankingTermDepositAccount) GetMaturityAmount() string {
	if m != nil {
		return m.MaturityAmount
	}
	return ""
}

func (m *BankingTermDepositAccount) GetMaturityCurrency() string {
	if m != nil {
		return m.MaturityCurrency
	}
	return ""
}

func (m *BankingTermDepositAccount) GetMaturityDate() string {
	if m != nil {
		return m.MaturityDate
	}
	return ""
}

func (m *BankingTermDepositAccount) GetMaturityInstructions() BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions {
	if m != nil {
		return m.MaturityInstructions
	}
	return BankingTermDepositAccount_BANKING_TERM_DEPOSIT_ACCOUNT_MATURITY_INSTRUCTIONS_ROLLED_OVER
}

type BankingTransaction struct {
	// ID of the account for which transactions are provided
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// The value of the transaction. Negative values mean money was outgoing from the account
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// 6 Digit APCA number for the initiating institution
	ApcaNumber string `protobuf:"bytes,3,opt,name=apcaNumber,proto3" json:"apcaNumber,omitempty"`
	// BPAY Biller Code for the transaction (if available)
	BillerCode string `protobuf:"bytes,4,opt,name=billerCode,proto3" json:"billerCode,omitempty"`
	// Name of the BPAY biller for the transaction (if available)
	BillerName string `protobuf:"bytes,5,opt,name=billerName,proto3" json:"billerName,omitempty"`
	// BPAY CRN for the transaction (if available)
	Crn string `protobuf:"bytes,6,opt,name=crn,proto3" json:"crn,omitempty"`
	// The currency for the transaction amount. AUD assumed if not present
	Currency string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	// The transaction description as applied by the financial institution
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// The time the transaction was executed by the originating customer, if available
	ExecutionDateTime string `protobuf:"bytes,9,opt,name=executionDateTime,proto3" json:"executionDateTime,omitempty"`
	// True if extended information is available using the transaction detail end point. False if extended data is not available
	IsDetailAvailable bool `protobuf:"varint,10,opt,name=isDetailAvailable,proto3" json:"isDetailAvailable,omitempty"`
	// The merchant category code (or MCC) for an outgoing payment to a merchant
	MerchantCategoryCode string `protobuf:"bytes,11,opt,name=merchantCategoryCode,proto3" json:"merchantCategoryCode,omitempty"`
	// Name of the merchant for an outgoing payment to a merchant
	MerchantName string `protobuf:"bytes,12,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	// The time the transaction was posted. This field is Mandatory if the transaction has status POSTED.  This is the time that appears on a standard statement
	PostingDateTime string `protobuf:"bytes,13,opt,name=postingDateTime,proto3" json:"postingDateTime,omitempty"`
	// The reference for the transaction provided by the originating institution. Empty string if no data provided
	Reference string `protobuf:"bytes,14,opt,name=reference,proto3" json:"reference,omitempty"`
	// Status of the transaction whether pending or posted. Note that there is currently no provision in the standards to guarantee the ability to correlate a pending transaction with an associated posted transaction
	Status BankingTransaction_BankingTransactionStatus `protobuf:"varint,15,opt,name=status,proto3,enum=consumerdatastandards.BankingTransaction_BankingTransactionStatus" json:"status,omitempty"`
	// A unique ID of the transaction adhering to the standards for ID permanence.  This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type
	TransactionId string `protobuf:"bytes,16,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	// The type of the transaction
	Type BankingTransaction_BankingTransactionType `protobuf:"varint,17,opt,name=type,proto3,enum=consumerdatastandards.BankingTransaction_BankingTransactionType" json:"type,omitempty"`
	// Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry
	ValueDateTime        string   `protobuf:"bytes,18,opt,name=valueDateTime,proto3" json:"valueDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingTransaction) Reset()         { *m = BankingTransaction{} }
func (m *BankingTransaction) String() string { return proto.CompactTextString(m) }
func (*BankingTransaction) ProtoMessage()    {}
func (*BankingTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{46}
}

func (m *BankingTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingTransaction.Unmarshal(m, b)
}
func (m *BankingTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingTransaction.Marshal(b, m, deterministic)
}
func (m *BankingTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingTransaction.Merge(m, src)
}
func (m *BankingTransaction) XXX_Size() int {
	return xxx_messageInfo_BankingTransaction.Size(m)
}
func (m *BankingTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BankingTransaction proto.InternalMessageInfo

func (m *BankingTransaction) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BankingTransaction) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *BankingTransaction) GetApcaNumber() string {
	if m != nil {
		return m.ApcaNumber
	}
	return ""
}

func (m *BankingTransaction) GetBillerCode() string {
	if m != nil {
		return m.BillerCode
	}
	return ""
}

func (m *BankingTransaction) GetBillerName() string {
	if m != nil {
		return m.BillerName
	}
	return ""
}

func (m *BankingTransaction) GetCrn() string {
	if m != nil {
		return m.Crn
	}
	return ""
}

func (m *BankingTransaction) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BankingTransaction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BankingTransaction) GetExecutionDateTime() string {
	if m != nil {
		return m.ExecutionDateTime
	}
	return ""
}

func (m *BankingTransaction) GetIsDetailAvailable() bool {
	if m != nil {
		return m.IsDetailAvailable
	}
	return false
}

func (m *BankingTransaction) GetMerchantCategoryCode() string {
	if m != nil {
		return m.MerchantCategoryCode
	}
	return ""
}

func (m *BankingTransaction) GetMerchantName() string {
	if m != nil {
		return m.MerchantName
	}
	return ""
}

func (m *BankingTransaction) GetPostingDateTime() string {
	if m != nil {
		return m.PostingDateTime
	}
	return ""
}

func (m *BankingTransaction) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *BankingTransaction) GetStatus() BankingTransaction_BankingTransactionStatus {
	if m != nil {
		return m.Status
	}
	return BankingTransaction_BANKING_TRANSACTION_STATUS_PENDING
}

func (m *BankingTransaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *BankingTransaction) GetType() BankingTransaction_BankingTransactionType {
	if m != nil {
		return m.Type
	}
	return BankingTransaction_BANKING_TRANSACTION_TYPE_FEE
}

func (m *BankingTransaction) GetValueDateTime() string {
	if m != nil {
		return m.ValueDateTime
	}
	return ""
}

type BankingTransactionDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingTransactionDetail) Reset()         { *m = BankingTransactionDetail{} }
func (m *BankingTransactionDetail) String() string { return proto.CompactTextString(m) }
func (*BankingTransactionDetail) ProtoMessage()    {}
func (*BankingTransactionDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{47}
}

func (m *BankingTransactionDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingTransactionDetail.Unmarshal(m, b)
}
func (m *BankingTransactionDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingTransactionDetail.Marshal(b, m, deterministic)
}
func (m *BankingTransactionDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingTransactionDetail.Merge(m, src)
}
func (m *BankingTransactionDetail) XXX_Size() int {
	return xxx_messageInfo_BankingTransactionDetail.Size(m)
}
func (m *BankingTransactionDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingTransactionDetail.DiscardUnknown(m)
}

var xxx_messageInfo_BankingTransactionDetail proto.InternalMessageInfo

type BankingTransactionDetailExtendedData struct {
	// Optional extended data provided specific to transaction originated via NPP
	ExtensionUType BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType `protobuf:"varint,1,opt,name=extensionUType,proto3,enum=consumerdatastandards.BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType" json:"extensionUType,omitempty"`
	// Label of the target PayID.  Mandatory for an outbound payment. The name assigned to the BSB/Account Number or PayID (by the owner of the PayID)
	Payee string `protobuf:"bytes,2,opt,name=payee,proto3" json:"payee,omitempty"`
	// Label of the originating payer. Mandatory for inbound payment
	Payer string `protobuf:"bytes,3,opt,name=payer,proto3" json:"payer,omitempty"`
	// Identifier of the applicable overlay service. Valid values are: X2P1.01
	Service              BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService `protobuf:"varint,4,opt,name=service,proto3,enum=consumerdatastandards.BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService" json:"service,omitempty"`
	X2P101Payload        *BankingTransactionDetailExtendedDataX2P101Payload                               `protobuf:"bytes,5,opt,name=x2p101Payload,proto3" json:"x2p101Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *BankingTransactionDetailExtendedData) Reset()         { *m = BankingTransactionDetailExtendedData{} }
func (m *BankingTransactionDetailExtendedData) String() string { return proto.CompactTextString(m) }
func (*BankingTransactionDetailExtendedData) ProtoMessage()    {}
func (*BankingTransactionDetailExtendedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{48}
}

func (m *BankingTransactionDetailExtendedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingTransactionDetailExtendedData.Unmarshal(m, b)
}
func (m *BankingTransactionDetailExtendedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingTransactionDetailExtendedData.Marshal(b, m, deterministic)
}
func (m *BankingTransactionDetailExtendedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingTransactionDetailExtendedData.Merge(m, src)
}
func (m *BankingTransactionDetailExtendedData) XXX_Size() int {
	return xxx_messageInfo_BankingTransactionDetailExtendedData.Size(m)
}
func (m *BankingTransactionDetailExtendedData) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingTransactionDetailExtendedData.DiscardUnknown(m)
}

var xxx_messageInfo_BankingTransactionDetailExtendedData proto.InternalMessageInfo

func (m *BankingTransactionDetailExtendedData) GetExtensionUType() BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType {
	if m != nil {
		return m.ExtensionUType
	}
	return BankingTransactionDetailExtendedData_BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_EXTENSION_U_TYPE_X2P101_PAYLOAD
}

func (m *BankingTransactionDetailExtendedData) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *BankingTransactionDetailExtendedData) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *BankingTransactionDetailExtendedData) GetService() BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService {
	if m != nil {
		return m.Service
	}
	return BankingTransactionDetailExtendedData_BANKING_TRANSACTION_DETAIL_EXTENDED_DATA_SERVICE_X2_P101
}

func (m *BankingTransactionDetailExtendedData) GetX2P101Payload() *BankingTransactionDetailExtendedDataX2P101Payload {
	if m != nil {
		return m.X2P101Payload
	}
	return nil
}

type BankingTransactionDetailExtendedDataX2P101Payload struct {
	// An end to end ID for the payment created at initiation
	EndToEndId string `protobuf:"bytes,1,opt,name=endToEndId,proto3" json:"endToEndId,omitempty"`
	// An extended string description. Only present if specified by the extensionUType field
	ExtendedDescription string `protobuf:"bytes,2,opt,name=extendedDescription,proto3" json:"extendedDescription,omitempty"`
	// Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service
	PurposeCode          string   `protobuf:"bytes,3,opt,name=purposeCode,proto3" json:"purposeCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingTransactionDetailExtendedDataX2P101Payload) Reset() {
	*m = BankingTransactionDetailExtendedDataX2P101Payload{}
}
func (m *BankingTransactionDetailExtendedDataX2P101Payload) String() string {
	return proto.CompactTextString(m)
}
func (*BankingTransactionDetailExtendedDataX2P101Payload) ProtoMessage() {}
func (*BankingTransactionDetailExtendedDataX2P101Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{49}
}

func (m *BankingTransactionDetailExtendedDataX2P101Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload.Unmarshal(m, b)
}
func (m *BankingTransactionDetailExtendedDataX2P101Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload.Marshal(b, m, deterministic)
}
func (m *BankingTransactionDetailExtendedDataX2P101Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload.Merge(m, src)
}
func (m *BankingTransactionDetailExtendedDataX2P101Payload) XXX_Size() int {
	return xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload.Size(m)
}
func (m *BankingTransactionDetailExtendedDataX2P101Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload.DiscardUnknown(m)
}

var xxx_messageInfo_BankingTransactionDetailExtendedDataX2P101Payload proto.InternalMessageInfo

func (m *BankingTransactionDetailExtendedDataX2P101Payload) GetEndToEndId() string {
	if m != nil {
		return m.EndToEndId
	}
	return ""
}

func (m *BankingTransactionDetailExtendedDataX2P101Payload) GetExtendedDescription() string {
	if m != nil {
		return m.ExtendedDescription
	}
	return ""
}

func (m *BankingTransactionDetailExtendedDataX2P101Payload) GetPurposeCode() string {
	if m != nil {
		return m.PurposeCode
	}
	return ""
}

type CommonEmailAddress struct {
	// A correctly formatted email address, as defined by the addr_spec format in [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt)
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// May be true for one and only one email record in the collection. Denotes the default email address
	IsPreferred bool `protobuf:"varint,2,opt,name=isPreferred,proto3" json:"isPreferred,omitempty"`
	// The purpose for the email, as specified by the customer (Enumeration)
	Purpose              CommonEmailAddress_CommonEmailAddressPurpose `protobuf:"varint,3,opt,name=purpose,proto3,enum=consumerdatastandards.CommonEmailAddress_CommonEmailAddressPurpose" json:"purpose,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CommonEmailAddress) Reset()         { *m = CommonEmailAddress{} }
func (m *CommonEmailAddress) String() string { return proto.CompactTextString(m) }
func (*CommonEmailAddress) ProtoMessage()    {}
func (*CommonEmailAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{50}
}

func (m *CommonEmailAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonEmailAddress.Unmarshal(m, b)
}
func (m *CommonEmailAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonEmailAddress.Marshal(b, m, deterministic)
}
func (m *CommonEmailAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonEmailAddress.Merge(m, src)
}
func (m *CommonEmailAddress) XXX_Size() int {
	return xxx_messageInfo_CommonEmailAddress.Size(m)
}
func (m *CommonEmailAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonEmailAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CommonEmailAddress proto.InternalMessageInfo

func (m *CommonEmailAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CommonEmailAddress) GetIsPreferred() bool {
	if m != nil {
		return m.IsPreferred
	}
	return false
}

func (m *CommonEmailAddress) GetPurpose() CommonEmailAddress_CommonEmailAddressPurpose {
	if m != nil {
		return m.Purpose
	}
	return CommonEmailAddress_COMMON_EMAIL_ADDRESS_PURPOSE_WORK
}

type CommonOrganisation struct {
	// Australian Business Number for the organisation
	Abn string `protobuf:"bytes,1,opt,name=abn,proto3" json:"abn,omitempty"`
	// Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type
	Acn string `protobuf:"bytes,2,opt,name=acn,proto3" json:"acn,omitempty"`
	// The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field
	AgentFirstName string `protobuf:"bytes,3,opt,name=agentFirstName,proto3" json:"agentFirstName,omitempty"`
	// The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field
	AgentLastName string `protobuf:"bytes,4,opt,name=agentLastName,proto3" json:"agentLastName,omitempty"`
	// The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known
	AgentRole string `protobuf:"bytes,5,opt,name=agentRole,proto3" json:"agentRole,omitempty"`
	// Name of the organisation
	BusinessName string `protobuf:"bytes,6,opt,name=businessName,proto3" json:"businessName,omitempty"`
	// The date the organisation described was established
	EstablishmentDate string `protobuf:"bytes,7,opt,name=establishmentDate,proto3" json:"establishmentDate,omitempty"`
	// [ANZSIC (2006)](http://www.abs.gov.au/anzsic) code for the organisation.
	IndustryCode string `protobuf:"bytes,8,opt,name=industryCode,proto3" json:"industryCode,omitempty"`
	// True if registered with the ACNC.  False if not. Absent or null if not confirmed.
	IsACNCRegistered bool `protobuf:"varint,9,opt,name=isACNCRegistered,proto3" json:"isACNCRegistered,omitempty"`
	// The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data
	LastUpdateTime string `protobuf:"bytes,10,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	// Legal name, if different to the business name
	LegalName string `protobuf:"bytes,11,opt,name=legalName,proto3" json:"legalName,omitempty"`
	// Legal organisation type
	OrganisationType CommonOrganisation_CommonOrganisationOrganisationType `protobuf:"varint,12,opt,name=organisationType,proto3,enum=consumerdatastandards.CommonOrganisation_CommonOrganisationOrganisationType" json:"organisationType,omitempty"`
	// Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes.  Assumed to be AUS if absent
	RegisteredCountry string `protobuf:"bytes,13,opt,name=registeredCountry,proto3" json:"registeredCountry,omitempty"`
	// Short name used for communication, if different to the business name
	ShortName            string   `protobuf:"bytes,14,opt,name=shortName,proto3" json:"shortName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonOrganisation) Reset()         { *m = CommonOrganisation{} }
func (m *CommonOrganisation) String() string { return proto.CompactTextString(m) }
func (*CommonOrganisation) ProtoMessage()    {}
func (*CommonOrganisation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{51}
}

func (m *CommonOrganisation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonOrganisation.Unmarshal(m, b)
}
func (m *CommonOrganisation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonOrganisation.Marshal(b, m, deterministic)
}
func (m *CommonOrganisation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonOrganisation.Merge(m, src)
}
func (m *CommonOrganisation) XXX_Size() int {
	return xxx_messageInfo_CommonOrganisation.Size(m)
}
func (m *CommonOrganisation) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonOrganisation.DiscardUnknown(m)
}

var xxx_messageInfo_CommonOrganisation proto.InternalMessageInfo

func (m *CommonOrganisation) GetAbn() string {
	if m != nil {
		return m.Abn
	}
	return ""
}

func (m *CommonOrganisation) GetAcn() string {
	if m != nil {
		return m.Acn
	}
	return ""
}

func (m *CommonOrganisation) GetAgentFirstName() string {
	if m != nil {
		return m.AgentFirstName
	}
	return ""
}

func (m *CommonOrganisation) GetAgentLastName() string {
	if m != nil {
		return m.AgentLastName
	}
	return ""
}

func (m *CommonOrganisation) GetAgentRole() string {
	if m != nil {
		return m.AgentRole
	}
	return ""
}

func (m *CommonOrganisation) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *CommonOrganisation) GetEstablishmentDate() string {
	if m != nil {
		return m.EstablishmentDate
	}
	return ""
}

func (m *CommonOrganisation) GetIndustryCode() string {
	if m != nil {
		return m.IndustryCode
	}
	return ""
}

func (m *CommonOrganisation) GetIsACNCRegistered() bool {
	if m != nil {
		return m.IsACNCRegistered
	}
	return false
}

func (m *CommonOrganisation) GetLastUpdateTime() string {
	if m != nil {
		return m.LastUpdateTime
	}
	return ""
}

func (m *CommonOrganisation) GetLegalName() string {
	if m != nil {
		return m.LegalName
	}
	return ""
}

func (m *CommonOrganisation) GetOrganisationType() CommonOrganisation_CommonOrganisationOrganisationType {
	if m != nil {
		return m.OrganisationType
	}
	return CommonOrganisation_COMMON_ORGANISATION_ORGANISATION_TYPE_SOLE_TRADER
}

func (m *CommonOrganisation) GetRegisteredCountry() string {
	if m != nil {
		return m.RegisteredCountry
	}
	return ""
}

func (m *CommonOrganisation) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

type CommonOrganisationDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonOrganisationDetail) Reset()         { *m = CommonOrganisationDetail{} }
func (m *CommonOrganisationDetail) String() string { return proto.CompactTextString(m) }
func (*CommonOrganisationDetail) ProtoMessage()    {}
func (*CommonOrganisationDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{52}
}

func (m *CommonOrganisationDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonOrganisationDetail.Unmarshal(m, b)
}
func (m *CommonOrganisationDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonOrganisationDetail.Marshal(b, m, deterministic)
}
func (m *CommonOrganisationDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonOrganisationDetail.Merge(m, src)
}
func (m *CommonOrganisationDetail) XXX_Size() int {
	return xxx_messageInfo_CommonOrganisationDetail.Size(m)
}
func (m *CommonOrganisationDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonOrganisationDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CommonOrganisationDetail proto.InternalMessageInfo

// Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
type CommonPAFAddress struct {
	// Building/Property name 1
	BuildingName1 string `protobuf:"bytes,1,opt,name=buildingName1,proto3" json:"buildingName1,omitempty"`
	// Building/Property name 2
	BuildingName2 string `protobuf:"bytes,2,opt,name=buildingName2,proto3" json:"buildingName2,omitempty"`
	// Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier
	Dpid string `protobuf:"bytes,3,opt,name=dpid,proto3" json:"dpid,omitempty"`
	// Unit number (including suffix, if applicable)
	FlatUnitNumber string `protobuf:"bytes,4,opt,name=flatUnitNumber,proto3" json:"flatUnitNumber,omitempty"`
	// Type of flat or unit for the address
	FlatUnitType string `protobuf:"bytes,5,opt,name=flatUnitType,proto3" json:"flatUnitType,omitempty"`
	// Floor or level number (including alpha characters)
	FloorLevelNumber string `protobuf:"bytes,6,opt,name=floorLevelNumber,proto3" json:"floorLevelNumber,omitempty"`
	// Type of floor or level for the address
	FloorLevelType string `protobuf:"bytes,7,opt,name=floorLevelType,proto3" json:"floorLevelType,omitempty"`
	// Full name of locality
	LocalityName string `protobuf:"bytes,8,opt,name=localityName,proto3" json:"localityName,omitempty"`
	// Allotment number for the address
	LotNumber string `protobuf:"bytes,9,opt,name=lotNumber,proto3" json:"lotNumber,omitempty"`
	// Postal delivery number if the address is a postal delivery type
	PostalDeliveryNumber int32 `protobuf:"varint,10,opt,name=postalDeliveryNumber,proto3" json:"postalDeliveryNumber,omitempty"`
	// Postal delivery number prefix related to the postal delivery number
	PostalDeliveryNumberPrefix string `protobuf:"bytes,11,opt,name=postalDeliveryNumberPrefix,proto3" json:"postalDeliveryNumberPrefix,omitempty"`
	// Postal delivery number suffix related to the postal delivery number
	PostalDeliveryNumberSuffix string `protobuf:"bytes,12,opt,name=postalDeliveryNumberSuffix,proto3" json:"postalDeliveryNumberSuffix,omitempty"`
	// Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file
	PostalDeliveryType string `protobuf:"bytes,13,opt,name=postalDeliveryType,proto3" json:"postalDeliveryType,omitempty"`
	// Postcode for the locality
	Postcode string `protobuf:"bytes,14,opt,name=postcode,proto3" json:"postcode,omitempty"`
	// State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
	State string `protobuf:"bytes,15,opt,name=state,proto3" json:"state,omitempty"`
	// The name of the street
	StreetName string `protobuf:"bytes,16,opt,name=streetName,proto3" json:"streetName,omitempty"`
	// The street type suffix. Valid enumeration defined by Australia Post PAF code file
	StreetSuffix string `protobuf:"bytes,17,opt,name=streetSuffix,proto3" json:"streetSuffix,omitempty"`
	// The street type. Valid enumeration defined by Australia Post PAF code file
	StreetType string `protobuf:"bytes,18,opt,name=streetType,proto3" json:"streetType,omitempty"`
	// Thoroughfare number for a property (first number in a property ranged address)
	ThoroughfareNumber1 int32 `protobuf:"varint,19,opt,name=thoroughfareNumber1,proto3" json:"thoroughfareNumber1,omitempty"`
	// Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated
	ThoroughfareNumber1Suffix string `protobuf:"bytes,20,opt,name=thoroughfareNumber1Suffix,proto3" json:"thoroughfareNumber1Suffix,omitempty"`
	// Second thoroughfare number (only used if the property has a ranged address eg 23-25)
	ThoroughfareNumber2 int32 `protobuf:"varint,21,opt,name=thoroughfareNumber2,proto3" json:"thoroughfareNumber2,omitempty"`
	// Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated
	ThoroughfareNumber2Suffix string   `protobuf:"bytes,22,opt,name=thoroughfareNumber2Suffix,proto3" json:"thoroughfareNumber2Suffix,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CommonPAFAddress) Reset()         { *m = CommonPAFAddress{} }
func (m *CommonPAFAddress) String() string { return proto.CompactTextString(m) }
func (*CommonPAFAddress) ProtoMessage()    {}
func (*CommonPAFAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{53}
}

func (m *CommonPAFAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPAFAddress.Unmarshal(m, b)
}
func (m *CommonPAFAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPAFAddress.Marshal(b, m, deterministic)
}
func (m *CommonPAFAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPAFAddress.Merge(m, src)
}
func (m *CommonPAFAddress) XXX_Size() int {
	return xxx_messageInfo_CommonPAFAddress.Size(m)
}
func (m *CommonPAFAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPAFAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPAFAddress proto.InternalMessageInfo

func (m *CommonPAFAddress) GetBuildingName1() string {
	if m != nil {
		return m.BuildingName1
	}
	return ""
}

func (m *CommonPAFAddress) GetBuildingName2() string {
	if m != nil {
		return m.BuildingName2
	}
	return ""
}

func (m *CommonPAFAddress) GetDpid() string {
	if m != nil {
		return m.Dpid
	}
	return ""
}

func (m *CommonPAFAddress) GetFlatUnitNumber() string {
	if m != nil {
		return m.FlatUnitNumber
	}
	return ""
}

func (m *CommonPAFAddress) GetFlatUnitType() string {
	if m != nil {
		return m.FlatUnitType
	}
	return ""
}

func (m *CommonPAFAddress) GetFloorLevelNumber() string {
	if m != nil {
		return m.FloorLevelNumber
	}
	return ""
}

func (m *CommonPAFAddress) GetFloorLevelType() string {
	if m != nil {
		return m.FloorLevelType
	}
	return ""
}

func (m *CommonPAFAddress) GetLocalityName() string {
	if m != nil {
		return m.LocalityName
	}
	return ""
}

func (m *CommonPAFAddress) GetLotNumber() string {
	if m != nil {
		return m.LotNumber
	}
	return ""
}

func (m *CommonPAFAddress) GetPostalDeliveryNumber() int32 {
	if m != nil {
		return m.PostalDeliveryNumber
	}
	return 0
}

func (m *CommonPAFAddress) GetPostalDeliveryNumberPrefix() string {
	if m != nil {
		return m.PostalDeliveryNumberPrefix
	}
	return ""
}

func (m *CommonPAFAddress) GetPostalDeliveryNumberSuffix() string {
	if m != nil {
		return m.PostalDeliveryNumberSuffix
	}
	return ""
}

func (m *CommonPAFAddress) GetPostalDeliveryType() string {
	if m != nil {
		return m.PostalDeliveryType
	}
	return ""
}

func (m *CommonPAFAddress) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *CommonPAFAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CommonPAFAddress) GetStreetName() string {
	if m != nil {
		return m.StreetName
	}
	return ""
}

func (m *CommonPAFAddress) GetStreetSuffix() string {
	if m != nil {
		return m.StreetSuffix
	}
	return ""
}

func (m *CommonPAFAddress) GetStreetType() string {
	if m != nil {
		return m.StreetType
	}
	return ""
}

func (m *CommonPAFAddress) GetThoroughfareNumber1() int32 {
	if m != nil {
		return m.ThoroughfareNumber1
	}
	return 0
}

func (m *CommonPAFAddress) GetThoroughfareNumber1Suffix() string {
	if m != nil {
		return m.ThoroughfareNumber1Suffix
	}
	return ""
}

func (m *CommonPAFAddress) GetThoroughfareNumber2() int32 {
	if m != nil {
		return m.ThoroughfareNumber2
	}
	return 0
}

func (m *CommonPAFAddress) GetThoroughfareNumber2Suffix() string {
	if m != nil {
		return m.ThoroughfareNumber2Suffix
	}
	return ""
}

type CommonPerson struct {
	// For people with single names this field need not be present.  The single name should be in the lastName field
	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// For people with single names the single name should be in this field
	LastName string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data
	LastUpdateTime string `protobuf:"bytes,3,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	// Field is mandatory but array may be empty
	MiddleNames []string `protobuf:"bytes,4,rep,name=middleNames,proto3" json:"middleNames,omitempty"`
	// Value is a valid [ANZSCO v1.2](http://www.abs.gov.au/ANZSCO) Standard Occupation classification.
	OccupationCode string `protobuf:"bytes,5,opt,name=occupationCode,proto3" json:"occupationCode,omitempty"`
	// Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)
	Prefix string `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Used for a trailing suffix to the name (e.g. Jr)
	Suffix               string   `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPerson) Reset()         { *m = CommonPerson{} }
func (m *CommonPerson) String() string { return proto.CompactTextString(m) }
func (*CommonPerson) ProtoMessage()    {}
func (*CommonPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{54}
}

func (m *CommonPerson) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPerson.Unmarshal(m, b)
}
func (m *CommonPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPerson.Marshal(b, m, deterministic)
}
func (m *CommonPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPerson.Merge(m, src)
}
func (m *CommonPerson) XXX_Size() int {
	return xxx_messageInfo_CommonPerson.Size(m)
}
func (m *CommonPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPerson.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPerson proto.InternalMessageInfo

func (m *CommonPerson) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CommonPerson) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *CommonPerson) GetLastUpdateTime() string {
	if m != nil {
		return m.LastUpdateTime
	}
	return ""
}

func (m *CommonPerson) GetMiddleNames() []string {
	if m != nil {
		return m.MiddleNames
	}
	return nil
}

func (m *CommonPerson) GetOccupationCode() string {
	if m != nil {
		return m.OccupationCode
	}
	return ""
}

func (m *CommonPerson) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *CommonPerson) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

type CommonPersonDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPersonDetail) Reset()         { *m = CommonPersonDetail{} }
func (m *CommonPersonDetail) String() string { return proto.CompactTextString(m) }
func (*CommonPersonDetail) ProtoMessage()    {}
func (*CommonPersonDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{55}
}

func (m *CommonPersonDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPersonDetail.Unmarshal(m, b)
}
func (m *CommonPersonDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPersonDetail.Marshal(b, m, deterministic)
}
func (m *CommonPersonDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPersonDetail.Merge(m, src)
}
func (m *CommonPersonDetail) XXX_Size() int {
	return xxx_messageInfo_CommonPersonDetail.Size(m)
}
func (m *CommonPersonDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPersonDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPersonDetail proto.InternalMessageInfo

type CommonPhoneNumber struct {
	// Required for non Mobile Phones, if field is present and refers to Australian code - the leading 0 should be omitted.
	AreaCode string `protobuf:"bytes,1,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	// If absent, assumed to be Australia (+61). The + should be included
	CountryCode string `protobuf:"bytes,2,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// An extension number (if applicable)
	Extension string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	// Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of [RFC 3966](https://www.ietf.org/rfc/rfc3966.txt)
	FullNumber string `protobuf:"bytes,4,opt,name=fullNumber,proto3" json:"fullNumber,omitempty"`
	// May be true for one and only one entry to indicate the preferred phone number. Assumed to be 'false' if not present
	IsPreferred bool `protobuf:"varint,5,opt,name=isPreferred,proto3" json:"isPreferred,omitempty"`
	// The actual phone number, with leading zeros as appropriate
	Number string `protobuf:"bytes,6,opt,name=number,proto3" json:"number,omitempty"`
	// The purpose of the number as specified by the customer
	Purpose              CommonPhoneNumber_CommonPhoneNumberPurpose `protobuf:"varint,7,opt,name=purpose,proto3,enum=consumerdatastandards.CommonPhoneNumber_CommonPhoneNumberPurpose" json:"purpose,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CommonPhoneNumber) Reset()         { *m = CommonPhoneNumber{} }
func (m *CommonPhoneNumber) String() string { return proto.CompactTextString(m) }
func (*CommonPhoneNumber) ProtoMessage()    {}
func (*CommonPhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{56}
}

func (m *CommonPhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPhoneNumber.Unmarshal(m, b)
}
func (m *CommonPhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPhoneNumber.Marshal(b, m, deterministic)
}
func (m *CommonPhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPhoneNumber.Merge(m, src)
}
func (m *CommonPhoneNumber) XXX_Size() int {
	return xxx_messageInfo_CommonPhoneNumber.Size(m)
}
func (m *CommonPhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPhoneNumber proto.InternalMessageInfo

func (m *CommonPhoneNumber) GetAreaCode() string {
	if m != nil {
		return m.AreaCode
	}
	return ""
}

func (m *CommonPhoneNumber) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *CommonPhoneNumber) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *CommonPhoneNumber) GetFullNumber() string {
	if m != nil {
		return m.FullNumber
	}
	return ""
}

func (m *CommonPhoneNumber) GetIsPreferred() bool {
	if m != nil {
		return m.IsPreferred
	}
	return false
}

func (m *CommonPhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *CommonPhoneNumber) GetPurpose() CommonPhoneNumber_CommonPhoneNumberPurpose {
	if m != nil {
		return m.Purpose
	}
	return CommonPhoneNumber_COMMON_PHONE_NUMBER_PURPOSE_MOBILE
}

type CommonPhysicalAddress struct {
	// The type of address object present
	AddressUType         CommonPhysicalAddress_CommonPhysicalAddressAddressUType `protobuf:"varint,1,opt,name=addressUType,proto3,enum=consumerdatastandards.CommonPhysicalAddress_CommonPhysicalAddressAddressUType" json:"addressUType,omitempty"`
	Paf                  *CommonPAFAddress                                       `protobuf:"bytes,2,opt,name=paf,proto3" json:"paf,omitempty"`
	Simple               *CommonSimpleAddress                                    `protobuf:"bytes,3,opt,name=simple,proto3" json:"simple,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *CommonPhysicalAddress) Reset()         { *m = CommonPhysicalAddress{} }
func (m *CommonPhysicalAddress) String() string { return proto.CompactTextString(m) }
func (*CommonPhysicalAddress) ProtoMessage()    {}
func (*CommonPhysicalAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{57}
}

func (m *CommonPhysicalAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPhysicalAddress.Unmarshal(m, b)
}
func (m *CommonPhysicalAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPhysicalAddress.Marshal(b, m, deterministic)
}
func (m *CommonPhysicalAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPhysicalAddress.Merge(m, src)
}
func (m *CommonPhysicalAddress) XXX_Size() int {
	return xxx_messageInfo_CommonPhysicalAddress.Size(m)
}
func (m *CommonPhysicalAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPhysicalAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPhysicalAddress proto.InternalMessageInfo

func (m *CommonPhysicalAddress) GetAddressUType() CommonPhysicalAddress_CommonPhysicalAddressAddressUType {
	if m != nil {
		return m.AddressUType
	}
	return CommonPhysicalAddress_COMMON_PHYSICAL_ADDRESS_ADDRESS_U_TYPE_SIMPLE
}

func (m *CommonPhysicalAddress) GetPaf() *CommonPAFAddress {
	if m != nil {
		return m.Paf
	}
	return nil
}

func (m *CommonPhysicalAddress) GetSimple() *CommonSimpleAddress {
	if m != nil {
		return m.Simple
	}
	return nil
}

type CommonPhysicalAddressWithPurpose struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPhysicalAddressWithPurpose) Reset()         { *m = CommonPhysicalAddressWithPurpose{} }
func (m *CommonPhysicalAddressWithPurpose) String() string { return proto.CompactTextString(m) }
func (*CommonPhysicalAddressWithPurpose) ProtoMessage()    {}
func (*CommonPhysicalAddressWithPurpose) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{58}
}

func (m *CommonPhysicalAddressWithPurpose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPhysicalAddressWithPurpose.Unmarshal(m, b)
}
func (m *CommonPhysicalAddressWithPurpose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPhysicalAddressWithPurpose.Marshal(b, m, deterministic)
}
func (m *CommonPhysicalAddressWithPurpose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPhysicalAddressWithPurpose.Merge(m, src)
}
func (m *CommonPhysicalAddressWithPurpose) XXX_Size() int {
	return xxx_messageInfo_CommonPhysicalAddressWithPurpose.Size(m)
}
func (m *CommonPhysicalAddressWithPurpose) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPhysicalAddressWithPurpose.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPhysicalAddressWithPurpose proto.InternalMessageInfo

type CommonSimpleAddress struct {
	// First line of the standard address object
	AddressLine1 string `protobuf:"bytes,1,opt,name=addressLine1,proto3" json:"addressLine1,omitempty"`
	// Second line of the standard address object
	AddressLine2 string `protobuf:"bytes,2,opt,name=addressLine2,proto3" json:"addressLine2,omitempty"`
	// Third line of the standard address object
	AddressLine3 string `protobuf:"bytes,3,opt,name=addressLine3,proto3" json:"addressLine3,omitempty"`
	// Name of the city or locality
	City string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	// A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	// Name of the individual or business formatted for inclusion in an address used for physical mail
	MailingName string `protobuf:"bytes,6,opt,name=mailingName,proto3" json:"mailingName,omitempty"`
	// Mandatory for Australian addresses
	Postcode string `protobuf:"bytes,7,opt,name=postcode,proto3" json:"postcode,omitempty"`
	// Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
	State                string   `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonSimpleAddress) Reset()         { *m = CommonSimpleAddress{} }
func (m *CommonSimpleAddress) String() string { return proto.CompactTextString(m) }
func (*CommonSimpleAddress) ProtoMessage()    {}
func (*CommonSimpleAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{59}
}

func (m *CommonSimpleAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonSimpleAddress.Unmarshal(m, b)
}
func (m *CommonSimpleAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonSimpleAddress.Marshal(b, m, deterministic)
}
func (m *CommonSimpleAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonSimpleAddress.Merge(m, src)
}
func (m *CommonSimpleAddress) XXX_Size() int {
	return xxx_messageInfo_CommonSimpleAddress.Size(m)
}
func (m *CommonSimpleAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonSimpleAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CommonSimpleAddress proto.InternalMessageInfo

func (m *CommonSimpleAddress) GetAddressLine1() string {
	if m != nil {
		return m.AddressLine1
	}
	return ""
}

func (m *CommonSimpleAddress) GetAddressLine2() string {
	if m != nil {
		return m.AddressLine2
	}
	return ""
}

func (m *CommonSimpleAddress) GetAddressLine3() string {
	if m != nil {
		return m.AddressLine3
	}
	return ""
}

func (m *CommonSimpleAddress) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CommonSimpleAddress) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CommonSimpleAddress) GetMailingName() string {
	if m != nil {
		return m.MailingName
	}
	return ""
}

func (m *CommonSimpleAddress) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *CommonSimpleAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type DiscoveryOutage struct {
	// Planned duration of the outage. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	Duration string `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	// Provides an explanation of the current outage that can be displayed to an end customer
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
	// Flag that indicates, if present and set to true, that the outage is only partial meaning that only a subset of normally available end points will be affected by the outage
	IsPartial bool `protobuf:"varint,3,opt,name=isPartial,proto3" json:"isPartial,omitempty"`
	// Date and time that the outage is scheduled to begin
	OutageTime           string   `protobuf:"bytes,4,opt,name=outageTime,proto3" json:"outageTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryOutage) Reset()         { *m = DiscoveryOutage{} }
func (m *DiscoveryOutage) String() string { return proto.CompactTextString(m) }
func (*DiscoveryOutage) ProtoMessage()    {}
func (*DiscoveryOutage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{60}
}

func (m *DiscoveryOutage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryOutage.Unmarshal(m, b)
}
func (m *DiscoveryOutage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryOutage.Marshal(b, m, deterministic)
}
func (m *DiscoveryOutage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryOutage.Merge(m, src)
}
func (m *DiscoveryOutage) XXX_Size() int {
	return xxx_messageInfo_DiscoveryOutage.Size(m)
}
func (m *DiscoveryOutage) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryOutage.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryOutage proto.InternalMessageInfo

func (m *DiscoveryOutage) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *DiscoveryOutage) GetExplanation() string {
	if m != nil {
		return m.Explanation
	}
	return ""
}

func (m *DiscoveryOutage) GetIsPartial() bool {
	if m != nil {
		return m.IsPartial
	}
	return false
}

func (m *DiscoveryOutage) GetOutageTime() string {
	if m != nil {
		return m.OutageTime
	}
	return ""
}

type GetAccountDetailRequest struct {
	// A tokenised identifier for the account which is unique but not shareable
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,2,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,3,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,4,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,5,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,6,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,7,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountDetailRequest) Reset()         { *m = GetAccountDetailRequest{} }
func (m *GetAccountDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountDetailRequest) ProtoMessage()    {}
func (*GetAccountDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{61}
}

func (m *GetAccountDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountDetailRequest.Unmarshal(m, b)
}
func (m *GetAccountDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountDetailRequest.Merge(m, src)
}
func (m *GetAccountDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountDetailRequest.Size(m)
}
func (m *GetAccountDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountDetailRequest proto.InternalMessageInfo

func (m *GetAccountDetailRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetAccountDetailRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetBalanceRequest struct {
	// ID of the specific account requested
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,2,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,3,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,4,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,5,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,6,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,7,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{62}
}

func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(m, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetBalanceRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetBalanceRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetBalanceRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetBalanceRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetBalanceRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetBalanceRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetCustomerDetailRequest struct {
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,1,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,2,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,3,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,4,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,5,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,6,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerDetailRequest) Reset()         { *m = GetCustomerDetailRequest{} }
func (m *GetCustomerDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerDetailRequest) ProtoMessage()    {}
func (*GetCustomerDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{63}
}

func (m *GetCustomerDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerDetailRequest.Unmarshal(m, b)
}
func (m *GetCustomerDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerDetailRequest.Merge(m, src)
}
func (m *GetCustomerDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerDetailRequest.Size(m)
}
func (m *GetCustomerDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerDetailRequest proto.InternalMessageInfo

func (m *GetCustomerDetailRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetCustomerDetailRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetCustomerDetailRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetCustomerDetailRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetCustomerDetailRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetCustomerDetailRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetCustomerRequest struct {
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,1,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,2,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,3,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,4,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,5,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,6,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerRequest) Reset()         { *m = GetCustomerRequest{} }
func (m *GetCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerRequest) ProtoMessage()    {}
func (*GetCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{64}
}

func (m *GetCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerRequest.Unmarshal(m, b)
}
func (m *GetCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerRequest.Merge(m, src)
}
func (m *GetCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerRequest.Size(m)
}
func (m *GetCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerRequest proto.InternalMessageInfo

func (m *GetCustomerRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetCustomerRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetCustomerRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetCustomerRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetCustomerRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetCustomerRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetOutagesRequest struct {
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,1,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,2,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutagesRequest) Reset()         { *m = GetOutagesRequest{} }
func (m *GetOutagesRequest) String() string { return proto.CompactTextString(m) }
func (*GetOutagesRequest) ProtoMessage()    {}
func (*GetOutagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{65}
}

func (m *GetOutagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutagesRequest.Unmarshal(m, b)
}
func (m *GetOutagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutagesRequest.Marshal(b, m, deterministic)
}
func (m *GetOutagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutagesRequest.Merge(m, src)
}
func (m *GetOutagesRequest) XXX_Size() int {
	return xxx_messageInfo_GetOutagesRequest.Size(m)
}
func (m *GetOutagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutagesRequest proto.InternalMessageInfo

func (m *GetOutagesRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetOutagesRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetPayeeDetailRequest struct {
	// The ID used to locate the details of a particular payee
	PayeeId string `protobuf:"bytes,1,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,2,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,3,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,4,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,5,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,6,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,7,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPayeeDetailRequest) Reset()         { *m = GetPayeeDetailRequest{} }
func (m *GetPayeeDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetPayeeDetailRequest) ProtoMessage()    {}
func (*GetPayeeDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{66}
}

func (m *GetPayeeDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPayeeDetailRequest.Unmarshal(m, b)
}
func (m *GetPayeeDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPayeeDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetPayeeDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPayeeDetailRequest.Merge(m, src)
}
func (m *GetPayeeDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetPayeeDetailRequest.Size(m)
}
func (m *GetPayeeDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPayeeDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPayeeDetailRequest proto.InternalMessageInfo

func (m *GetPayeeDetailRequest) GetPayeeId() string {
	if m != nil {
		return m.PayeeId
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetPayeeDetailRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetProductDetailRequest struct {
	// ID of the specific product requested
	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,2,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,3,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProductDetailRequest) Reset()         { *m = GetProductDetailRequest{} }
func (m *GetProductDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetProductDetailRequest) ProtoMessage()    {}
func (*GetProductDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{67}
}

func (m *GetProductDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductDetailRequest.Unmarshal(m, b)
}
func (m *GetProductDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetProductDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductDetailRequest.Merge(m, src)
}
func (m *GetProductDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetProductDetailRequest.Size(m)
}
func (m *GetProductDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductDetailRequest proto.InternalMessageInfo

func (m *GetProductDetailRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *GetProductDetailRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetProductDetailRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetStatusRequest struct {
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,1,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,2,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusRequest) Reset()         { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()    {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{68}
}

func (m *GetStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusRequest.Unmarshal(m, b)
}
func (m *GetStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusRequest.Merge(m, src)
}
func (m *GetStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatusRequest.Size(m)
}
func (m *GetStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusRequest proto.InternalMessageInfo

func (m *GetStatusRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetStatusRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetTransactionDetailRequest struct {
	// ID of the account to get transactions for.  Must have previously been returned by one of the account list end points
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// ID of the transaction obtained from a previous call to one of the other transaction end points
	TransactionId string `protobuf:"bytes,2,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,3,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,4,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,5,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,6,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,7,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,8,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionDetailRequest) Reset()         { *m = GetTransactionDetailRequest{} }
func (m *GetTransactionDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionDetailRequest) ProtoMessage()    {}
func (*GetTransactionDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{69}
}

func (m *GetTransactionDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionDetailRequest.Unmarshal(m, b)
}
func (m *GetTransactionDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionDetailRequest.Merge(m, src)
}
func (m *GetTransactionDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionDetailRequest.Size(m)
}
func (m *GetTransactionDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionDetailRequest proto.InternalMessageInfo

func (m *GetTransactionDetailRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetTransactionDetailRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type GetTransactionsRequest struct {
	// ID of the account to get transactions for.  Must have previously been returned by one of the account list end points.
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Filter transactions to only transactions with amounts less than or equal to than this amount
	MaxAmount string `protobuf:"bytes,2,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Filter transactions to only transactions with amounts higher or equal to than this amount
	MinAmount string `protobuf:"bytes,3,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// Constrain the transaction history request to transactions with effective time at or before this date/time.  If absent defaults to today.  Format is aligned to DateTimeString common type
	NewestTime string `protobuf:"bytes,4,opt,name=newest_time,json=newestTime,proto3" json:"newest_time,omitempty"`
	// Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to newest-time minus 90 days.  Format is aligned to DateTimeString common type
	OldestTime string `protobuf:"bytes,5,opt,name=oldest_time,json=oldestTime,proto3" json:"oldest_time,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Filter transactions to only transactions where this string value is found as a substring of either the reference or description fields. Format is arbitrary ASCII string. This parameter is optionally implemented by data holders. If it is not implemented then a response should be provided as normal without text filtering applied and an additional boolean field named isQueryParamUnsupported should be included in the meta object and set to true (whether the text parameter is supplied or not)
	Text string `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,9,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,10,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,11,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,12,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,13,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{70}
}

func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(m, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

func (m *GetTransactionsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetTransactionsRequest) GetMaxAmount() string {
	if m != nil {
		return m.MaxAmount
	}
	return ""
}

func (m *GetTransactionsRequest) GetMinAmount() string {
	if m != nil {
		return m.MinAmount
	}
	return ""
}

func (m *GetTransactionsRequest) GetNewestTime() string {
	if m != nil {
		return m.NewestTime
	}
	return ""
}

func (m *GetTransactionsRequest) GetOldestTime() string {
	if m != nil {
		return m.OldestTime
	}
	return ""
}

func (m *GetTransactionsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTransactionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetTransactionsRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *GetTransactionsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *GetTransactionsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *GetTransactionsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *GetTransactionsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *GetTransactionsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type Links struct {
	// Fully qualified link that generated the current response document
	Self                 string   `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Links) Reset()         { *m = Links{} }
func (m *Links) String() string { return proto.CompactTextString(m) }
func (*Links) ProtoMessage()    {}
func (*Links) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{71}
}

func (m *Links) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Links.Unmarshal(m, b)
}
func (m *Links) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Links.Marshal(b, m, deterministic)
}
func (m *Links) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Links.Merge(m, src)
}
func (m *Links) XXX_Size() int {
	return xxx_messageInfo_Links.Size(m)
}
func (m *Links) XXX_DiscardUnknown() {
	xxx_messageInfo_Links.DiscardUnknown(m)
}

var xxx_messageInfo_Links proto.InternalMessageInfo

func (m *Links) GetSelf() string {
	if m != nil {
		return m.Self
	}
	return ""
}

type LinksPaginated struct {
	// URI to the first page of this set. Mandatory if this response is not the first page
	First string `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	// URI to the last page of this set. Mandatory if this response is not the last page
	Last string `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	// URI to the next page of this set. Mandatory if this response is not the last page
	Next string `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
	// URI to the previous page of this set. Mandatory if this response is not the first page
	Prev string `protobuf:"bytes,4,opt,name=prev,proto3" json:"prev,omitempty"`
	// Fully qualified link that generated the current response document
	Self                 string   `protobuf:"bytes,5,opt,name=self,proto3" json:"self,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinksPaginated) Reset()         { *m = LinksPaginated{} }
func (m *LinksPaginated) String() string { return proto.CompactTextString(m) }
func (*LinksPaginated) ProtoMessage()    {}
func (*LinksPaginated) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{72}
}

func (m *LinksPaginated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinksPaginated.Unmarshal(m, b)
}
func (m *LinksPaginated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinksPaginated.Marshal(b, m, deterministic)
}
func (m *LinksPaginated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinksPaginated.Merge(m, src)
}
func (m *LinksPaginated) XXX_Size() int {
	return xxx_messageInfo_LinksPaginated.Size(m)
}
func (m *LinksPaginated) XXX_DiscardUnknown() {
	xxx_messageInfo_LinksPaginated.DiscardUnknown(m)
}

var xxx_messageInfo_LinksPaginated proto.InternalMessageInfo

func (m *LinksPaginated) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *LinksPaginated) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *LinksPaginated) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *LinksPaginated) GetPrev() string {
	if m != nil {
		return m.Prev
	}
	return ""
}

func (m *LinksPaginated) GetSelf() string {
	if m != nil {
		return m.Self
	}
	return ""
}

type ListAccountsRequest struct {
	// Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts
	IsOwned bool `protobuf:"varint,1,opt,name=is_owned,json=isOwned,proto3" json:"is_owned,omitempty"`
	// Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed
	OpenStatus ListAccountsRequest_ListAccountsRequestOpenStatus `protobuf:"varint,2,opt,name=open_status,json=openStatus,proto3,enum=consumerdatastandards.ListAccountsRequest_ListAccountsRequestOpenStatus" json:"open_status,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
	ProductCategory ListAccountsRequest_ListAccountsRequestProductCategory `protobuf:"varint,5,opt,name=product_category,json=productCategory,proto3,enum=consumerdatastandards.ListAccountsRequest_ListAccountsRequestProductCategory" json:"product_category,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,6,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,7,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,8,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,9,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,10,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,11,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAccountsRequest) Reset()         { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()    {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{73}
}

func (m *ListAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsRequest.Unmarshal(m, b)
}
func (m *ListAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsRequest.Merge(m, src)
}
func (m *ListAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAccountsRequest.Size(m)
}
func (m *ListAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsRequest proto.InternalMessageInfo

func (m *ListAccountsRequest) GetIsOwned() bool {
	if m != nil {
		return m.IsOwned
	}
	return false
}

func (m *ListAccountsRequest) GetOpenStatus() ListAccountsRequest_ListAccountsRequestOpenStatus {
	if m != nil {
		return m.OpenStatus
	}
	return ListAccountsRequest_LIST_ACCOUNTS_REQUEST_OPEN_STATUS_OPEN
}

func (m *ListAccountsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAccountsRequest) GetProductCategory() ListAccountsRequest_ListAccountsRequestProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return ListAccountsRequest_LIST_ACCOUNTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *ListAccountsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListAccountsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListAccountsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListAccountsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListAccountsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListAccountsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListBalancesBulkRequest struct {
	// Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts
	IsOwned bool `protobuf:"varint,1,opt,name=is_owned,json=isOwned,proto3" json:"is_owned,omitempty"`
	// Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed
	OpenStatus ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus `protobuf:"varint,2,opt,name=open_status,json=openStatus,proto3,enum=consumerdatastandards.ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus" json:"open_status,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
	ProductCategory ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory `protobuf:"varint,5,opt,name=product_category,json=productCategory,proto3,enum=consumerdatastandards.ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory" json:"product_category,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,6,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,7,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,8,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,9,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,10,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,11,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBalancesBulkRequest) Reset()         { *m = ListBalancesBulkRequest{} }
func (m *ListBalancesBulkRequest) String() string { return proto.CompactTextString(m) }
func (*ListBalancesBulkRequest) ProtoMessage()    {}
func (*ListBalancesBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{74}
}

func (m *ListBalancesBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBalancesBulkRequest.Unmarshal(m, b)
}
func (m *ListBalancesBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBalancesBulkRequest.Marshal(b, m, deterministic)
}
func (m *ListBalancesBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBalancesBulkRequest.Merge(m, src)
}
func (m *ListBalancesBulkRequest) XXX_Size() int {
	return xxx_messageInfo_ListBalancesBulkRequest.Size(m)
}
func (m *ListBalancesBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBalancesBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBalancesBulkRequest proto.InternalMessageInfo

func (m *ListBalancesBulkRequest) GetIsOwned() bool {
	if m != nil {
		return m.IsOwned
	}
	return false
}

func (m *ListBalancesBulkRequest) GetOpenStatus() ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus {
	if m != nil {
		return m.OpenStatus
	}
	return ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_OPEN_STATUS_OPEN
}

func (m *ListBalancesBulkRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListBalancesBulkRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBalancesBulkRequest) GetProductCategory() ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return ListBalancesBulkRequest_LIST_BALANCES_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *ListBalancesBulkRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListBalancesBulkRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListBalancesBulkRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListBalancesBulkRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListBalancesBulkRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListBalancesBulkRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListBalancesSpecificAccountsRequest struct {
	// The list of account IDs to obtain balances for
	AccountIds *RequestAccountIds `protobuf:"bytes,1,opt,name=accountIds,proto3" json:"accountIds,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBalancesSpecificAccountsRequest) Reset()         { *m = ListBalancesSpecificAccountsRequest{} }
func (m *ListBalancesSpecificAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBalancesSpecificAccountsRequest) ProtoMessage()    {}
func (*ListBalancesSpecificAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{75}
}

func (m *ListBalancesSpecificAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBalancesSpecificAccountsRequest.Unmarshal(m, b)
}
func (m *ListBalancesSpecificAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBalancesSpecificAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListBalancesSpecificAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBalancesSpecificAccountsRequest.Merge(m, src)
}
func (m *ListBalancesSpecificAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBalancesSpecificAccountsRequest.Size(m)
}
func (m *ListBalancesSpecificAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBalancesSpecificAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBalancesSpecificAccountsRequest proto.InternalMessageInfo

func (m *ListBalancesSpecificAccountsRequest) GetAccountIds() *RequestAccountIds {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *ListBalancesSpecificAccountsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListBalancesSpecificAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBalancesSpecificAccountsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListBalancesSpecificAccountsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListBalancesSpecificAccountsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListBalancesSpecificAccountsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListBalancesSpecificAccountsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListBalancesSpecificAccountsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListDirectDebitsBulkRequest struct {
	// Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts
	IsOwned bool `protobuf:"varint,1,opt,name=is_owned,json=isOwned,proto3" json:"is_owned,omitempty"`
	// Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed
	OpenStatus ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus `protobuf:"varint,2,opt,name=open_status,json=openStatus,proto3,enum=consumerdatastandards.ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus" json:"open_status,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
	ProductCategory ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory `protobuf:"varint,5,opt,name=product_category,json=productCategory,proto3,enum=consumerdatastandards.ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory" json:"product_category,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,6,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,7,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,8,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,9,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,10,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,11,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDirectDebitsBulkRequest) Reset()         { *m = ListDirectDebitsBulkRequest{} }
func (m *ListDirectDebitsBulkRequest) String() string { return proto.CompactTextString(m) }
func (*ListDirectDebitsBulkRequest) ProtoMessage()    {}
func (*ListDirectDebitsBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{76}
}

func (m *ListDirectDebitsBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDirectDebitsBulkRequest.Unmarshal(m, b)
}
func (m *ListDirectDebitsBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDirectDebitsBulkRequest.Marshal(b, m, deterministic)
}
func (m *ListDirectDebitsBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDirectDebitsBulkRequest.Merge(m, src)
}
func (m *ListDirectDebitsBulkRequest) XXX_Size() int {
	return xxx_messageInfo_ListDirectDebitsBulkRequest.Size(m)
}
func (m *ListDirectDebitsBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDirectDebitsBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDirectDebitsBulkRequest proto.InternalMessageInfo

func (m *ListDirectDebitsBulkRequest) GetIsOwned() bool {
	if m != nil {
		return m.IsOwned
	}
	return false
}

func (m *ListDirectDebitsBulkRequest) GetOpenStatus() ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus {
	if m != nil {
		return m.OpenStatus
	}
	return ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_OPEN_STATUS_OPEN
}

func (m *ListDirectDebitsBulkRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListDirectDebitsBulkRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDirectDebitsBulkRequest) GetProductCategory() ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return ListDirectDebitsBulkRequest_LIST_DIRECT_DEBITS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *ListDirectDebitsBulkRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListDirectDebitsBulkRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListDirectDebitsBulkRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListDirectDebitsBulkRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListDirectDebitsBulkRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListDirectDebitsBulkRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListDirectDebitsRequest struct {
	// ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDirectDebitsRequest) Reset()         { *m = ListDirectDebitsRequest{} }
func (m *ListDirectDebitsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDirectDebitsRequest) ProtoMessage()    {}
func (*ListDirectDebitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{77}
}

func (m *ListDirectDebitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDirectDebitsRequest.Unmarshal(m, b)
}
func (m *ListDirectDebitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDirectDebitsRequest.Marshal(b, m, deterministic)
}
func (m *ListDirectDebitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDirectDebitsRequest.Merge(m, src)
}
func (m *ListDirectDebitsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDirectDebitsRequest.Size(m)
}
func (m *ListDirectDebitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDirectDebitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDirectDebitsRequest proto.InternalMessageInfo

func (m *ListDirectDebitsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListDirectDebitsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDirectDebitsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListDirectDebitsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListDirectDebitsSpecificAccountsRequest struct {
	// Array of specific accountIds to obtain authorisations for
	AccountIds *RequestAccountIds `protobuf:"bytes,1,opt,name=accountIds,proto3" json:"accountIds,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDirectDebitsSpecificAccountsRequest) Reset() {
	*m = ListDirectDebitsSpecificAccountsRequest{}
}
func (m *ListDirectDebitsSpecificAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDirectDebitsSpecificAccountsRequest) ProtoMessage()    {}
func (*ListDirectDebitsSpecificAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{78}
}

func (m *ListDirectDebitsSpecificAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest.Unmarshal(m, b)
}
func (m *ListDirectDebitsSpecificAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListDirectDebitsSpecificAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest.Merge(m, src)
}
func (m *ListDirectDebitsSpecificAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest.Size(m)
}
func (m *ListDirectDebitsSpecificAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDirectDebitsSpecificAccountsRequest proto.InternalMessageInfo

func (m *ListDirectDebitsSpecificAccountsRequest) GetAccountIds() *RequestAccountIds {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListDirectDebitsSpecificAccountsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListPayeesRequest struct {
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL
	Type ListPayeesRequest_ListPayeesRequestType `protobuf:"varint,3,opt,name=type,proto3,enum=consumerdatastandards.ListPayeesRequest_ListPayeesRequestType" json:"type,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPayeesRequest) Reset()         { *m = ListPayeesRequest{} }
func (m *ListPayeesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPayeesRequest) ProtoMessage()    {}
func (*ListPayeesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{79}
}

func (m *ListPayeesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPayeesRequest.Unmarshal(m, b)
}
func (m *ListPayeesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPayeesRequest.Marshal(b, m, deterministic)
}
func (m *ListPayeesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPayeesRequest.Merge(m, src)
}
func (m *ListPayeesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPayeesRequest.Size(m)
}
func (m *ListPayeesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPayeesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPayeesRequest proto.InternalMessageInfo

func (m *ListPayeesRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListPayeesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPayeesRequest) GetType() ListPayeesRequest_ListPayeesRequestType {
	if m != nil {
		return m.Type
	}
	return ListPayeesRequest_LIST_PAYEES_REQUEST_TYPE_DOMESTIC
}

func (m *ListPayeesRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListPayeesRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListPayeesRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListPayeesRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListPayeesRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListPayeesRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListProductsRequest struct {
	// Filter results based on a specific brand
	Brand string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	// Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'
	Effective ListProductsRequest_ListProductsRequestEffective `protobuf:"varint,2,opt,name=effective,proto3,enum=consumerdatastandards.ListProductsRequest_ListProductsRequestEffective" json:"effective,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
	ProductCategory ListProductsRequest_ListProductsRequestProductCategory `protobuf:"varint,5,opt,name=product_category,json=productCategory,proto3,enum=consumerdatastandards.ListProductsRequest_ListProductsRequestProductCategory" json:"product_category,omitempty"`
	// Only include products that have been updated after the specified date and time. If absent defaults to include all products
	UpdatedSince string `protobuf:"bytes,6,opt,name=updated_since,json=updatedSince,proto3" json:"updated_since,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,7,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,8,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProductsRequest) Reset()         { *m = ListProductsRequest{} }
func (m *ListProductsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProductsRequest) ProtoMessage()    {}
func (*ListProductsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{80}
}

func (m *ListProductsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProductsRequest.Unmarshal(m, b)
}
func (m *ListProductsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProductsRequest.Marshal(b, m, deterministic)
}
func (m *ListProductsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProductsRequest.Merge(m, src)
}
func (m *ListProductsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProductsRequest.Size(m)
}
func (m *ListProductsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProductsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProductsRequest proto.InternalMessageInfo

func (m *ListProductsRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *ListProductsRequest) GetEffective() ListProductsRequest_ListProductsRequestEffective {
	if m != nil {
		return m.Effective
	}
	return ListProductsRequest_LIST_PRODUCTS_REQUEST_EFFECTIVE_CURRENT
}

func (m *ListProductsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListProductsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListProductsRequest) GetProductCategory() ListProductsRequest_ListProductsRequestProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return ListProductsRequest_LIST_PRODUCTS_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *ListProductsRequest) GetUpdatedSince() string {
	if m != nil {
		return m.UpdatedSince
	}
	return ""
}

func (m *ListProductsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListProductsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListScheduledPaymentsBulkRequest struct {
	// Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts
	IsOwned bool `protobuf:"varint,1,opt,name=is_owned,json=isOwned,proto3" json:"is_owned,omitempty"`
	// Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed
	OpenStatus ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus `protobuf:"varint,2,opt,name=open_status,json=openStatus,proto3,enum=consumerdatastandards.ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus" json:"open_status,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
	ProductCategory ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory `protobuf:"varint,5,opt,name=product_category,json=productCategory,proto3,enum=consumerdatastandards.ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory" json:"product_category,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,6,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,7,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,8,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,9,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,10,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,11,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScheduledPaymentsBulkRequest) Reset()         { *m = ListScheduledPaymentsBulkRequest{} }
func (m *ListScheduledPaymentsBulkRequest) String() string { return proto.CompactTextString(m) }
func (*ListScheduledPaymentsBulkRequest) ProtoMessage()    {}
func (*ListScheduledPaymentsBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{81}
}

func (m *ListScheduledPaymentsBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduledPaymentsBulkRequest.Unmarshal(m, b)
}
func (m *ListScheduledPaymentsBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduledPaymentsBulkRequest.Marshal(b, m, deterministic)
}
func (m *ListScheduledPaymentsBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduledPaymentsBulkRequest.Merge(m, src)
}
func (m *ListScheduledPaymentsBulkRequest) XXX_Size() int {
	return xxx_messageInfo_ListScheduledPaymentsBulkRequest.Size(m)
}
func (m *ListScheduledPaymentsBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduledPaymentsBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduledPaymentsBulkRequest proto.InternalMessageInfo

func (m *ListScheduledPaymentsBulkRequest) GetIsOwned() bool {
	if m != nil {
		return m.IsOwned
	}
	return false
}

func (m *ListScheduledPaymentsBulkRequest) GetOpenStatus() ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus {
	if m != nil {
		return m.OpenStatus
	}
	return ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_OPEN_STATUS_OPEN
}

func (m *ListScheduledPaymentsBulkRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListScheduledPaymentsBulkRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListScheduledPaymentsBulkRequest) GetProductCategory() ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory {
	if m != nil {
		return m.ProductCategory
	}
	return ListScheduledPaymentsBulkRequest_LIST_SCHEDULED_PAYMENTS_BULK_REQUEST_PRODUCT_CATEGORY_TRANS_AND_SAVINGS_ACCOUNTS
}

func (m *ListScheduledPaymentsBulkRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListScheduledPaymentsBulkRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListScheduledPaymentsBulkRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListScheduledPaymentsBulkRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListScheduledPaymentsBulkRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListScheduledPaymentsBulkRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListScheduledPaymentsRequest struct {
	// ID of the account to get scheduled payments for. Must have previously been returned by one of the account list end points. The account specified is the source account for the payment
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScheduledPaymentsRequest) Reset()         { *m = ListScheduledPaymentsRequest{} }
func (m *ListScheduledPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListScheduledPaymentsRequest) ProtoMessage()    {}
func (*ListScheduledPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{82}
}

func (m *ListScheduledPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduledPaymentsRequest.Unmarshal(m, b)
}
func (m *ListScheduledPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduledPaymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListScheduledPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduledPaymentsRequest.Merge(m, src)
}
func (m *ListScheduledPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListScheduledPaymentsRequest.Size(m)
}
func (m *ListScheduledPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduledPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduledPaymentsRequest proto.InternalMessageInfo

func (m *ListScheduledPaymentsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListScheduledPaymentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListScheduledPaymentsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListScheduledPaymentsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type ListScheduledPaymentsSpecificAccountsRequest struct {
	// Array of specific accountIds to obtain scheduled payments for.  The accounts specified are the source of funds for the payments returned
	AccountIds *RequestAccountIds `protobuf:"bytes,1,opt,name=accountIds,proto3" json:"accountIds,omitempty"`
	// Page of results to request (standard pagination)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Page size to request. Default is 25 (standard pagination)
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	XCdsClientHeaders string `protobuf:"bytes,4,opt,name=x_cds_client_headers,json=xCdsClientHeaders,proto3" json:"x_cds_client_headers,omitempty"`
	// The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
	XFapiAuthDate string `protobuf:"bytes,5,opt,name=x_fapi_auth_date,json=xFapiAuthDate,proto3" json:"x_fapi_auth_date,omitempty"`
	// The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	XFapiCustomerIpAddress string `protobuf:"bytes,6,opt,name=x_fapi_customer_ip_address,json=xFapiCustomerIpAddress,proto3" json:"x_fapi_customer_ip_address,omitempty"`
	// An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	XFapiInteractionId string `protobuf:"bytes,7,opt,name=x_fapi_interaction_id,json=xFapiInteractionId,proto3" json:"x_fapi_interaction_id,omitempty"`
	// Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
	XMinV string `protobuf:"bytes,8,opt,name=x_min_v,json=xMinV,proto3" json:"x_min_v,omitempty"`
	// Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	XV                   string   `protobuf:"bytes,9,opt,name=x_v,json=xV,proto3" json:"x_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) Reset() {
	*m = ListScheduledPaymentsSpecificAccountsRequest{}
}
func (m *ListScheduledPaymentsSpecificAccountsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ListScheduledPaymentsSpecificAccountsRequest) ProtoMessage() {}
func (*ListScheduledPaymentsSpecificAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{83}
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest.Unmarshal(m, b)
}
func (m *ListScheduledPaymentsSpecificAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListScheduledPaymentsSpecificAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest.Merge(m, src)
}
func (m *ListScheduledPaymentsSpecificAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest.Size(m)
}
func (m *ListScheduledPaymentsSpecificAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduledPaymentsSpecificAccountsRequest proto.InternalMessageInfo

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetAccountIds() *RequestAccountIds {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXCdsClientHeaders() string {
	if m != nil {
		return m.XCdsClientHeaders
	}
	return ""
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXFapiAuthDate() string {
	if m != nil {
		return m.XFapiAuthDate
	}
	return ""
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXFapiCustomerIpAddress() string {
	if m != nil {
		return m.XFapiCustomerIpAddress
	}
	return ""
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXFapiInteractionId() string {
	if m != nil {
		return m.XFapiInteractionId
	}
	return ""
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXMinV() string {
	if m != nil {
		return m.XMinV
	}
	return ""
}

func (m *ListScheduledPaymentsSpecificAccountsRequest) GetXV() string {
	if m != nil {
		return m.XV
	}
	return ""
}

type Meta struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{84}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

type MetaPaginated struct {
	// The total number of pages in the full set. See [pagination](#pagination).
	TotalPages int32 `protobuf:"varint,1,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
	// The total number of records in the full set. See [pagination](#pagination).
	TotalRecords         int32    `protobuf:"varint,2,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaPaginated) Reset()         { *m = MetaPaginated{} }
func (m *MetaPaginated) String() string { return proto.CompactTextString(m) }
func (*MetaPaginated) ProtoMessage()    {}
func (*MetaPaginated) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{85}
}

func (m *MetaPaginated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaPaginated.Unmarshal(m, b)
}
func (m *MetaPaginated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaPaginated.Marshal(b, m, deterministic)
}
func (m *MetaPaginated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaPaginated.Merge(m, src)
}
func (m *MetaPaginated) XXX_Size() int {
	return xxx_messageInfo_MetaPaginated.Size(m)
}
func (m *MetaPaginated) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaPaginated.DiscardUnknown(m)
}

var xxx_messageInfo_MetaPaginated proto.InternalMessageInfo

func (m *MetaPaginated) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *MetaPaginated) GetTotalRecords() int32 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

type RequestAccountIds struct {
	Data                 *RequestAccountIdsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta                 *Meta                  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestAccountIds) Reset()         { *m = RequestAccountIds{} }
func (m *RequestAccountIds) String() string { return proto.CompactTextString(m) }
func (*RequestAccountIds) ProtoMessage()    {}
func (*RequestAccountIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{86}
}

func (m *RequestAccountIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAccountIds.Unmarshal(m, b)
}
func (m *RequestAccountIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAccountIds.Marshal(b, m, deterministic)
}
func (m *RequestAccountIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAccountIds.Merge(m, src)
}
func (m *RequestAccountIds) XXX_Size() int {
	return xxx_messageInfo_RequestAccountIds.Size(m)
}
func (m *RequestAccountIds) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAccountIds.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAccountIds proto.InternalMessageInfo

func (m *RequestAccountIds) GetData() *RequestAccountIdsData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RequestAccountIds) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type RequestAccountIdsData struct {
	AccountIds           []string `protobuf:"bytes,1,rep,name=accountIds,proto3" json:"accountIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAccountIdsData) Reset()         { *m = RequestAccountIdsData{} }
func (m *RequestAccountIdsData) String() string { return proto.CompactTextString(m) }
func (*RequestAccountIdsData) ProtoMessage()    {}
func (*RequestAccountIdsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{87}
}

func (m *RequestAccountIdsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAccountIdsData.Unmarshal(m, b)
}
func (m *RequestAccountIdsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAccountIdsData.Marshal(b, m, deterministic)
}
func (m *RequestAccountIdsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAccountIdsData.Merge(m, src)
}
func (m *RequestAccountIdsData) XXX_Size() int {
	return xxx_messageInfo_RequestAccountIdsData.Size(m)
}
func (m *RequestAccountIdsData) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAccountIdsData.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAccountIdsData proto.InternalMessageInfo

func (m *RequestAccountIdsData) GetAccountIds() []string {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type ResponseBankingAccountById struct {
	Data                 *BankingAccountDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                 `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResponseBankingAccountById) Reset()         { *m = ResponseBankingAccountById{} }
func (m *ResponseBankingAccountById) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountById) ProtoMessage()    {}
func (*ResponseBankingAccountById) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{88}
}

func (m *ResponseBankingAccountById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountById.Unmarshal(m, b)
}
func (m *ResponseBankingAccountById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountById.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountById.Merge(m, src)
}
func (m *ResponseBankingAccountById) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountById.Size(m)
}
func (m *ResponseBankingAccountById) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountById.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountById proto.InternalMessageInfo

func (m *ResponseBankingAccountById) GetData() *BankingAccountDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingAccountById) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingAccountById) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingAccountList struct {
	Data                 *ResponseBankingAccountListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                 `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                  `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ResponseBankingAccountList) Reset()         { *m = ResponseBankingAccountList{} }
func (m *ResponseBankingAccountList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountList) ProtoMessage()    {}
func (*ResponseBankingAccountList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{89}
}

func (m *ResponseBankingAccountList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountList.Unmarshal(m, b)
}
func (m *ResponseBankingAccountList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountList.Merge(m, src)
}
func (m *ResponseBankingAccountList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountList.Size(m)
}
func (m *ResponseBankingAccountList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountList proto.InternalMessageInfo

func (m *ResponseBankingAccountList) GetData() *ResponseBankingAccountListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingAccountList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingAccountList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingAccountListData struct {
	// The list of accounts returned. If the filter results in an empty set then this array may have no records
	Accounts             []*BankingAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResponseBankingAccountListData) Reset()         { *m = ResponseBankingAccountListData{} }
func (m *ResponseBankingAccountListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountListData) ProtoMessage()    {}
func (*ResponseBankingAccountListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{90}
}

func (m *ResponseBankingAccountListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountListData.Unmarshal(m, b)
}
func (m *ResponseBankingAccountListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountListData.Merge(m, src)
}
func (m *ResponseBankingAccountListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountListData.Size(m)
}
func (m *ResponseBankingAccountListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountListData proto.InternalMessageInfo

func (m *ResponseBankingAccountListData) GetAccounts() []*BankingAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type ResponseBankingAccountsBalanceById struct {
	Data                 *BankingBalance `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links          `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta           `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseBankingAccountsBalanceById) Reset()         { *m = ResponseBankingAccountsBalanceById{} }
func (m *ResponseBankingAccountsBalanceById) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountsBalanceById) ProtoMessage()    {}
func (*ResponseBankingAccountsBalanceById) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{91}
}

func (m *ResponseBankingAccountsBalanceById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountsBalanceById.Unmarshal(m, b)
}
func (m *ResponseBankingAccountsBalanceById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountsBalanceById.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountsBalanceById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountsBalanceById.Merge(m, src)
}
func (m *ResponseBankingAccountsBalanceById) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountsBalanceById.Size(m)
}
func (m *ResponseBankingAccountsBalanceById) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountsBalanceById.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountsBalanceById proto.InternalMessageInfo

func (m *ResponseBankingAccountsBalanceById) GetData() *BankingBalance {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingAccountsBalanceById) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingAccountsBalanceById) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingAccountsBalanceList struct {
	Data                 *ResponseBankingAccountsBalanceListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                         `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                          `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ResponseBankingAccountsBalanceList) Reset()         { *m = ResponseBankingAccountsBalanceList{} }
func (m *ResponseBankingAccountsBalanceList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountsBalanceList) ProtoMessage()    {}
func (*ResponseBankingAccountsBalanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{92}
}

func (m *ResponseBankingAccountsBalanceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountsBalanceList.Unmarshal(m, b)
}
func (m *ResponseBankingAccountsBalanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountsBalanceList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountsBalanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountsBalanceList.Merge(m, src)
}
func (m *ResponseBankingAccountsBalanceList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountsBalanceList.Size(m)
}
func (m *ResponseBankingAccountsBalanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountsBalanceList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountsBalanceList proto.InternalMessageInfo

func (m *ResponseBankingAccountsBalanceList) GetData() *ResponseBankingAccountsBalanceListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingAccountsBalanceList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingAccountsBalanceList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingAccountsBalanceListData struct {
	// The list of balances returned
	Balances             []*BankingBalance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResponseBankingAccountsBalanceListData) Reset() {
	*m = ResponseBankingAccountsBalanceListData{}
}
func (m *ResponseBankingAccountsBalanceListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingAccountsBalanceListData) ProtoMessage()    {}
func (*ResponseBankingAccountsBalanceListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{93}
}

func (m *ResponseBankingAccountsBalanceListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingAccountsBalanceListData.Unmarshal(m, b)
}
func (m *ResponseBankingAccountsBalanceListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingAccountsBalanceListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingAccountsBalanceListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingAccountsBalanceListData.Merge(m, src)
}
func (m *ResponseBankingAccountsBalanceListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingAccountsBalanceListData.Size(m)
}
func (m *ResponseBankingAccountsBalanceListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingAccountsBalanceListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingAccountsBalanceListData proto.InternalMessageInfo

func (m *ResponseBankingAccountsBalanceListData) GetBalances() []*BankingBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type ResponseBankingDirectDebitAuthorisationList struct {
	Data                 *ResponseBankingDirectDebitAuthorisationListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                                  `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                                   `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *ResponseBankingDirectDebitAuthorisationList) Reset() {
	*m = ResponseBankingDirectDebitAuthorisationList{}
}
func (m *ResponseBankingDirectDebitAuthorisationList) String() string {
	return proto.CompactTextString(m)
}
func (*ResponseBankingDirectDebitAuthorisationList) ProtoMessage() {}
func (*ResponseBankingDirectDebitAuthorisationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{94}
}

func (m *ResponseBankingDirectDebitAuthorisationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList.Unmarshal(m, b)
}
func (m *ResponseBankingDirectDebitAuthorisationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingDirectDebitAuthorisationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList.Merge(m, src)
}
func (m *ResponseBankingDirectDebitAuthorisationList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList.Size(m)
}
func (m *ResponseBankingDirectDebitAuthorisationList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingDirectDebitAuthorisationList proto.InternalMessageInfo

func (m *ResponseBankingDirectDebitAuthorisationList) GetData() *ResponseBankingDirectDebitAuthorisationListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingDirectDebitAuthorisationList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingDirectDebitAuthorisationList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingDirectDebitAuthorisationListData struct {
	// The list of authorisations returned
	DirectDebitAuthorisations []*BankingDirectDebit `protobuf:"bytes,1,rep,name=directDebitAuthorisations,proto3" json:"directDebitAuthorisations,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}              `json:"-"`
	XXX_unrecognized          []byte                `json:"-"`
	XXX_sizecache             int32                 `json:"-"`
}

func (m *ResponseBankingDirectDebitAuthorisationListData) Reset() {
	*m = ResponseBankingDirectDebitAuthorisationListData{}
}
func (m *ResponseBankingDirectDebitAuthorisationListData) String() string {
	return proto.CompactTextString(m)
}
func (*ResponseBankingDirectDebitAuthorisationListData) ProtoMessage() {}
func (*ResponseBankingDirectDebitAuthorisationListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{95}
}

func (m *ResponseBankingDirectDebitAuthorisationListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData.Unmarshal(m, b)
}
func (m *ResponseBankingDirectDebitAuthorisationListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingDirectDebitAuthorisationListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData.Merge(m, src)
}
func (m *ResponseBankingDirectDebitAuthorisationListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData.Size(m)
}
func (m *ResponseBankingDirectDebitAuthorisationListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingDirectDebitAuthorisationListData proto.InternalMessageInfo

func (m *ResponseBankingDirectDebitAuthorisationListData) GetDirectDebitAuthorisations() []*BankingDirectDebit {
	if m != nil {
		return m.DirectDebitAuthorisations
	}
	return nil
}

type ResponseBankingPayeeById struct {
	Data                 *BankingPayeeDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links              `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta               `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResponseBankingPayeeById) Reset()         { *m = ResponseBankingPayeeById{} }
func (m *ResponseBankingPayeeById) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingPayeeById) ProtoMessage()    {}
func (*ResponseBankingPayeeById) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{96}
}

func (m *ResponseBankingPayeeById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingPayeeById.Unmarshal(m, b)
}
func (m *ResponseBankingPayeeById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingPayeeById.Marshal(b, m, deterministic)
}
func (m *ResponseBankingPayeeById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingPayeeById.Merge(m, src)
}
func (m *ResponseBankingPayeeById) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingPayeeById.Size(m)
}
func (m *ResponseBankingPayeeById) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingPayeeById.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingPayeeById proto.InternalMessageInfo

func (m *ResponseBankingPayeeById) GetData() *BankingPayeeDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingPayeeById) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingPayeeById) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingPayeeList struct {
	Data                 *ResponseBankingPayeeListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated               `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ResponseBankingPayeeList) Reset()         { *m = ResponseBankingPayeeList{} }
func (m *ResponseBankingPayeeList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingPayeeList) ProtoMessage()    {}
func (*ResponseBankingPayeeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{97}
}

func (m *ResponseBankingPayeeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingPayeeList.Unmarshal(m, b)
}
func (m *ResponseBankingPayeeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingPayeeList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingPayeeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingPayeeList.Merge(m, src)
}
func (m *ResponseBankingPayeeList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingPayeeList.Size(m)
}
func (m *ResponseBankingPayeeList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingPayeeList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingPayeeList proto.InternalMessageInfo

func (m *ResponseBankingPayeeList) GetData() *ResponseBankingPayeeListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingPayeeList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingPayeeList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingPayeeListData struct {
	// The list of payees returned
	Payees               []*BankingPayee `protobuf:"bytes,1,rep,name=payees,proto3" json:"payees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseBankingPayeeListData) Reset()         { *m = ResponseBankingPayeeListData{} }
func (m *ResponseBankingPayeeListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingPayeeListData) ProtoMessage()    {}
func (*ResponseBankingPayeeListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{98}
}

func (m *ResponseBankingPayeeListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingPayeeListData.Unmarshal(m, b)
}
func (m *ResponseBankingPayeeListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingPayeeListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingPayeeListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingPayeeListData.Merge(m, src)
}
func (m *ResponseBankingPayeeListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingPayeeListData.Size(m)
}
func (m *ResponseBankingPayeeListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingPayeeListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingPayeeListData proto.InternalMessageInfo

func (m *ResponseBankingPayeeListData) GetPayees() []*BankingPayee {
	if m != nil {
		return m.Payees
	}
	return nil
}

type ResponseBankingProductById struct {
	Data                 *BankingProductDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                 `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResponseBankingProductById) Reset()         { *m = ResponseBankingProductById{} }
func (m *ResponseBankingProductById) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingProductById) ProtoMessage()    {}
func (*ResponseBankingProductById) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{99}
}

func (m *ResponseBankingProductById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingProductById.Unmarshal(m, b)
}
func (m *ResponseBankingProductById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingProductById.Marshal(b, m, deterministic)
}
func (m *ResponseBankingProductById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingProductById.Merge(m, src)
}
func (m *ResponseBankingProductById) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingProductById.Size(m)
}
func (m *ResponseBankingProductById) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingProductById.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingProductById proto.InternalMessageInfo

func (m *ResponseBankingProductById) GetData() *BankingProductDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingProductById) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingProductById) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingProductList struct {
	Data                 *ResponseBankingProductListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                 `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                  `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ResponseBankingProductList) Reset()         { *m = ResponseBankingProductList{} }
func (m *ResponseBankingProductList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingProductList) ProtoMessage()    {}
func (*ResponseBankingProductList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{100}
}

func (m *ResponseBankingProductList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingProductList.Unmarshal(m, b)
}
func (m *ResponseBankingProductList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingProductList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingProductList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingProductList.Merge(m, src)
}
func (m *ResponseBankingProductList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingProductList.Size(m)
}
func (m *ResponseBankingProductList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingProductList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingProductList proto.InternalMessageInfo

func (m *ResponseBankingProductList) GetData() *ResponseBankingProductListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingProductList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingProductList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingProductListData struct {
	// The list of products returned.  If the filter results in an empty set then this array may have no records
	Products             []*BankingProductV2 `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResponseBankingProductListData) Reset()         { *m = ResponseBankingProductListData{} }
func (m *ResponseBankingProductListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingProductListData) ProtoMessage()    {}
func (*ResponseBankingProductListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{101}
}

func (m *ResponseBankingProductListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingProductListData.Unmarshal(m, b)
}
func (m *ResponseBankingProductListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingProductListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingProductListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingProductListData.Merge(m, src)
}
func (m *ResponseBankingProductListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingProductListData.Size(m)
}
func (m *ResponseBankingProductListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingProductListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingProductListData proto.InternalMessageInfo

func (m *ResponseBankingProductListData) GetProducts() []*BankingProductV2 {
	if m != nil {
		return m.Products
	}
	return nil
}

type ResponseBankingScheduledPaymentsList struct {
	Data                 *ResponseBankingScheduledPaymentsListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                           `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                            `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ResponseBankingScheduledPaymentsList) Reset()         { *m = ResponseBankingScheduledPaymentsList{} }
func (m *ResponseBankingScheduledPaymentsList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingScheduledPaymentsList) ProtoMessage()    {}
func (*ResponseBankingScheduledPaymentsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{102}
}

func (m *ResponseBankingScheduledPaymentsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsList.Unmarshal(m, b)
}
func (m *ResponseBankingScheduledPaymentsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingScheduledPaymentsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingScheduledPaymentsList.Merge(m, src)
}
func (m *ResponseBankingScheduledPaymentsList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsList.Size(m)
}
func (m *ResponseBankingScheduledPaymentsList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingScheduledPaymentsList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingScheduledPaymentsList proto.InternalMessageInfo

func (m *ResponseBankingScheduledPaymentsList) GetData() *ResponseBankingScheduledPaymentsListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingScheduledPaymentsList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingScheduledPaymentsList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingScheduledPaymentsListData struct {
	// The list of scheduled payments to return
	ScheduledPayments    []*BankingScheduledPayment `protobuf:"bytes,1,rep,name=scheduledPayments,proto3" json:"scheduledPayments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ResponseBankingScheduledPaymentsListData) Reset() {
	*m = ResponseBankingScheduledPaymentsListData{}
}
func (m *ResponseBankingScheduledPaymentsListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingScheduledPaymentsListData) ProtoMessage()    {}
func (*ResponseBankingScheduledPaymentsListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{103}
}

func (m *ResponseBankingScheduledPaymentsListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsListData.Unmarshal(m, b)
}
func (m *ResponseBankingScheduledPaymentsListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingScheduledPaymentsListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingScheduledPaymentsListData.Merge(m, src)
}
func (m *ResponseBankingScheduledPaymentsListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingScheduledPaymentsListData.Size(m)
}
func (m *ResponseBankingScheduledPaymentsListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingScheduledPaymentsListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingScheduledPaymentsListData proto.InternalMessageInfo

func (m *ResponseBankingScheduledPaymentsListData) GetScheduledPayments() []*BankingScheduledPayment {
	if m != nil {
		return m.ScheduledPayments
	}
	return nil
}

type ResponseBankingTransactionById struct {
	Data                 *BankingTransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                    `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                     `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResponseBankingTransactionById) Reset()         { *m = ResponseBankingTransactionById{} }
func (m *ResponseBankingTransactionById) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingTransactionById) ProtoMessage()    {}
func (*ResponseBankingTransactionById) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{104}
}

func (m *ResponseBankingTransactionById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingTransactionById.Unmarshal(m, b)
}
func (m *ResponseBankingTransactionById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingTransactionById.Marshal(b, m, deterministic)
}
func (m *ResponseBankingTransactionById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingTransactionById.Merge(m, src)
}
func (m *ResponseBankingTransactionById) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingTransactionById.Size(m)
}
func (m *ResponseBankingTransactionById) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingTransactionById.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingTransactionById proto.InternalMessageInfo

func (m *ResponseBankingTransactionById) GetData() *BankingTransactionDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingTransactionById) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingTransactionById) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingTransactionList struct {
	Data                 *ResponseBankingTransactionListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *LinksPaginated                     `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *MetaPaginated                      `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ResponseBankingTransactionList) Reset()         { *m = ResponseBankingTransactionList{} }
func (m *ResponseBankingTransactionList) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingTransactionList) ProtoMessage()    {}
func (*ResponseBankingTransactionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{105}
}

func (m *ResponseBankingTransactionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingTransactionList.Unmarshal(m, b)
}
func (m *ResponseBankingTransactionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingTransactionList.Marshal(b, m, deterministic)
}
func (m *ResponseBankingTransactionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingTransactionList.Merge(m, src)
}
func (m *ResponseBankingTransactionList) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingTransactionList.Size(m)
}
func (m *ResponseBankingTransactionList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingTransactionList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingTransactionList proto.InternalMessageInfo

func (m *ResponseBankingTransactionList) GetData() *ResponseBankingTransactionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseBankingTransactionList) GetLinks() *LinksPaginated {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseBankingTransactionList) GetMeta() *MetaPaginated {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseBankingTransactionListData struct {
	Transactions         []*BankingTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResponseBankingTransactionListData) Reset()         { *m = ResponseBankingTransactionListData{} }
func (m *ResponseBankingTransactionListData) String() string { return proto.CompactTextString(m) }
func (*ResponseBankingTransactionListData) ProtoMessage()    {}
func (*ResponseBankingTransactionListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{106}
}

func (m *ResponseBankingTransactionListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBankingTransactionListData.Unmarshal(m, b)
}
func (m *ResponseBankingTransactionListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBankingTransactionListData.Marshal(b, m, deterministic)
}
func (m *ResponseBankingTransactionListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBankingTransactionListData.Merge(m, src)
}
func (m *ResponseBankingTransactionListData) XXX_Size() int {
	return xxx_messageInfo_ResponseBankingTransactionListData.Size(m)
}
func (m *ResponseBankingTransactionListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBankingTransactionListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBankingTransactionListData proto.InternalMessageInfo

func (m *ResponseBankingTransactionListData) GetTransactions() []*BankingTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type ResponseCommonCustomer struct {
	Data                 *ResponseCommonCustomerData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                      `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                       `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ResponseCommonCustomer) Reset()         { *m = ResponseCommonCustomer{} }
func (m *ResponseCommonCustomer) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonCustomer) ProtoMessage()    {}
func (*ResponseCommonCustomer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{107}
}

func (m *ResponseCommonCustomer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonCustomer.Unmarshal(m, b)
}
func (m *ResponseCommonCustomer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonCustomer.Marshal(b, m, deterministic)
}
func (m *ResponseCommonCustomer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonCustomer.Merge(m, src)
}
func (m *ResponseCommonCustomer) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonCustomer.Size(m)
}
func (m *ResponseCommonCustomer) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonCustomer.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonCustomer proto.InternalMessageInfo

func (m *ResponseCommonCustomer) GetData() *ResponseCommonCustomerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseCommonCustomer) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseCommonCustomer) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseCommonCustomerData struct {
	// The type of customer object that is present
	CustomerUType        ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType `protobuf:"varint,1,opt,name=customerUType,proto3,enum=consumerdatastandards.ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType" json:"customerUType,omitempty"`
	Organisation         *CommonOrganisation                                                `protobuf:"bytes,2,opt,name=organisation,proto3" json:"organisation,omitempty"`
	Person               *CommonPerson                                                      `protobuf:"bytes,3,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                           `json:"-"`
	XXX_unrecognized     []byte                                                             `json:"-"`
	XXX_sizecache        int32                                                              `json:"-"`
}

func (m *ResponseCommonCustomerData) Reset()         { *m = ResponseCommonCustomerData{} }
func (m *ResponseCommonCustomerData) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonCustomerData) ProtoMessage()    {}
func (*ResponseCommonCustomerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{108}
}

func (m *ResponseCommonCustomerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonCustomerData.Unmarshal(m, b)
}
func (m *ResponseCommonCustomerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonCustomerData.Marshal(b, m, deterministic)
}
func (m *ResponseCommonCustomerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonCustomerData.Merge(m, src)
}
func (m *ResponseCommonCustomerData) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonCustomerData.Size(m)
}
func (m *ResponseCommonCustomerData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonCustomerData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonCustomerData proto.InternalMessageInfo

func (m *ResponseCommonCustomerData) GetCustomerUType() ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType {
	if m != nil {
		return m.CustomerUType
	}
	return ResponseCommonCustomerData_RESPONSE_COMMON_CUSTOMER_DATA_CUSTOMER_U_TYPE_PERSON
}

func (m *ResponseCommonCustomerData) GetOrganisation() *CommonOrganisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

func (m *ResponseCommonCustomerData) GetPerson() *CommonPerson {
	if m != nil {
		return m.Person
	}
	return nil
}

type ResponseCommonCustomerDetail struct {
	Data                 *ResponseCommonCustomerDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                            `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                             `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ResponseCommonCustomerDetail) Reset()         { *m = ResponseCommonCustomerDetail{} }
func (m *ResponseCommonCustomerDetail) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonCustomerDetail) ProtoMessage()    {}
func (*ResponseCommonCustomerDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{109}
}

func (m *ResponseCommonCustomerDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonCustomerDetail.Unmarshal(m, b)
}
func (m *ResponseCommonCustomerDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonCustomerDetail.Marshal(b, m, deterministic)
}
func (m *ResponseCommonCustomerDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonCustomerDetail.Merge(m, src)
}
func (m *ResponseCommonCustomerDetail) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonCustomerDetail.Size(m)
}
func (m *ResponseCommonCustomerDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonCustomerDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonCustomerDetail proto.InternalMessageInfo

func (m *ResponseCommonCustomerDetail) GetData() *ResponseCommonCustomerDetailData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseCommonCustomerDetail) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseCommonCustomerDetail) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseCommonCustomerDetailData struct {
	// The type of customer object that is present
	CustomerUType        ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType `protobuf:"varint,1,opt,name=customerUType,proto3,enum=consumerdatastandards.ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType" json:"customerUType,omitempty"`
	Organisation         *CommonOrganisationDetail                                                      `protobuf:"bytes,2,opt,name=organisation,proto3" json:"organisation,omitempty"`
	Person               *CommonPersonDetail                                                            `protobuf:"bytes,3,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                         `json:"-"`
	XXX_sizecache        int32                                                                          `json:"-"`
}

func (m *ResponseCommonCustomerDetailData) Reset()         { *m = ResponseCommonCustomerDetailData{} }
func (m *ResponseCommonCustomerDetailData) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonCustomerDetailData) ProtoMessage()    {}
func (*ResponseCommonCustomerDetailData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{110}
}

func (m *ResponseCommonCustomerDetailData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonCustomerDetailData.Unmarshal(m, b)
}
func (m *ResponseCommonCustomerDetailData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonCustomerDetailData.Marshal(b, m, deterministic)
}
func (m *ResponseCommonCustomerDetailData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonCustomerDetailData.Merge(m, src)
}
func (m *ResponseCommonCustomerDetailData) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonCustomerDetailData.Size(m)
}
func (m *ResponseCommonCustomerDetailData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonCustomerDetailData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonCustomerDetailData proto.InternalMessageInfo

func (m *ResponseCommonCustomerDetailData) GetCustomerUType() ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType {
	if m != nil {
		return m.CustomerUType
	}
	return ResponseCommonCustomerDetailData_RESPONSE_COMMON_CUSTOMER_DETAIL_DATA_CUSTOMER_U_TYPE_PERSON
}

func (m *ResponseCommonCustomerDetailData) GetOrganisation() *CommonOrganisationDetail {
	if m != nil {
		return m.Organisation
	}
	return nil
}

func (m *ResponseCommonCustomerDetailData) GetPerson() *CommonPersonDetail {
	if m != nil {
		return m.Person
	}
	return nil
}

type ResponseCommonDiscoveryStatus struct {
	Data                 *ResponseCommonDiscoveryStatusData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                             `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                              `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ResponseCommonDiscoveryStatus) Reset()         { *m = ResponseCommonDiscoveryStatus{} }
func (m *ResponseCommonDiscoveryStatus) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonDiscoveryStatus) ProtoMessage()    {}
func (*ResponseCommonDiscoveryStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{111}
}

func (m *ResponseCommonDiscoveryStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonDiscoveryStatus.Unmarshal(m, b)
}
func (m *ResponseCommonDiscoveryStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonDiscoveryStatus.Marshal(b, m, deterministic)
}
func (m *ResponseCommonDiscoveryStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonDiscoveryStatus.Merge(m, src)
}
func (m *ResponseCommonDiscoveryStatus) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonDiscoveryStatus.Size(m)
}
func (m *ResponseCommonDiscoveryStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonDiscoveryStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonDiscoveryStatus proto.InternalMessageInfo

func (m *ResponseCommonDiscoveryStatus) GetData() *ResponseCommonDiscoveryStatusData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseCommonDiscoveryStatus) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseCommonDiscoveryStatus) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseCommonDiscoveryStatusData struct {
	// The date and time that the current outage was detected. Should only be present if the status property is PARTIAL_FAILURE or UNAVAILABLE
	DetectionTime string `protobuf:"bytes,1,opt,name=detectionTime,proto3" json:"detectionTime,omitempty"`
	// The date and time that full service is expected to resume (if known). Should not be present if the status property has a value of OK.
	ExpectedResolutionTime string `protobuf:"bytes,2,opt,name=expectedResolutionTime,proto3" json:"expectedResolutionTime,omitempty"`
	// Provides an explanation of the current outage that can be displayed to an end customer. Mandatory if the status property is any value other than OK
	Explanation string `protobuf:"bytes,3,opt,name=explanation,proto3" json:"explanation,omitempty"`
	// Enumeration with values. OK (implementation is fully functional). PARTIAL_FAILURE (one or more end points are unexpectedly unavailable). UNAVAILABLE (the full implementation is unexpectedly unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect)
	Status ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus `protobuf:"varint,4,opt,name=status,proto3,enum=consumerdatastandards.ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus" json:"status,omitempty"`
	// The date and time that this status was last updated by the Data Holder.
	UpdateTime           string   `protobuf:"bytes,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseCommonDiscoveryStatusData) Reset()         { *m = ResponseCommonDiscoveryStatusData{} }
func (m *ResponseCommonDiscoveryStatusData) String() string { return proto.CompactTextString(m) }
func (*ResponseCommonDiscoveryStatusData) ProtoMessage()    {}
func (*ResponseCommonDiscoveryStatusData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{112}
}

func (m *ResponseCommonDiscoveryStatusData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCommonDiscoveryStatusData.Unmarshal(m, b)
}
func (m *ResponseCommonDiscoveryStatusData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCommonDiscoveryStatusData.Marshal(b, m, deterministic)
}
func (m *ResponseCommonDiscoveryStatusData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCommonDiscoveryStatusData.Merge(m, src)
}
func (m *ResponseCommonDiscoveryStatusData) XXX_Size() int {
	return xxx_messageInfo_ResponseCommonDiscoveryStatusData.Size(m)
}
func (m *ResponseCommonDiscoveryStatusData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCommonDiscoveryStatusData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCommonDiscoveryStatusData proto.InternalMessageInfo

func (m *ResponseCommonDiscoveryStatusData) GetDetectionTime() string {
	if m != nil {
		return m.DetectionTime
	}
	return ""
}

func (m *ResponseCommonDiscoveryStatusData) GetExpectedResolutionTime() string {
	if m != nil {
		return m.ExpectedResolutionTime
	}
	return ""
}

func (m *ResponseCommonDiscoveryStatusData) GetExplanation() string {
	if m != nil {
		return m.Explanation
	}
	return ""
}

func (m *ResponseCommonDiscoveryStatusData) GetStatus() ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus {
	if m != nil {
		return m.Status
	}
	return ResponseCommonDiscoveryStatusData_RESPONSE_COMMON_DISCOVERY_STATUS_DATA_STATUS_OK
}

func (m *ResponseCommonDiscoveryStatusData) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type ResponseDiscoveryOutagesList struct {
	Data                 *ResponseDiscoveryOutagesListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Links                *Links                            `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Meta                 *Meta                             `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ResponseDiscoveryOutagesList) Reset()         { *m = ResponseDiscoveryOutagesList{} }
func (m *ResponseDiscoveryOutagesList) String() string { return proto.CompactTextString(m) }
func (*ResponseDiscoveryOutagesList) ProtoMessage()    {}
func (*ResponseDiscoveryOutagesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{113}
}

func (m *ResponseDiscoveryOutagesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDiscoveryOutagesList.Unmarshal(m, b)
}
func (m *ResponseDiscoveryOutagesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDiscoveryOutagesList.Marshal(b, m, deterministic)
}
func (m *ResponseDiscoveryOutagesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDiscoveryOutagesList.Merge(m, src)
}
func (m *ResponseDiscoveryOutagesList) XXX_Size() int {
	return xxx_messageInfo_ResponseDiscoveryOutagesList.Size(m)
}
func (m *ResponseDiscoveryOutagesList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDiscoveryOutagesList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDiscoveryOutagesList proto.InternalMessageInfo

func (m *ResponseDiscoveryOutagesList) GetData() *ResponseDiscoveryOutagesListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseDiscoveryOutagesList) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ResponseDiscoveryOutagesList) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ResponseDiscoveryOutagesListData struct {
	// List of scheduled outages. Property is mandatory but may contain and empty list if no outages are scheduled
	Outages              []*DiscoveryOutage `protobuf:"bytes,1,rep,name=outages,proto3" json:"outages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ResponseDiscoveryOutagesListData) Reset()         { *m = ResponseDiscoveryOutagesListData{} }
func (m *ResponseDiscoveryOutagesListData) String() string { return proto.CompactTextString(m) }
func (*ResponseDiscoveryOutagesListData) ProtoMessage()    {}
func (*ResponseDiscoveryOutagesListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{114}
}

func (m *ResponseDiscoveryOutagesListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDiscoveryOutagesListData.Unmarshal(m, b)
}
func (m *ResponseDiscoveryOutagesListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDiscoveryOutagesListData.Marshal(b, m, deterministic)
}
func (m *ResponseDiscoveryOutagesListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDiscoveryOutagesListData.Merge(m, src)
}
func (m *ResponseDiscoveryOutagesListData) XXX_Size() int {
	return xxx_messageInfo_ResponseDiscoveryOutagesListData.Size(m)
}
func (m *ResponseDiscoveryOutagesListData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDiscoveryOutagesListData.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDiscoveryOutagesListData proto.InternalMessageInfo

func (m *ResponseDiscoveryOutagesListData) GetOutages() []*DiscoveryOutage {
	if m != nil {
		return m.Outages
	}
	return nil
}

type ResponseErrorList struct {
	Errors               []*ResponseErrorListErrors `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ResponseErrorList) Reset()         { *m = ResponseErrorList{} }
func (m *ResponseErrorList) String() string { return proto.CompactTextString(m) }
func (*ResponseErrorList) ProtoMessage()    {}
func (*ResponseErrorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{115}
}

func (m *ResponseErrorList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseErrorList.Unmarshal(m, b)
}
func (m *ResponseErrorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseErrorList.Marshal(b, m, deterministic)
}
func (m *ResponseErrorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseErrorList.Merge(m, src)
}
func (m *ResponseErrorList) XXX_Size() int {
	return xxx_messageInfo_ResponseErrorList.Size(m)
}
func (m *ResponseErrorList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseErrorList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseErrorList proto.InternalMessageInfo

func (m *ResponseErrorList) GetErrors() []*ResponseErrorListErrors {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ResponseErrorListErrors struct {
	// Must be one of the following: 0001 – Account not able to be found
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// ID of the account not found
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	// Optional additional data for specific error types
	Meta *ResponseErrorListErrors_MetaMessage `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	// Must be one of the following: Invalid account
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseErrorListErrors) Reset()         { *m = ResponseErrorListErrors{} }
func (m *ResponseErrorListErrors) String() string { return proto.CompactTextString(m) }
func (*ResponseErrorListErrors) ProtoMessage()    {}
func (*ResponseErrorListErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{116}
}

func (m *ResponseErrorListErrors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseErrorListErrors.Unmarshal(m, b)
}
func (m *ResponseErrorListErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseErrorListErrors.Marshal(b, m, deterministic)
}
func (m *ResponseErrorListErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseErrorListErrors.Merge(m, src)
}
func (m *ResponseErrorListErrors) XXX_Size() int {
	return xxx_messageInfo_ResponseErrorListErrors.Size(m)
}
func (m *ResponseErrorListErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseErrorListErrors.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseErrorListErrors proto.InternalMessageInfo

func (m *ResponseErrorListErrors) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ResponseErrorListErrors) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *ResponseErrorListErrors) GetMeta() *ResponseErrorListErrors_MetaMessage {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResponseErrorListErrors) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ResponseErrorListErrors_MetaMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseErrorListErrors_MetaMessage) Reset()         { *m = ResponseErrorListErrors_MetaMessage{} }
func (m *ResponseErrorListErrors_MetaMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseErrorListErrors_MetaMessage) ProtoMessage()    {}
func (*ResponseErrorListErrors_MetaMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4023f3aa12c5f67, []int{116, 0}
}

func (m *ResponseErrorListErrors_MetaMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseErrorListErrors_MetaMessage.Unmarshal(m, b)
}
func (m *ResponseErrorListErrors_MetaMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseErrorListErrors_MetaMessage.Marshal(b, m, deterministic)
}
func (m *ResponseErrorListErrors_MetaMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseErrorListErrors_MetaMessage.Merge(m, src)
}
func (m *ResponseErrorListErrors_MetaMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseErrorListErrors_MetaMessage.Size(m)
}
func (m *ResponseErrorListErrors_MetaMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseErrorListErrors_MetaMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseErrorListErrors_MetaMessage proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("consumerdatastandards.BankingProductCategory", BankingProductCategory_name, BankingProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ParamAccountOpenStatus", ParamAccountOpenStatus_name, ParamAccountOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.BankingAccount_BankingAccountOpenStatus", BankingAccount_BankingAccountOpenStatus_name, BankingAccount_BankingAccountOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType", BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType_name, BankingDomesticPayee_BankingDomesticPayeePayeeAccountUType_value)
	proto.RegisterEnum("consumerdatastandards.BankingDomesticPayeePayId_BankingDomesticPayeePayIdType", BankingDomesticPayeePayId_BankingDomesticPayeePayIdType_name, BankingDomesticPayeePayId_BankingDomesticPayeePayIdType_value)
	proto.RegisterEnum("consumerdatastandards.BankingLoanAccount_BankingLoanAccountRepaymentType", BankingLoanAccount_BankingLoanAccountRepaymentType_name, BankingLoanAccount_BankingLoanAccountRepaymentType_value)
	proto.RegisterEnum("consumerdatastandards.BankingPayee_BankingPayeeType", BankingPayee_BankingPayeeType_name, BankingPayee_BankingPayeeType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductConstraint_BankingProductConstraintConstraintType", BankingProductConstraint_BankingProductConstraintConstraintType_name, BankingProductConstraint_BankingProductConstraintConstraintType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductDepositRate_BankingProductDepositRateDepositRateType", BankingProductDepositRate_BankingProductDepositRateDepositRateType_name, BankingProductDepositRate_BankingProductDepositRateDepositRateType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductDiscount_BankingProductDiscountDiscountType", BankingProductDiscount_BankingProductDiscountDiscountType_name, BankingProductDiscount_BankingProductDiscountDiscountType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType", BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType_name, BankingProductDiscountEligibility_BankingProductDiscountEligibilityDiscountEligibilityType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductEligibility_BankingProductEligibilityEligibilityType", BankingProductEligibility_BankingProductEligibilityEligibilityType_name, BankingProductEligibility_BankingProductEligibilityEligibilityType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductFeature_BankingProductFeatureFeatureType", BankingProductFeature_BankingProductFeatureFeatureType_name, BankingProductFeature_BankingProductFeatureFeatureType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductFee_BankingProductFeeFeeType", BankingProductFee_BankingProductFeeFeeType_name, BankingProductFee_BankingProductFeeFeeType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue", BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue_name, BankingProductLendingRate_BankingProductLendingRateInterestPaymentDue_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductLendingRate_BankingProductLendingRateLendingRateType", BankingProductLendingRate_BankingProductLendingRateLendingRateType_name, BankingProductLendingRate_BankingProductLendingRateLendingRateType_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductRateTier_BankingProductRateTierRateApplicationMethod", BankingProductRateTier_BankingProductRateTierRateApplicationMethod_name, BankingProductRateTier_BankingProductRateTierRateApplicationMethod_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductRateTier_BankingProductRateTierUnitOfMeasure", BankingProductRateTier_BankingProductRateTierUnitOfMeasure_name, BankingProductRateTier_BankingProductRateTierUnitOfMeasure_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod", BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod_name, BankingProductRateTierSubTier_BankingProductRateTierSubTierRateApplicationMethod_value)
	proto.RegisterEnum("consumerdatastandards.BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure", BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure_name, BankingProductRateTierSubTier_BankingProductRateTierSubTierUnitOfMeasure_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPayment_BankingScheduledPaymentStatus", BankingScheduledPayment_BankingScheduledPaymentStatus_name, BankingScheduledPayment_BankingScheduledPaymentStatus_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType", BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType_name, BankingScheduledPaymentRecurrence_BankingScheduledPaymentRecurrenceRecurrenceUType_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment", BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment_name, BankingScheduledPaymentRecurrenceIntervalSchedule_BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay", BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay_name, BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment", BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment_name, BankingScheduledPaymentRecurrenceLastWeekday_BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment_value)
	proto.RegisterEnum("consumerdatastandards.BankingScheduledPaymentTo_BankingScheduledPaymentToToUType", BankingScheduledPaymentTo_BankingScheduledPaymentToToUType_name, BankingScheduledPaymentTo_BankingScheduledPaymentToToUType_value)
	proto.RegisterEnum("consumerdatastandards.BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions", BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions_name, BankingTermDepositAccount_BankingTermDepositAccountMaturityInstructions_value)
	proto.RegisterEnum("consumerdatastandards.BankingTransaction_BankingTransactionStatus", BankingTransaction_BankingTransactionStatus_name, BankingTransaction_BankingTransactionStatus_value)
	proto.RegisterEnum("consumerdatastandards.BankingTransaction_BankingTransactionType", BankingTransaction_BankingTransactionType_name, BankingTransaction_BankingTransactionType_value)
	proto.RegisterEnum("consumerdatastandards.BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType", BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType_name, BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataExtensionUType_value)
	proto.RegisterEnum("consumerdatastandards.BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService", BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService_name, BankingTransactionDetailExtendedData_BankingTransactionDetailExtendedDataService_value)
	proto.RegisterEnum("consumerdatastandards.CommonEmailAddress_CommonEmailAddressPurpose", CommonEmailAddress_CommonEmailAddressPurpose_name, CommonEmailAddress_CommonEmailAddressPurpose_value)
	proto.RegisterEnum("consumerdatastandards.CommonOrganisation_CommonOrganisationOrganisationType", CommonOrganisation_CommonOrganisationOrganisationType_name, CommonOrganisation_CommonOrganisationOrganisationType_value)
	proto.RegisterEnum("consumerdatastandards.CommonPhoneNumber_CommonPhoneNumberPurpose", CommonPhoneNumber_CommonPhoneNumberPurpose_name, CommonPhoneNumber_CommonPhoneNumberPurpose_value)
	proto.RegisterEnum("consumerdatastandards.CommonPhysicalAddress_CommonPhysicalAddressAddressUType", CommonPhysicalAddress_CommonPhysicalAddressAddressUType_name, CommonPhysicalAddress_CommonPhysicalAddressAddressUType_value)
	proto.RegisterEnum("consumerdatastandards.ListAccountsRequest_ListAccountsRequestOpenStatus", ListAccountsRequest_ListAccountsRequestOpenStatus_name, ListAccountsRequest_ListAccountsRequestOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.ListAccountsRequest_ListAccountsRequestProductCategory", ListAccountsRequest_ListAccountsRequestProductCategory_name, ListAccountsRequest_ListAccountsRequestProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus", ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus_name, ListBalancesBulkRequest_ListBalancesBulkRequestOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory", ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory_name, ListBalancesBulkRequest_ListBalancesBulkRequestProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus", ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus_name, ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory", ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory_name, ListDirectDebitsBulkRequest_ListDirectDebitsBulkRequestProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ListPayeesRequest_ListPayeesRequestType", ListPayeesRequest_ListPayeesRequestType_name, ListPayeesRequest_ListPayeesRequestType_value)
	proto.RegisterEnum("consumerdatastandards.ListProductsRequest_ListProductsRequestEffective", ListProductsRequest_ListProductsRequestEffective_name, ListProductsRequest_ListProductsRequestEffective_value)
	proto.RegisterEnum("consumerdatastandards.ListProductsRequest_ListProductsRequestProductCategory", ListProductsRequest_ListProductsRequestProductCategory_name, ListProductsRequest_ListProductsRequestProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus", ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus_name, ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestOpenStatus_value)
	proto.RegisterEnum("consumerdatastandards.ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory", ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory_name, ListScheduledPaymentsBulkRequest_ListScheduledPaymentsBulkRequestProductCategory_value)
	proto.RegisterEnum("consumerdatastandards.ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType", ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType_name, ResponseCommonCustomerData_ResponseCommonCustomerDataCustomerUType_value)
	proto.RegisterEnum("consumerdatastandards.ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType", ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType_name, ResponseCommonCustomerDetailData_ResponseCommonCustomerDetailDataCustomerUType_value)
	proto.RegisterEnum("consumerdatastandards.ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus", ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus_name, ResponseCommonDiscoveryStatusData_ResponseCommonDiscoveryStatusDataStatus_value)
	proto.RegisterType((*BankingAccount)(nil), "consumerdatastandards.BankingAccount")
	proto.RegisterType((*BankingAccountDetail)(nil), "consumerdatastandards.BankingAccountDetail")
	proto.RegisterType((*BankingAuthorisedEntity)(nil), "consumerdatastandards.BankingAuthorisedEntity")
	proto.RegisterType((*BankingBalance)(nil), "consumerdatastandards.BankingBalance")
	proto.RegisterType((*BankingBalancePurse)(nil), "consumerdatastandards.BankingBalancePurse")
	proto.RegisterType((*BankingBillerPayee)(nil), "consumerdatastandards.BankingBillerPayee")
	proto.RegisterType((*BankingCreditCardAccount)(nil), "consumerdatastandards.BankingCreditCardAccount")
	proto.RegisterType((*BankingDirectDebit)(nil), "consumerdatastandards.BankingDirectDebit")
	proto.RegisterType((*BankingDomesticPayee)(nil), "consumerdatastandards.BankingDomesticPayee")
	proto.RegisterType((*BankingDomesticPayeeAccount)(nil), "consumerdatastandards.BankingDomesticPayeeAccount")
	proto.RegisterType((*BankingDomesticPayeeCard)(nil), "consumerdatastandards.BankingDomesticPayeeCard")
	proto.RegisterType((*BankingDomesticPayeePayId)(nil), "consumerdatastandards.BankingDomesticPayeePayId")
	proto.RegisterType((*BankingInternationalPayee)(nil), "consumerdatastandards.BankingInternationalPayee")
	proto.RegisterType((*BankingInternationalPayeeBankDetails)(nil), "consumerdatastandards.BankingInternationalPayeeBankDetails")
	proto.RegisterType((*BankingInternationalPayeeBankDetailsBankAddress)(nil), "consumerdatastandards.BankingInternationalPayeeBankDetailsBankAddress")
	proto.RegisterType((*BankingInternationalPayeeBeneficiaryDetails)(nil), "consumerdatastandards.BankingInternationalPayeeBeneficiaryDetails")
	proto.RegisterType((*BankingLoanAccount)(nil), "consumerdatastandards.BankingLoanAccount")
	proto.RegisterType((*BankingPayee)(nil), "consumerdatastandards.BankingPayee")
	proto.RegisterType((*BankingPayeeDetail)(nil), "consumerdatastandards.BankingPayeeDetail")
	proto.RegisterType((*BankingProductBundle)(nil), "consumerdatastandards.BankingProductBundle")
	proto.RegisterType((*BankingProductConstraint)(nil), "consumerdatastandards.BankingProductConstraint")
	proto.RegisterType((*BankingProductDepositRate)(nil), "consumerdatastandards.BankingProductDepositRate")
	proto.RegisterType((*BankingProductDetail)(nil), "consumerdatastandards.BankingProductDetail")
	proto.RegisterType((*BankingProductDiscount)(nil), "consumerdatastandards.BankingProductDiscount")
	proto.RegisterType((*BankingProductDiscountEligibility)(nil), "consumerdatastandards.BankingProductDiscountEligibility")
	proto.RegisterType((*BankingProductEligibility)(nil), "consumerdatastandards.BankingProductEligibility")
	proto.RegisterType((*BankingProductFeature)(nil), "consumerdatastandards.BankingProductFeature")
	proto.RegisterType((*BankingProductFee)(nil), "consumerdatastandards.BankingProductFee")
	proto.RegisterType((*BankingProductLendingRate)(nil), "consumerdatastandards.BankingProductLendingRate")
	proto.RegisterType((*BankingProductRateCondition)(nil), "consumerdatastandards.BankingProductRateCondition")
	proto.RegisterType((*BankingProductRateTier)(nil), "consumerdatastandards.BankingProductRateTier")
	proto.RegisterType((*BankingProductRateTierSubTier)(nil), "consumerdatastandards.BankingProductRateTierSubTier")
	proto.RegisterType((*BankingProductV2)(nil), "consumerdatastandards.BankingProductV2")
	proto.RegisterType((*BankingProductV2AdditionalInformation)(nil), "consumerdatastandards.BankingProductV2AdditionalInformation")
	proto.RegisterType((*BankingProductV2CardArt)(nil), "consumerdatastandards.BankingProductV2CardArt")
	proto.RegisterType((*BankingScheduledPayment)(nil), "consumerdatastandards.BankingScheduledPayment")
	proto.RegisterType((*BankingScheduledPaymentFrom)(nil), "consumerdatastandards.BankingScheduledPaymentFrom")
	proto.RegisterType((*BankingScheduledPaymentInterval)(nil), "consumerdatastandards.BankingScheduledPaymentInterval")
	proto.RegisterType((*BankingScheduledPaymentRecurrence)(nil), "consumerdatastandards.BankingScheduledPaymentRecurrence")
	proto.RegisterType((*BankingScheduledPaymentRecurrenceEventBased)(nil), "consumerdatastandards.BankingScheduledPaymentRecurrenceEventBased")
	proto.RegisterType((*BankingScheduledPaymentRecurrenceIntervalSchedule)(nil), "consumerdatastandards.BankingScheduledPaymentRecurrenceIntervalSchedule")
	proto.RegisterType((*BankingScheduledPaymentRecurrenceLastWeekday)(nil), "consumerdatastandards.BankingScheduledPaymentRecurrenceLastWeekday")
	proto.RegisterType((*BankingScheduledPaymentRecurrenceOnceOff)(nil), "consumerdatastandards.BankingScheduledPaymentRecurrenceOnceOff")
	proto.RegisterType((*BankingScheduledPaymentSet)(nil), "consumerdatastandards.BankingScheduledPaymentSet")
	proto.RegisterType((*BankingScheduledPaymentTo)(nil), "consumerdatastandards.BankingScheduledPaymentTo")
	proto.RegisterType((*BankingTermDepositAccount)(nil), "consumerdatastandards.BankingTermDepositAccount")
	proto.RegisterType((*BankingTransaction)(nil), "consumerdatastandards.BankingTransaction")
	proto.RegisterType((*BankingTransactionDetail)(nil), "consumerdatastandards.BankingTransactionDetail")
	proto.RegisterType((*BankingTransactionDetailExtendedData)(nil), "consumerdatastandards.BankingTransactionDetailExtendedData")
	proto.RegisterType((*BankingTransactionDetailExtendedDataX2P101Payload)(nil), "consumerdatastandards.BankingTransactionDetailExtendedDataX2p101Payload")
	proto.RegisterType((*CommonEmailAddress)(nil), "consumerdatastandards.CommonEmailAddress")
	proto.RegisterType((*CommonOrganisation)(nil), "consumerdatastandards.CommonOrganisation")
	proto.RegisterType((*CommonOrganisationDetail)(nil), "consumerdatastandards.CommonOrganisationDetail")
	proto.RegisterType((*CommonPAFAddress)(nil), "consumerdatastandards.CommonPAFAddress")
	proto.RegisterType((*CommonPerson)(nil), "consumerdatastandards.CommonPerson")
	proto.RegisterType((*CommonPersonDetail)(nil), "consumerdatastandards.CommonPersonDetail")
	proto.RegisterType((*CommonPhoneNumber)(nil), "consumerdatastandards.CommonPhoneNumber")
	proto.RegisterType((*CommonPhysicalAddress)(nil), "consumerdatastandards.CommonPhysicalAddress")
	proto.RegisterType((*CommonPhysicalAddressWithPurpose)(nil), "consumerdatastandards.CommonPhysicalAddressWithPurpose")
	proto.RegisterType((*CommonSimpleAddress)(nil), "consumerdatastandards.CommonSimpleAddress")
	proto.RegisterType((*DiscoveryOutage)(nil), "consumerdatastandards.DiscoveryOutage")
	proto.RegisterType((*GetAccountDetailRequest)(nil), "consumerdatastandards.GetAccountDetailRequest")
	proto.RegisterType((*GetBalanceRequest)(nil), "consumerdatastandards.GetBalanceRequest")
	proto.RegisterType((*GetCustomerDetailRequest)(nil), "consumerdatastandards.GetCustomerDetailRequest")
	proto.RegisterType((*GetCustomerRequest)(nil), "consumerdatastandards.GetCustomerRequest")
	proto.RegisterType((*GetOutagesRequest)(nil), "consumerdatastandards.GetOutagesRequest")
	proto.RegisterType((*GetPayeeDetailRequest)(nil), "consumerdatastandards.GetPayeeDetailRequest")
	proto.RegisterType((*GetProductDetailRequest)(nil), "consumerdatastandards.GetProductDetailRequest")
	proto.RegisterType((*GetStatusRequest)(nil), "consumerdatastandards.GetStatusRequest")
	proto.RegisterType((*GetTransactionDetailRequest)(nil), "consumerdatastandards.GetTransactionDetailRequest")
	proto.RegisterType((*GetTransactionsRequest)(nil), "consumerdatastandards.GetTransactionsRequest")
	proto.RegisterType((*Links)(nil), "consumerdatastandards.Links")
	proto.RegisterType((*LinksPaginated)(nil), "consumerdatastandards.LinksPaginated")
	proto.RegisterType((*ListAccountsRequest)(nil), "consumerdatastandards.ListAccountsRequest")
	proto.RegisterType((*ListBalancesBulkRequest)(nil), "consumerdatastandards.ListBalancesBulkRequest")
	proto.RegisterType((*ListBalancesSpecificAccountsRequest)(nil), "consumerdatastandards.ListBalancesSpecificAccountsRequest")
	proto.RegisterType((*ListDirectDebitsBulkRequest)(nil), "consumerdatastandards.ListDirectDebitsBulkRequest")
	proto.RegisterType((*ListDirectDebitsRequest)(nil), "consumerdatastandards.ListDirectDebitsRequest")
	proto.RegisterType((*ListDirectDebitsSpecificAccountsRequest)(nil), "consumerdatastandards.ListDirectDebitsSpecificAccountsRequest")
	proto.RegisterType((*ListPayeesRequest)(nil), "consumerdatastandards.ListPayeesRequest")
	proto.RegisterType((*ListProductsRequest)(nil), "consumerdatastandards.ListProductsRequest")
	proto.RegisterType((*ListScheduledPaymentsBulkRequest)(nil), "consumerdatastandards.ListScheduledPaymentsBulkRequest")
	proto.RegisterType((*ListScheduledPaymentsRequest)(nil), "consumerdatastandards.ListScheduledPaymentsRequest")
	proto.RegisterType((*ListScheduledPaymentsSpecificAccountsRequest)(nil), "consumerdatastandards.ListScheduledPaymentsSpecificAccountsRequest")
	proto.RegisterType((*Meta)(nil), "consumerdatastandards.Meta")
	proto.RegisterType((*MetaPaginated)(nil), "consumerdatastandards.MetaPaginated")
	proto.RegisterType((*RequestAccountIds)(nil), "consumerdatastandards.RequestAccountIds")
	proto.RegisterType((*RequestAccountIdsData)(nil), "consumerdatastandards.RequestAccountIdsData")
	proto.RegisterType((*ResponseBankingAccountById)(nil), "consumerdatastandards.ResponseBankingAccountById")
	proto.RegisterType((*ResponseBankingAccountList)(nil), "consumerdatastandards.ResponseBankingAccountList")
	proto.RegisterType((*ResponseBankingAccountListData)(nil), "consumerdatastandards.ResponseBankingAccountListData")
	proto.RegisterType((*ResponseBankingAccountsBalanceById)(nil), "consumerdatastandards.ResponseBankingAccountsBalanceById")
	proto.RegisterType((*ResponseBankingAccountsBalanceList)(nil), "consumerdatastandards.ResponseBankingAccountsBalanceList")
	proto.RegisterType((*ResponseBankingAccountsBalanceListData)(nil), "consumerdatastandards.ResponseBankingAccountsBalanceListData")
	proto.RegisterType((*ResponseBankingDirectDebitAuthorisationList)(nil), "consumerdatastandards.ResponseBankingDirectDebitAuthorisationList")
	proto.RegisterType((*ResponseBankingDirectDebitAuthorisationListData)(nil), "consumerdatastandards.ResponseBankingDirectDebitAuthorisationListData")
	proto.RegisterType((*ResponseBankingPayeeById)(nil), "consumerdatastandards.ResponseBankingPayeeById")
	proto.RegisterType((*ResponseBankingPayeeList)(nil), "consumerdatastandards.ResponseBankingPayeeList")
	proto.RegisterType((*ResponseBankingPayeeListData)(nil), "consumerdatastandards.ResponseBankingPayeeListData")
	proto.RegisterType((*ResponseBankingProductById)(nil), "consumerdatastandards.ResponseBankingProductById")
	proto.RegisterType((*ResponseBankingProductList)(nil), "consumerdatastandards.ResponseBankingProductList")
	proto.RegisterType((*ResponseBankingProductListData)(nil), "consumerdatastandards.ResponseBankingProductListData")
	proto.RegisterType((*ResponseBankingScheduledPaymentsList)(nil), "consumerdatastandards.ResponseBankingScheduledPaymentsList")
	proto.RegisterType((*ResponseBankingScheduledPaymentsListData)(nil), "consumerdatastandards.ResponseBankingScheduledPaymentsListData")
	proto.RegisterType((*ResponseBankingTransactionById)(nil), "consumerdatastandards.ResponseBankingTransactionById")
	proto.RegisterType((*ResponseBankingTransactionList)(nil), "consumerdatastandards.ResponseBankingTransactionList")
	proto.RegisterType((*ResponseBankingTransactionListData)(nil), "consumerdatastandards.ResponseBankingTransactionListData")
	proto.RegisterType((*ResponseCommonCustomer)(nil), "consumerdatastandards.ResponseCommonCustomer")
	proto.RegisterType((*ResponseCommonCustomerData)(nil), "consumerdatastandards.ResponseCommonCustomerData")
	proto.RegisterType((*ResponseCommonCustomerDetail)(nil), "consumerdatastandards.ResponseCommonCustomerDetail")
	proto.RegisterType((*ResponseCommonCustomerDetailData)(nil), "consumerdatastandards.ResponseCommonCustomerDetailData")
	proto.RegisterType((*ResponseCommonDiscoveryStatus)(nil), "consumerdatastandards.ResponseCommonDiscoveryStatus")
	proto.RegisterType((*ResponseCommonDiscoveryStatusData)(nil), "consumerdatastandards.ResponseCommonDiscoveryStatusData")
	proto.RegisterType((*ResponseDiscoveryOutagesList)(nil), "consumerdatastandards.ResponseDiscoveryOutagesList")
	proto.RegisterType((*ResponseDiscoveryOutagesListData)(nil), "consumerdatastandards.ResponseDiscoveryOutagesListData")
	proto.RegisterType((*ResponseErrorList)(nil), "consumerdatastandards.ResponseErrorList")
	proto.RegisterType((*ResponseErrorListErrors)(nil), "consumerdatastandards.ResponseErrorListErrors")
	proto.RegisterType((*ResponseErrorListErrors_MetaMessage)(nil), "consumerdatastandards.ResponseErrorListErrors.MetaMessage")
}

func init() { proto.RegisterFile("proto/ob-service.proto", fileDescriptor_f4023f3aa12c5f67) }

var fileDescriptor_f4023f3aa12c5f67 = []byte{
	// 10548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x6b, 0x8c, 0x1c, 0x49,
	0x72, 0x18, 0xcc, 0xea, 0xee, 0x79, 0xc5, 0x0c, 0xb9, 0xc5, 0x5c, 0x92, 0x3b, 0xcb, 0xe5, 0xee,
	0x71, 0x6b, 0x77, 0x49, 0x2e, 0x5f, 0xb3, 0x9c, 0x7d, 0x71, 0x49, 0xee, 0xa3, 0xa6, 0xbb, 0x7a,
	0xa6, 0xc4, 0x9e, 0xee, 0xde, 0xea, 0x6e, 0x92, 0x73, 0xa7, 0x53, 0xab, 0xa6, 0xbb, 0x66, 0x58,
	0x60, 0x4f, 0xf5, 0x5c, 0x55, 0x35, 0x77, 0xa8, 0xc3, 0x7d, 0xd2, 0x77, 0x07, 0x9f, 0x04, 0x4b,
	0x86, 0x70, 0x0f, 0x08, 0x07, 0xdb, 0x02, 0x6c, 0x4b, 0x27, 0xc1, 0x96, 0x61, 0x4b, 0xb6, 0x05,
	0x59, 0x27, 0xe3, 0x24, 0x9d, 0xcf, 0xfe, 0x21, 0xcb, 0x92, 0x6d, 0x19, 0x16, 0x24, 0x18, 0x32,
	0x2c, 0x9f, 0x05, 0x58, 0x3f, 0x24, 0xcb, 0xf0, 0x2f, 0xff, 0x32, 0xf2, 0x51, 0x55, 0x59, 0xaf,
	0xee, 0xaa, 0xe6, 0xdc, 0xee, 0xc1, 0xb7, 0x00, 0xc1, 0xe9, 0x8a, 0xca, 0x88, 0xcc, 0x8c, 0x8c,
	0x8c, 0x88, 0x8c, 0xcc, 0x8c, 0x82, 0x53, 0xfb, 0xf6, 0xd0, 0x1d, 0xae, 0x0c, 0xb7, 0xaf, 0x38,
	0x86, 0xfd, 0xd0, 0xec, 0x19, 0x57, 0x09, 0x00, 0x9d, 0xec, 0x0d, 0x2d, 0x67, 0xb4, 0x67, 0xd8,
	0x7d, 0xdd, 0xd5, 0x1d, 0x57, 0xb7, 0xfa, 0xba, 0xdd, 0x77, 0x4e, 0x9f, 0xd9, 0x1d, 0x0e, 0x77,
	0x07, 0xc6, 0x8a, 0xbe, 0x6f, 0xae, 0xe8, 0x96, 0x35, 0x74, 0x75, 0xd7, 0x1c, 0x5a, 0x0e, 0x45,
	0x92, 0xbe, 0x52, 0x82, 0x63, 0x6b, 0xba, 0xf5, 0xc0, 0xb4, 0x76, 0xe5, 0x5e, 0x6f, 0x38, 0xb2,
	0x5c, 0x74, 0x06, 0x16, 0x74, 0xfa, 0x53, 0xed, 0x2f, 0x0b, 0x67, 0x85, 0x0b, 0x0b, 0x5a, 0x00,
	0x40, 0x12, 0x2c, 0xf5, 0x6c, 0x83, 0xd0, 0xa8, 0xe8, 0xae, 0xb1, 0x5c, 0x20, 0x05, 0x42, 0x30,
	0x74, 0x16, 0x16, 0xfb, 0xa6, 0xb3, 0x3f, 0xd0, 0x1f, 0xd5, 0xf5, 0x3d, 0x63, 0xb9, 0x48, 0x8a,
	0xf0, 0x20, 0xb4, 0x0c, 0x73, 0xa6, 0xd3, 0xf8, 0xc0, 0x32, 0xfa, 0xcb, 0xa5, 0xb3, 0xc2, 0x85,
	0x79, 0xcd, 0x7b, 0xc4, 0xf4, 0xf7, 0x74, 0xe7, 0x81, 0xd1, 0xaf, 0x8f, 0xf6, 0xb6, 0x0d, 0x7b,
	0x79, 0x86, 0xd2, 0xe7, 0x61, 0xe8, 0x34, 0xcc, 0x5b, 0x66, 0xef, 0x81, 0x85, 0x89, 0xcf, 0x92,
	0xf7, 0xfe, 0x33, 0xfa, 0x21, 0x80, 0xe1, 0xbe, 0x61, 0xb5, 0x5c, 0xdd, 0x1d, 0x39, 0xcb, 0x73,
	0x67, 0x85, 0x0b, 0xc7, 0x56, 0xdf, 0xb9, 0x9a, 0xc8, 0x9a, 0xab, 0xe1, 0x8e, 0x47, 0x1e, 0x1b,
	0x3e, 0x15, 0x8d, 0xa3, 0x88, 0xee, 0xc2, 0x13, 0xfb, 0xf6, 0xb0, 0x3f, 0xea, 0xb9, 0x65, 0xdd,
	0x35, 0x76, 0x87, 0xf6, 0xa3, 0xe5, 0x79, 0x52, 0xc9, 0x95, 0xf1, 0x95, 0x34, 0xc3, 0x48, 0x5a,
	0x94, 0x0a, 0x66, 0x1a, 0x03, 0x11, 0xa6, 0x2d, 0x50, 0xa6, 0x71, 0x20, 0xe9, 0x3e, 0x2c, 0xa7,
	0x35, 0x11, 0xbd, 0x08, 0x67, 0xd7, 0xe4, 0xfa, 0x6d, 0xb5, 0xbe, 0xde, 0x95, 0xcb, 0xe5, 0x46,
	0xa7, 0xde, 0xee, 0x36, 0x9a, 0x4a, 0xbd, 0xdb, 0x6a, 0xcb, 0xed, 0x4e, 0x8b, 0xfc, 0x16, 0x8f,
	0xa0, 0x73, 0x20, 0x8d, 0x2b, 0x55, 0xae, 0x35, 0x5a, 0x4a, 0x45, 0x14, 0xa4, 0x53, 0x70, 0x22,
	0x5c, 0x53, 0xc5, 0x70, 0x75, 0x73, 0x20, 0xfd, 0xa2, 0x00, 0x4f, 0x79, 0x2f, 0x46, 0xee, 0xfd,
	0xa1, 0x6d, 0x3a, 0x46, 0x5f, 0xb1, 0x5c, 0xd3, 0x7d, 0x84, 0x44, 0x28, 0xea, 0xdb, 0x16, 0x13,
	0x18, 0xfc, 0x93, 0x40, 0x7a, 0x16, 0x93, 0x10, 0xfc, 0x13, 0x21, 0x28, 0xe9, 0xf6, 0xb6, 0xc5,
	0x24, 0x82, 0xfc, 0x26, 0xc2, 0x62, 0x38, 0x3d, 0xdb, 0xdc, 0xc7, 0xf2, 0x43, 0xc4, 0x01, 0x0b,
	0x4b, 0x00, 0x42, 0xab, 0x70, 0x62, 0xc7, 0xb4, 0x74, 0xab, 0x67, 0xea, 0x03, 0xd5, 0x72, 0x5c,
	0xd3, 0x1d, 0x91, 0xa2, 0x54, 0x34, 0x12, 0xdf, 0x49, 0xff, 0xb0, 0xe0, 0xcb, 0xf5, 0x9a, 0x3e,
	0xd0, 0xad, 0x9e, 0x31, 0x41, 0xae, 0xcf, 0xc1, 0x31, 0x7d, 0x6f, 0x68, 0xbb, 0xb8, 0x47, 0x35,
	0x73, 0xcf, 0x74, 0x59, 0xbb, 0x23, 0x50, 0x74, 0x11, 0x44, 0xfd, 0xa1, 0x6e, 0x0e, 0xf4, 0xed,
	0x81, 0xc1, 0x28, 0xb3, 0xee, 0xc4, 0xe0, 0xb8, 0x6b, 0x3d, 0xdb, 0xe8, 0x9b, 0x2e, 0x25, 0xc8,
	0xba, 0xc6, 0x81, 0xb0, 0x24, 0xf7, 0x46, 0xb6, 0x6d, 0x58, 0xbd, 0x47, 0xac, 0x3b, 0xfe, 0x33,
	0x6e, 0x11, 0xfd, 0xed, 0x7a, 0xf5, 0x50, 0x59, 0x8f, 0x40, 0xd1, 0x1a, 0xcc, 0xee, 0x8f, 0x6c,
	0xc7, 0xc0, 0xd2, 0x5e, 0xbc, 0xb0, 0xb8, 0x7a, 0x71, 0xbc, 0x20, 0x32, 0xb4, 0x26, 0x46, 0xd1,
	0x18, 0xa6, 0xa4, 0xc2, 0x93, 0x09, 0xaf, 0xd1, 0x29, 0x98, 0xd5, 0xf7, 0x30, 0x83, 0x18, 0xbf,
	0xd8, 0x53, 0xa8, 0xd9, 0x85, 0x70, 0xb3, 0xa5, 0x1d, 0x40, 0x1e, 0x29, 0x73, 0x30, 0x30, 0xec,
	0xa6, 0xfe, 0xc8, 0x30, 0xd0, 0x73, 0x00, 0xdb, 0xe4, 0xb1, 0x3c, 0xec, 0x1b, 0x8c, 0x1a, 0x07,
	0x09, 0xde, 0x13, 0xe1, 0x2f, 0xf0, 0xef, 0x89, 0xc2, 0x10, 0xa1, 0xd8, 0xb3, 0x3d, 0xc1, 0xc1,
	0x3f, 0xa5, 0x6f, 0x0b, 0xfe, 0x74, 0x28, 0x13, 0x8e, 0x96, 0x75, 0xbb, 0xef, 0xe9, 0xb0, 0x8b,
	0x20, 0xee, 0x99, 0x56, 0x53, 0x7f, 0xb4, 0x67, 0x58, 0xae, 0xcc, 0x77, 0x21, 0x06, 0x47, 0x17,
	0xe0, 0x89, 0x7d, 0x0a, 0x28, 0x87, 0xfb, 0x14, 0x05, 0x63, 0xaa, 0x0c, 0x54, 0x19, 0x19, 0x8c,
	0x2a, 0x1b, 0xfb, 0x28, 0x1c, 0x8f, 0x5e, 0x00, 0x23, 0x9a, 0x92, 0x0e, 0x7f, 0x04, 0x2a, 0xfd,
	0x99, 0xe0, 0xf3, 0xab, 0x62, 0xda, 0x46, 0xcf, 0xad, 0x18, 0xdb, 0xe6, 0x24, 0x25, 0xfc, 0x49,
	0x10, 0xf5, 0xc8, 0xfc, 0x23, 0x6d, 0x5e, 0x5c, 0xbd, 0x3a, 0x41, 0xd5, 0x45, 0xb0, 0xb4, 0x18,
	0x1d, 0xcc, 0x8e, 0x81, 0xee, 0xd0, 0x66, 0x84, 0xfa, 0x18, 0x05, 0xa3, 0xcb, 0x70, 0xdc, 0x07,
	0xe1, 0xbe, 0xb4, 0xcd, 0x3d, 0xaf, 0x97, 0xf1, 0x17, 0xd2, 0xbf, 0x2c, 0xf9, 0x4a, 0xa5, 0x32,
	0xdc, 0x33, 0x1c, 0xd7, 0xec, 0x51, 0xd1, 0xa8, 0xc1, 0x1c, 0xeb, 0x19, 0xe9, 0xe8, 0xe2, 0xea,
	0xea, 0xf8, 0x3e, 0x84, 0xb0, 0xd9, 0x80, 0x6b, 0x1e, 0x09, 0x54, 0x86, 0x52, 0x4f, 0xb7, 0xfb,
	0x8c, 0x1d, 0x2b, 0x39, 0x48, 0x61, 0xf9, 0xd1, 0x08, 0x32, 0xaa, 0xc2, 0xcc, 0xbe, 0xfe, 0x48,
	0xed, 0x93, 0x9e, 0x2f, 0xae, 0xbe, 0x92, 0x83, 0x4a, 0x13, 0xe3, 0x69, 0x14, 0x1d, 0xfd, 0x28,
	0x1c, 0xdf, 0xe7, 0x5a, 0xd9, 0x69, 0x3f, 0xda, 0xa7, 0x1c, 0x3a, 0xb6, 0xfa, 0x7e, 0x0e, 0x9a,
	0x69, 0x15, 0x85, 0x09, 0x6b, 0xf1, 0xba, 0xa4, 0xdf, 0x13, 0xe0, 0xa5, 0x4c, 0xc8, 0xe8, 0x4d,
	0x78, 0xd5, 0x33, 0x0d, 0x95, 0xc6, 0xa6, 0xd2, 0x6a, 0xab, 0xe5, 0x6e, 0x53, 0xde, 0x52, 0x14,
	0xf6, 0xbf, 0x67, 0x2f, 0x3a, 0xdd, 0xf6, 0x56, 0xd3, 0x7f, 0x14, 0x8f, 0xa0, 0xd7, 0xe0, 0x95,
	0x3c, 0x88, 0x65, 0x59, 0xab, 0x88, 0x02, 0x7a, 0x03, 0x56, 0xf3, 0x60, 0x35, 0xe5, 0xad, 0xae,
	0x5a, 0x11, 0x0b, 0xd2, 0x07, 0xf0, 0xcc, 0x18, 0x31, 0xc0, 0x1a, 0x97, 0x09, 0x02, 0xd1, 0x23,
	0x74, 0xe2, 0xf0, 0x20, 0xf4, 0x22, 0x1c, 0xf5, 0x1e, 0xa9, 0x83, 0x41, 0xe7, 0x7a, 0x18, 0x88,
	0xd5, 0xcd, 0xb6, 0xb3, 0xed, 0xa9, 0x9b, 0x6d, 0x67, 0x5b, 0xba, 0xe1, 0x6b, 0x9b, 0x98, 0xd0,
	0x60, 0xe5, 0x85, 0xc5, 0x86, 0x11, 0x64, 0xca, 0x2d, 0x80, 0x48, 0x5f, 0x2b, 0xc2, 0xd3, 0xa9,
	0xb2, 0x82, 0xb1, 0xcd, 0xbe, 0x61, 0xb9, 0xe6, 0x8e, 0x19, 0x60, 0x07, 0x10, 0x6c, 0x34, 0xad,
	0x40, 0x29, 0x92, 0xdf, 0x68, 0x1b, 0x4a, 0x2e, 0x96, 0xa5, 0x22, 0x91, 0xa5, 0x7a, 0x5e, 0xf9,
	0x4c, 0x7f, 0x43, 0x04, 0x89, 0xd0, 0x96, 0xfe, 0x54, 0x80, 0x67, 0xc7, 0x96, 0x43, 0x97, 0xe1,
	0x42, 0xfa, 0x20, 0x76, 0xd5, 0x0a, 0x1d, 0x3b, 0x65, 0x53, 0x56, 0x6b, 0xe2, 0x11, 0xf4, 0x0a,
	0x5c, 0xce, 0x50, 0xba, 0xad, 0xd4, 0x94, 0xe6, 0x46, 0xa3, 0xae, 0x88, 0x02, 0xba, 0x08, 0xe7,
	0x32, 0x60, 0xc8, 0x6b, 0x75, 0xb1, 0x80, 0x5e, 0x87, 0x6b, 0x19, 0xca, 0x36, 0xb4, 0xf5, 0xae,
	0x5a, 0x51, 0xea, 0x6d, 0xb5, 0xaa, 0x2a, 0x9a, 0x58, 0x94, 0xfe, 0x42, 0xf0, 0x87, 0x46, 0xb5,
	0x5c, 0xc3, 0xb6, 0x88, 0x17, 0xab, 0x0f, 0xa8, 0x6a, 0xfa, 0x34, 0x2c, 0x6e, 0xeb, 0xd6, 0x03,
	0xea, 0xfd, 0x38, 0x4c, 0x3d, 0xdd, 0x1c, 0xcf, 0xed, 0x38, 0x99, 0xb5, 0x80, 0x84, 0xc6, 0xd3,
	0x43, 0x36, 0xa0, 0x6d, 0xc3, 0x32, 0x76, 0xcc, 0x9e, 0xa9, 0xdb, 0x8f, 0xbc, 0x5a, 0xa8, 0xe6,
	0x5a, 0xcb, 0x5d, 0x4b, 0x8c, 0x92, 0x96, 0x40, 0x5d, 0xfa, 0x66, 0x11, 0x5e, 0xcc, 0xd2, 0xd2,
	0xf8, 0x44, 0x11, 0x92, 0x26, 0xca, 0x7d, 0xca, 0x21, 0xb9, 0xdf, 0xb7, 0x0d, 0xc7, 0x6b, 0x7b,
	0xf5, 0x31, 0x38, 0xb4, 0x16, 0x50, 0xd3, 0x78, 0xd2, 0xe8, 0x6a, 0x88, 0x59, 0xb8, 0xd8, 0x9a,
	0x5a, 0x66, 0x33, 0x34, 0xe1, 0x0d, 0x99, 0x94, 0xf7, 0xcd, 0x7d, 0xd6, 0xf8, 0x12, 0x9b, 0x94,
	0x3e, 0x04, 0x2f, 0x41, 0x48, 0x47, 0x6c, 0xcf, 0xf3, 0xf2, 0x1e, 0x71, 0xcf, 0x77, 0x8c, 0xfe,
	0x5d, 0xd3, 0x36, 0x18, 0x32, 0xf5, 0xbb, 0xc2, 0x40, 0xf4, 0x1a, 0x9c, 0x1c, 0x18, 0xbb, 0xfa,
	0x80, 0x9a, 0x4d, 0x35, 0x98, 0xc1, 0x73, 0xa4, 0x74, 0xf2, 0x4b, 0x4c, 0xdb, 0x1e, 0x8e, 0x5c,
	0xd3, 0xda, 0x65, 0xb4, 0xe7, 0x29, 0xed, 0x10, 0x10, 0xfb, 0x57, 0xce, 0xd0, 0x76, 0x89, 0xaf,
	0x44, 0x17, 0x02, 0xfe, 0xb3, 0xd4, 0x85, 0x95, 0x9c, 0x7c, 0xc4, 0x5d, 0xd5, 0xd9, 0x00, 0xd1,
	0x41, 0xf4, 0x1e, 0x93, 0x74, 0x8b, 0x34, 0x82, 0x4b, 0x39, 0x84, 0x8c, 0xe7, 0xa3, 0x10, 0xe6,
	0xe3, 0x32, 0xcc, 0xed, 0x19, 0x8e, 0xa3, 0xef, 0x7a, 0xf4, 0xbd, 0x47, 0xbf, 0xda, 0x22, 0x57,
	0xed, 0x57, 0xe7, 0x7c, 0x47, 0xa8, 0x36, 0xd4, 0x2d, 0x4e, 0xa3, 0x0f, 0x86, 0xba, 0xa5, 0x58,
	0x7d, 0xe2, 0x44, 0x31, 0x8d, 0xce, 0x81, 0xb0, 0xab, 0xb4, 0xa7, 0x1f, 0x68, 0x46, 0xdf, 0xd6,
	0x3f, 0x60, 0x15, 0x05, 0x00, 0xec, 0xa4, 0xf8, 0x0f, 0xbe, 0x7f, 0x47, 0xeb, 0x8d, 0xbf, 0x40,
	0xaf, 0xc0, 0x93, 0x7b, 0xa6, 0x85, 0x17, 0x12, 0xfa, 0x80, 0x73, 0x1d, 0xa9, 0xf4, 0x24, 0xbd,
	0xc2, 0x62, 0x10, 0x02, 0x97, 0xc3, 0xee, 0x7c, 0xf2, 0x4b, 0xd2, 0x66, 0xd3, 0x62, 0x6d, 0x9e,
	0x65, 0x6d, 0xf6, 0x00, 0xa4, 0xcd, 0xde, 0x83, 0x4f, 0x6f, 0x8e, 0xb5, 0x39, 0xfa, 0x02, 0x4f,
	0x0c, 0xcb, 0x38, 0x70, 0x83, 0x5a, 0x08, 0xa3, 0xa8, 0x5c, 0x25, 0xbc, 0xc1, 0xcb, 0xa9, 0xe1,
	0xce, 0x8e, 0x63, 0xb8, 0x8c, 0xc5, 0x8a, 0x85, 0xd7, 0x2c, 0x7d, 0x22, 0x68, 0xf3, 0x5a, 0xe2,
	0x3b, 0xec, 0xf9, 0x86, 0xe0, 0x6a, 0xdf, 0x59, 0x86, 0xb3, 0x45, 0xec, 0xf9, 0x46, 0xe1, 0xb8,
	0x3d, 0x43, 0xdb, 0xdc, 0x35, 0x2d, 0x7d, 0x40, 0x06, 0x92, 0xb2, 0x70, 0x91, 0xb6, 0x27, 0xfe,
	0x86, 0xb4, 0x87, 0x83, 0xfa, 0x1d, 0x5e, 0xa2, 0xcb, 0xbb, 0xa4, 0x77, 0x98, 0x43, 0x1e, 0xbc,
	0xe5, 0xea, 0x36, 0xed, 0xf2, 0x51, 0xca, 0xa1, 0xd8, 0x0b, 0xdc, 0x22, 0xdb, 0x60, 0x7e, 0x77,
	0xd5, 0x36, 0x3e, 0x33, 0x22, 0xf4, 0x8f, 0xd1, 0x16, 0xc5, 0xdf, 0xa0, 0x21, 0x1c, 0xf5, 0xa1,
	0xc4, 0x65, 0x7b, 0x82, 0x98, 0x59, 0x75, 0xbc, 0x5a, 0xe3, 0xa4, 0x36, 0x01, 0xa4, 0xf1, 0x04,
	0xb5, 0x30, 0x7d, 0xe9, 0x6b, 0x02, 0x7c, 0x62, 0x02, 0x0a, 0x6f, 0xe0, 0x6a, 0x0d, 0xb9, 0xee,
	0x7b, 0x48, 0x9a, 0xd2, 0x94, 0xb7, 0x36, 0x95, 0x7a, 0x9b, 0x5a, 0x38, 0xb5, 0xde, 0x56, 0x34,
	0xa5, 0xd5, 0xee, 0x36, 0xea, 0xb5, 0x2d, 0xf1, 0x08, 0x7a, 0x07, 0x6e, 0x64, 0x41, 0x6b, 0x6a,
	0x6a, 0xbd, 0xac, 0x36, 0xe5, 0x5a, 0x57, 0xae, 0x57, 0x7c, 0x22, 0xa2, 0x20, 0xfd, 0x5e, 0x01,
	0x96, 0xbc, 0x10, 0x06, 0xb1, 0x89, 0xd1, 0x00, 0x90, 0x90, 0x12, 0x00, 0xe2, 0xd6, 0xf4, 0x85,
	0xf8, 0x9a, 0x9e, 0x0f, 0xe1, 0x14, 0x23, 0x21, 0x9c, 0x65, 0x98, 0x23, 0x9e, 0xac, 0xda, 0x67,
	0x13, 0xcf, 0x7b, 0x44, 0x1b, 0xcc, 0xed, 0x99, 0x21, 0xe3, 0xf1, 0xda, 0x84, 0x88, 0x0b, 0xef,
	0x3a, 0x93, 0x07, 0xce, 0xb9, 0x39, 0x00, 0x31, 0xfa, 0x06, 0x7d, 0x02, 0x9e, 0xf1, 0x58, 0x45,
	0x3d, 0x07, 0xc2, 0x19, 0xcf, 0x9b, 0x10, 0x8f, 0xf0, 0x41, 0x16, 0xae, 0x00, 0x61, 0x56, 0x5d,
	0x6e, 0xab, 0x8d, 0xba, 0x5c, 0x13, 0x05, 0xf4, 0x2c, 0x3c, 0x9d, 0x50, 0x6a, 0x4d, 0xad, 0xd5,
	0x14, 0x4d, 0x2c, 0x48, 0x27, 0x7c, 0x35, 0x47, 0x6a, 0x66, 0x91, 0x95, 0x6f, 0x09, 0xfe, 0xea,
	0x88, 0x45, 0x8a, 0xd6, 0x46, 0x56, 0x7f, 0x60, 0x90, 0xb8, 0x44, 0xbf, 0x6f, 0x52, 0x1d, 0xac,
	0x5a, 0x3b, 0x43, 0xc6, 0xf0, 0x08, 0x14, 0xcf, 0x88, 0x30, 0xa4, 0x63, 0x9b, 0x8c, 0xf1, 0xf1,
	0x17, 0xd1, 0x01, 0x2a, 0xc6, 0x07, 0xc8, 0x53, 0xd1, 0x25, 0xce, 0xeb, 0x7c, 0x0e, 0x80, 0xc5,
	0xa3, 0xf0, 0xfc, 0x9f, 0x21, 0xf3, 0x9f, 0x83, 0x48, 0x7f, 0x55, 0xf2, 0x9d, 0x64, 0x2f, 0xdc,
	0x35, 0xb4, 0x1c, 0xd7, 0xd6, 0x4d, 0xba, 0x20, 0xfe, 0x2e, 0x74, 0xe4, 0x02, 0x3c, 0x11, 0x00,
	0xef, 0xe8, 0x83, 0x91, 0x27, 0x4e, 0x51, 0x30, 0xfa, 0xff, 0xe0, 0x58, 0xcf, 0x6f, 0x0d, 0xb7,
	0x10, 0xbb, 0x93, 0x2d, 0x6e, 0xe7, 0xa3, 0xa6, 0xbe, 0x28, 0x87, 0xa8, 0x6b, 0x91, 0xda, 0xa4,
	0xff, 0x58, 0x80, 0x73, 0xd9, 0x50, 0xd1, 0x0d, 0x78, 0xc3, 0x97, 0x20, 0xad, 0x51, 0xe9, 0x94,
	0xdb, 0xdd, 0x72, 0xa3, 0xde, 0x6a, 0x6b, 0xb2, 0x5a, 0x0f, 0xfd, 0x24, 0x92, 0xb5, 0xa9, 0xd6,
	0xbb, 0x6b, 0x72, 0x4d, 0xae, 0x97, 0x15, 0xf1, 0x48, 0x5e, 0x5c, 0xf9, 0x9e, 0x8f, 0x2b, 0xf0,
	0xba, 0x22, 0x03, 0x6e, 0xa3, 0xa9, 0xd4, 0x71, 0x51, 0x0f, 0xbf, 0x80, 0xae, 0xc3, 0x6b, 0x39,
	0xeb, 0xae, 0xa9, 0x9b, 0x6a, 0x5b, 0x2c, 0xe6, 0xc5, 0x54, 0xeb, 0x0c, 0xb3, 0x24, 0xfd, 0xf6,
	0x9c, 0xef, 0xc0, 0x33, 0xb6, 0x56, 0x8c, 0xfd, 0xa1, 0x63, 0xba, 0x1a, 0x56, 0x44, 0x1f, 0xb5,
	0xd0, 0xad, 0xc2, 0x09, 0x7d, 0x7f, 0x7f, 0x60, 0xf6, 0x88, 0x6e, 0x0c, 0x6c, 0x0f, 0x9d, 0x55,
	0x89, 0xef, 0x30, 0x4e, 0x4f, 0x1f, 0xf4, 0x46, 0x83, 0x08, 0x0e, 0x0b, 0x77, 0x26, 0xbd, 0x43,
	0x5f, 0x10, 0xe0, 0x89, 0x7e, 0xd0, 0x6f, 0x22, 0xde, 0xb3, 0x44, 0xbc, 0xb7, 0x32, 0x89, 0x37,
	0xc7, 0xb3, 0xf4, 0x37, 0x95, 0x70, 0x05, 0x5a, 0xb4, 0x46, 0xac, 0x33, 0x6c, 0x6c, 0x12, 0xa8,
	0xab, 0x42, 0x7e, 0xa3, 0x32, 0xcc, 0xb8, 0xa6, 0x61, 0x3b, 0xcb, 0xf3, 0x24, 0x38, 0x99, 0x2d,
	0x4a, 0x4e, 0x28, 0x9a, 0x86, 0xad, 0x51, 0x5c, 0xe9, 0x3f, 0x17, 0xe1, 0x42, 0xd6, 0x66, 0x25,
	0xc9, 0x52, 0x45, 0x69, 0x36, 0x5a, 0x6a, 0xbb, 0xab, 0xc9, 0x6d, 0x25, 0xfc, 0x40, 0xe4, 0xa9,
	0xaa, 0xde, 0x53, 0x2a, 0xe2, 0x91, 0x29, 0x30, 0xd7, 0x1a, 0xf5, 0x4e, 0x4b, 0x14, 0xd0, 0xbb,
	0x70, 0x33, 0x2f, 0x66, 0xa7, 0x5e, 0xa9, 0x79, 0x04, 0x0a, 0xe8, 0x26, 0xbc, 0x99, 0x93, 0xc0,
	0x1d, 0x59, 0x53, 0xe5, 0xb5, 0x9a, 0x22, 0x16, 0xa7, 0xa8, 0x5d, 0xad, 0xb7, 0x69, 0xc1, 0x86,
	0xb6, 0x25, 0x96, 0xa6, 0xa8, 0xbd, 0x5a, 0x6b, 0xc8, 0x6d, 0xb5, 0xbe, 0x2e, 0xce, 0xa0, 0xf7,
	0xe0, 0x56, 0x4e, 0xe4, 0x4d, 0x59, 0xbb, 0xad, 0xb4, 0xbb, 0x35, 0xb5, 0x7e, 0x5b, 0xa9, 0x88,
	0xb3, 0xdc, 0x76, 0x83, 0x3f, 0xba, 0xc4, 0x28, 0xfe, 0xe9, 0x2c, 0x9c, 0x8a, 0xbc, 0x30, 0x1d,
	0x3e, 0xd0, 0x63, 0x8f, 0x8c, 0xbe, 0xc6, 0x2d, 0x0b, 0x38, 0x50, 0xc2, 0xd4, 0x2f, 0x64, 0x9f,
	0xfa, 0xc5, 0x1c, 0x53, 0xbf, 0x94, 0x3c, 0xf5, 0x83, 0xd8, 0xf9, 0x4c, 0x28, 0x76, 0x7e, 0x16,
	0xaf, 0x98, 0x49, 0x8c, 0x9d, 0xb4, 0x9c, 0x3a, 0xff, 0x3c, 0x28, 0x6a, 0x9c, 0xe7, 0xe2, 0xc6,
	0xd9, 0x85, 0xa5, 0x3e, 0xe3, 0x04, 0x99, 0xea, 0x74, 0x07, 0xaa, 0x99, 0x6d, 0xaa, 0x33, 0xc4,
	0x14, 0x70, 0x85, 0xa3, 0xab, 0x85, 0x6a, 0x41, 0x9f, 0x84, 0x45, 0x63, 0x60, 0xee, 0x9a, 0xdb,
	0xe6, 0xc0, 0x74, 0x1f, 0x2d, 0x2f, 0x90, 0x09, 0x7d, 0x3d, 0x57, 0xa5, 0x4a, 0x80, 0xaf, 0xf1,
	0xc4, 0xb0, 0xcf, 0xb7, 0x63, 0x50, 0x8e, 0x00, 0xf5, 0xf9, 0xd8, 0x23, 0xe6, 0xb8, 0x6b, 0xeb,
	0x96, 0xa3, 0xf7, 0x70, 0xd7, 0x49, 0x09, 0xba, 0x96, 0x88, 0x82, 0xa5, 0x7f, 0x5a, 0x00, 0x69,
	0x72, 0xa7, 0xd0, 0x2a, 0x5c, 0x8d, 0xc9, 0xab, 0xda, 0xa2, 0x5e, 0xb1, 0xff, 0x83, 0xce, 0x51,
	0xdf, 0xaa, 0xbe, 0x0a, 0x2b, 0x19, 0x71, 0x98, 0xb4, 0x63, 0xa5, 0x90, 0x1d, 0x89, 0xb9, 0xe2,
	0x58, 0x11, 0x64, 0x6f, 0x5d, 0x55, 0x51, 0xba, 0x65, 0xb9, 0x29, 0x16, 0x13, 0xa7, 0x6f, 0x32,
	0x8e, 0x52, 0x53, 0xd7, 0xd5, 0x35, 0xb5, 0xa6, 0xb6, 0xb7, 0xe8, 0x02, 0xa1, 0x24, 0x7d, 0x6d,
	0x11, 0x9e, 0x9f, 0x38, 0x58, 0x1f, 0xb9, 0x21, 0xfd, 0x25, 0x01, 0x9e, 0xea, 0xc7, 0xdb, 0xc5,
	0xf9, 0x71, 0x9f, 0x99, 0x56, 0x10, 0x27, 0x97, 0xa8, 0x24, 0x57, 0xac, 0xa5, 0xb5, 0x48, 0xfa,
	0xf6, 0x3c, 0x5c, 0x9f, 0x96, 0x2a, 0xba, 0x0d, 0xeb, 0xa9, 0xa3, 0xc9, 0x8f, 0x5f, 0x22, 0x90,
	0xd9, 0x96, 0x96, 0x5a, 0x57, 0x5a, 0x2d, 0xf1, 0x08, 0x6a, 0x43, 0xf3, 0x31, 0x89, 0x35, 0x95,
	0x7a, 0x4b, 0x6d, 0xd4, 0xbb, 0x9a, 0x52, 0x56, 0x9b, 0xaa, 0x52, 0x6f, 0x8b, 0x02, 0xfa, 0x01,
	0xa8, 0x3e, 0x26, 0x55, 0xec, 0xc2, 0xc9, 0xeb, 0xd8, 0x69, 0x3c, 0x04, 0x5a, 0xf2, 0x3d, 0x42,
	0xab, 0x88, 0x36, 0x41, 0x3d, 0x84, 0x76, 0xa9, 0xf5, 0x72, 0x63, 0x53, 0x11, 0x4b, 0xa8, 0x01,
	0xb7, 0x0f, 0x81, 0x5c, 0xbb, 0xa3, 0xd5, 0x1b, 0x77, 0x14, 0x4d, 0x9c, 0x41, 0x1b, 0x50, 0x79,
	0x4c, 0x82, 0xad, 0xb6, 0x5c, 0xad, 0x8a, 0xb3, 0x87, 0xc0, 0xb5, 0x56, 0xbb, 0x53, 0xc1, 0xa3,
	0x39, 0x77, 0x08, 0x32, 0xa2, 0x6c, 0x36, 0x6b, 0x0d, 0x1a, 0x4d, 0xa0, 0x47, 0x09, 0xc4, 0x79,
	0xd4, 0x82, 0xc6, 0x63, 0x52, 0xd5, 0x94, 0x96, 0x5a, 0x51, 0xea, 0xe5, 0x2d, 0x8f, 0xe8, 0x02,
	0x7a, 0x1f, 0x36, 0x1f, 0x93, 0x68, 0x5d, 0x6e, 0x77, 0x34, 0xb9, 0xd6, 0x6d, 0x2a, 0x5a, 0xab,
	0x51, 0x17, 0xe1, 0x10, 0x06, 0x39, 0xe4, 0x4c, 0x2d, 0x1e, 0xc2, 0x20, 0x37, 0xda, 0x1b, 0x8a,
	0x26, 0x2e, 0x49, 0xff, 0x78, 0x3e, 0xba, 0xb6, 0xf9, 0x5e, 0x52, 0xc9, 0x78, 0xcd, 0x61, 0x24,
	0xaa, 0xe2, 0x6c, 0x6b, 0x8e, 0x74, 0x15, 0xcc, 0xbd, 0x89, 0xaa, 0xdc, 0x68, 0x8d, 0xd2, 0x4f,
	0xce, 0x46, 0x97, 0x06, 0xe9, 0xd8, 0xe8, 0x2d, 0x78, 0x3d, 0x3a, 0x34, 0x3c, 0xf3, 0xc7, 0x29,
	0xd2, 0x35, 0x78, 0x27, 0x17, 0x6a, 0x92, 0xda, 0x4c, 0x58, 0x5f, 0x8c, 0xa5, 0x11, 0x28, 0xc9,
	0xdc, 0x98, 0xbe, 0x4a, 0x4c, 0xf0, 0x0d, 0x26, 0xd6, 0xe9, 0x2b, 0xc0, 0xb7, 0xe1, 0xad, 0xdc,
	0xc8, 0x9c, 0xba, 0xe3, 0x36, 0x79, 0x33, 0xa1, 0x7b, 0xca, 0x2d, 0x6f, 0x6f, 0x03, 0x55, 0x96,
	0x77, 0x94, 0x92, 0x14, 0x97, 0x0c, 0x6f, 0xe7, 0xa2, 0x91, 0xa0, 0xa6, 0x12, 0x16, 0x64, 0x63,
	0x49, 0xc4, 0x94, 0x52, 0x5e, 0xce, 0x51, 0x8d, 0xb1, 0x28, 0xfd, 0xc6, 0x12, 0x9c, 0x0c, 0xcf,
	0x86, 0xaa, 0xa1, 0xbb, 0x23, 0xfb, 0xa3, 0x8f, 0x84, 0x0c, 0x61, 0x71, 0x87, 0x36, 0x85, 0x53,
	0x14, 0x9b, 0x99, 0x14, 0x05, 0xeb, 0x42, 0x32, 0xb4, 0x1a, 0x10, 0xd5, 0xf8, 0x1a, 0xa4, 0x5f,
	0x06, 0x38, 0x3b, 0x09, 0x83, 0x3f, 0xbc, 0xe0, 0xf1, 0xb9, 0xaa, 0xe0, 0xc1, 0x50, 0xfc, 0xbf,
	0xfe, 0xa9, 0x85, 0xae, 0x5c, 0x2e, 0x53, 0x5d, 0x90, 0xa0, 0x46, 0x12, 0xb1, 0xe4, 0x4a, 0x45,
	0xa5, 0x61, 0x61, 0x42, 0x00, 0xaf, 0x09, 0xb8, 0x63, 0x16, 0x63, 0x51, 0x3b, 0x75, 0x12, 0xe0,
	0x52, 0x2a, 0xdd, 0xf6, 0xbd, 0x7a, 0xca, 0xba, 0x20, 0x11, 0xb1, 0xaa, 0x29, 0x0a, 0xc5, 0x29,
	0xa2, 0x5b, 0x70, 0x3d, 0x1f, 0x4e, 0x57, 0xae, 0xd5, 0x1a, 0x77, 0xc9, 0x9a, 0xa7, 0x94, 0x34,
	0x0b, 0x13, 0xb1, 0x6b, 0x8d, 0x2d, 0xb9, 0xd6, 0xde, 0xc2, 0x85, 0xd6, 0x35, 0x79, 0x53, 0x9c,
	0x41, 0x2b, 0x70, 0x29, 0x13, 0x66, 0xa3, 0x5a, 0x6d, 0x29, 0x6d, 0x71, 0x36, 0x73, 0xe7, 0xb0,
	0x5e, 0xa9, 0x68, 0x72, 0x15, 0x4f, 0xf5, 0xac, 0x95, 0x68, 0x4a, 0x45, 0x93, 0xef, 0x8a, 0xf3,
	0x99, 0x2b, 0x51, 0xeb, 0xad, 0x8e, 0x46, 0x78, 0xb0, 0x90, 0x14, 0x4d, 0x4d, 0xc4, 0x61, 0x2b,
	0xc5, 0x6e, 0x5b, 0x93, 0xeb, 0xad, 0xaa, 0xa2, 0xb5, 0x92, 0xe7, 0x70, 0x4a, 0x7d, 0x6c, 0xc7,
	0x06, 0x0f, 0x83, 0xb8, 0x98, 0x14, 0x4f, 0x99, 0x8c, 0xc7, 0xd5, 0xbc, 0x94, 0x59, 0xc8, 0x2a,
	0xea, 0xba, 0xda, 0x96, 0x6b, 0xdd, 0xbb, 0x72, 0xad, 0xa6, 0xb4, 0xc5, 0xa3, 0x99, 0x87, 0xdc,
	0x43, 0x64, 0x85, 0xc5, 0x63, 0x99, 0x99, 0x5b, 0x6f, 0x36, 0xf1, 0x6a, 0x57, 0xad, 0x88, 0x4f,
	0x64, 0x9e, 0x7c, 0x18, 0x47, 0xa9, 0xcb, 0x6b, 0x35, 0xa5, 0x22, 0x8a, 0xd9, 0xdb, 0xd8, 0xa8,
	0xcb, 0xed, 0x80, 0x4b, 0xe2, 0x71, 0x7e, 0x07, 0x6d, 0xfc, 0x60, 0xaa, 0xb5, 0x9a, 0xb7, 0x24,
	0x17, 0x51, 0x92, 0x3f, 0x97, 0xac, 0x23, 0x1a, 0x9b, 0xcd, 0x9a, 0x82, 0x91, 0x64, 0x6d, 0x2b,
	0xe6, 0xfa, 0xb5, 0xc4, 0x27, 0x33, 0x4b, 0x04, 0x09, 0x0a, 0x76, 0x35, 0xe5, 0x2e, 0x51, 0x1a,
	0x27, 0x32, 0xe3, 0xd5, 0x1b, 0x6d, 0xb5, 0xaa, 0x96, 0xc9, 0x56, 0x54, 0x4b, 0x3c, 0x89, 0xae,
	0xc2, 0xc5, 0x6c, 0xd3, 0x8a, 0x58, 0x8f, 0x53, 0xd2, 0x37, 0xe6, 0xe0, 0x78, 0x54, 0x65, 0x1a,
	0xe4, 0xc4, 0x6b, 0xaf, 0x67, 0x8f, 0xf4, 0x41, 0x10, 0x8b, 0x66, 0x67, 0x29, 0xa3, 0xf0, 0x68,
	0x58, 0xae, 0x90, 0x25, 0x2c, 0x57, 0xcc, 0x6e, 0x87, 0x4a, 0x39, 0xec, 0xd0, 0xcc, 0xa4, 0xb0,
	0xdc, 0xec, 0xb8, 0xb0, 0xdc, 0x5c, 0x3c, 0x2c, 0xc7, 0x1f, 0x7a, 0x9d, 0x8f, 0x9c, 0xd5, 0xbd,
	0x0d, 0x0b, 0x5e, 0x2c, 0xc0, 0x61, 0x81, 0xb1, 0x2b, 0xb9, 0xe2, 0x11, 0x5a, 0x80, 0x8f, 0x3e,
	0x45, 0x62, 0x61, 0xc4, 0x4c, 0x02, 0x31, 0x93, 0x72, 0x46, 0x33, 0x19, 0x37, 0x91, 0x46, 0x95,
	0xed, 0x7a, 0x7a, 0x14, 0xfd, 0x7d, 0xbd, 0x45, 0x6e, 0x5f, 0x2f, 0x21, 0xc4, 0xb6, 0x94, 0x1c,
	0x62, 0xfb, 0x5a, 0x31, 0xba, 0xc3, 0x17, 0xd4, 0x81, 0x5e, 0x86, 0x97, 0xe2, 0xe2, 0x46, 0xe3,
	0x54, 0xcc, 0x25, 0xd6, 0xd4, 0x46, 0x85, 0xec, 0xa4, 0x72, 0x27, 0xc7, 0x12, 0x8b, 0x12, 0x6d,
	0x26, 0x97, 0xb1, 0x20, 0x8b, 0x02, 0xba, 0x04, 0xe7, 0xc7, 0x96, 0xbe, 0xab, 0xb6, 0x37, 0xb0,
	0x92, 0x97, 0x6b, 0x62, 0x01, 0x5d, 0x80, 0x17, 0xc7, 0x16, 0x66, 0x01, 0x3a, 0xb1, 0x38, 0xb1,
	0xa4, 0xa7, 0x02, 0x4a, 0x93, 0x7b, 0xd6, 0xd1, 0xca, 0x1b, 0x72, 0x4b, 0x11, 0x67, 0xf8, 0x23,
	0xf6, 0x89, 0x45, 0x95, 0x3b, 0x98, 0xe4, 0xec, 0xc4, 0xca, 0x3b, 0xcd, 0xaa, 0xd6, 0x20, 0x3e,
	0xed, 0x4b, 0xf0, 0xfc, 0x78, 0x8a, 0xf7, 0xd4, 0xb6, 0x38, 0x2f, 0xfd, 0xe6, 0x52, 0x74, 0xb1,
	0x58, 0x33, 0xac, 0xbe, 0x69, 0xed, 0x7e, 0x5f, 0x6d, 0x84, 0x9d, 0x83, 0x63, 0xbd, 0xe1, 0xde,
	0xbe, 0x6e, 0x9b, 0x0e, 0x93, 0x64, 0xef, 0xd0, 0x7c, 0x08, 0x8a, 0x7e, 0x4a, 0x00, 0x64, 0x5a,
	0xae, 0x61, 0x1b, 0x8e, 0xdb, 0xf4, 0x4f, 0x64, 0xb3, 0xfb, 0x22, 0x3f, 0x98, 0x69, 0xbe, 0x71,
	0xec, 0x4d, 0x7f, 0xa3, 0xc6, 0xea, 0xd0, 0x12, 0xea, 0x25, 0x6b, 0xe9, 0x41, 0x80, 0xc5, 0x05,
	0xf5, 0xb7, 0x0e, 0xaf, 0x2d, 0xb5, 0x70, 0x05, 0x5a, 0xb4, 0x46, 0x7f, 0xff, 0x6e, 0x21, 0x69,
	0xff, 0x0e, 0x1e, 0x63, 0xff, 0xee, 0x57, 0x04, 0xff, 0x4c, 0x59, 0x16, 0x16, 0x25, 0xb9, 0x40,
	0x35, 0xa5, 0x5e, 0xc1, 0xcf, 0x1a, 0x6f, 0xd4, 0xbd, 0x29, 0xda, 0xad, 0x74, 0x30, 0xb0, 0x2b,
	0x6b, 0x9a, 0x22, 0x6b, 0xd8, 0x45, 0x9f, 0x9a, 0x42, 0xe5, 0x0e, 0xdd, 0x0c, 0x97, 0xfe, 0x72,
	0x26, 0x1a, 0x58, 0x48, 0x67, 0x65, 0x92, 0x53, 0x12, 0xaa, 0x2e, 0xf4, 0x10, 0xda, 0x73, 0x4c,
	0x58, 0x9f, 0x4f, 0xc0, 0xf4, 0x37, 0xfe, 0x12, 0xb7, 0x1d, 0x27, 0x20, 0x87, 0x62, 0x55, 0x85,
	0x29, 0x6a, 0xf7, 0xfc, 0x19, 0xb1, 0x98, 0xe4, 0x1c, 0x4f, 0x40, 0x6e, 0x2a, 0x75, 0xbc, 0x54,
	0x48, 0xde, 0x71, 0x9c, 0xc4, 0xb0, 0xb1, 0x3b, 0x8e, 0x13, 0x90, 0x23, 0x3b, 0x8e, 0x53, 0x30,
	0xae, 0x2c, 0xb7, 0x36, 0x7c, 0xe9, 0x98, 0x9b, 0xa2, 0xfd, 0xbe, 0x8d, 0x98, 0x4f, 0xf2, 0x28,
	0x27, 0x20, 0xb3, 0xdd, 0x62, 0x3f, 0x64, 0x48, 0xa5, 0x67, 0x21, 0x69, 0xaf, 0x20, 0x27, 0x25,
	0x5f, 0x9a, 0x40, 0x72, 0xfc, 0xb3, 0xf5, 0xdc, 0x34, 0x2e, 0x0f, 0x2d, 0xaa, 0xc9, 0xbf, 0x3b,
	0x26, 0x44, 0xfa, 0xcb, 0xb9, 0xe8, 0x1e, 0xaf, 0xa7, 0x3c, 0xd0, 0x00, 0x9e, 0x62, 0x76, 0x81,
	0x86, 0xf0, 0xfc, 0xa6, 0x38, 0xd9, 0x2e, 0x8a, 0x24, 0xf5, 0x42, 0x4b, 0x23, 0x49, 0x2f, 0x1e,
	0x1e, 0x98, 0x7b, 0xa3, 0x3d, 0x6a, 0xc8, 0x70, 0x8b, 0x05, 0x2d, 0x04, 0x23, 0x65, 0x4c, 0x2b,
	0x28, 0x53, 0x64, 0x65, 0x38, 0x58, 0xe2, 0xc1, 0xa9, 0x9f, 0x16, 0xe0, 0x24, 0xd6, 0xa6, 0x72,
	0x60, 0xe6, 0x36, 0x0d, 0xf7, 0xfe, 0xb0, 0xcf, 0x4e, 0xb2, 0x6d, 0xe5, 0xd2, 0xaa, 0x69, 0xca,
	0x36, 0xa9, 0x02, 0x2d, 0xb9, 0x5e, 0x54, 0x87, 0x39, 0x67, 0xb4, 0x8d, 0xd1, 0x88, 0x81, 0x5c,
	0x9c, 0x78, 0x98, 0x2e, 0x5c, 0x57, 0x8b, 0xe2, 0x6a, 0x1e, 0x11, 0xf4, 0x01, 0x1c, 0x1d, 0x59,
	0xa6, 0xdb, 0xd8, 0xd9, 0x34, 0x74, 0x67, 0x64, 0x7b, 0x96, 0xf4, 0xfd, 0xc3, 0xe8, 0x58, 0x87,
	0x27, 0xac, 0x85, 0xeb, 0x91, 0xfe, 0x49, 0xcc, 0xb4, 0x8c, 0xe5, 0x07, 0x2a, 0xc3, 0xbb, 0xd1,
	0x19, 0x43, 0x27, 0x87, 0xaa, 0x68, 0xf4, 0x97, 0xdc, 0x6c, 0xd6, 0xd8, 0x22, 0xaa, 0xbb, 0xa9,
	0xb4, 0x37, 0x1a, 0x95, 0xee, 0xdd, 0x8d, 0x46, 0x8d, 0xdf, 0x0e, 0x4e, 0x38, 0x28, 0x35, 0x99,
	0x48, 0x53, 0xd1, 0x48, 0x01, 0x51, 0x90, 0xfe, 0x8f, 0x00, 0x2f, 0x64, 0xe8, 0x6b, 0xd2, 0x0a,
	0x39, 0xa8, 0xa7, 0x53, 0x57, 0xdb, 0xdd, 0x46, 0xb5, 0xbb, 0xa9, 0xc8, 0x2d, 0xbc, 0x94, 0xab,
	0x34, 0x6a, 0x35, 0x59, 0x13, 0x8f, 0x24, 0xad, 0x73, 0xd3, 0xb1, 0x9a, 0x8a, 0x56, 0xa6, 0xd1,
	0xe9, 0x84, 0xed, 0xea, 0x74, 0xb4, 0xcd, 0x46, 0xbd, 0xbd, 0x21, 0x16, 0xd0, 0x35, 0xb8, 0x92,
	0xa3, 0x85, 0xf2, 0x96, 0x58, 0x94, 0x7e, 0x7c, 0xde, 0xbf, 0x57, 0x92, 0x2c, 0x55, 0xff, 0x0f,
	0x4d, 0xfc, 0x9f, 0x9d, 0x30, 0xf1, 0x77, 0xa7, 0x99, 0x75, 0x13, 0xe6, 0x64, 0x1e, 0x35, 0xf0,
	0xd7, 0x84, 0xe8, 0xbc, 0xa5, 0xa7, 0xc6, 0xba, 0x87, 0xdf, 0xae, 0xb1, 0xb3, 0xf8, 0xdf, 0x08,
	0xb0, 0x9a, 0xbf, 0x57, 0xa8, 0x06, 0x1b, 0xe9, 0xd2, 0xd7, 0xea, 0xac, 0xe5, 0x9b, 0xd5, 0xeb,
	0x50, 0x7e, 0x0c, 0x6a, 0xdc, 0xf4, 0xfe, 0x7a, 0x01, 0x2e, 0x66, 0xe7, 0x45, 0xd2, 0x2e, 0x4b,
	0x42, 0xbd, 0xa9, 0xd3, 0x7d, 0xac, 0x32, 0x4a, 0x45, 0x0f, 0xe6, 0x7d, 0x42, 0x94, 0x38, 0x03,
	0xbe, 0xa7, 0x00, 0x12, 0x9c, 0xc0, 0x2c, 0x8d, 0x27, 0x9a, 0xe0, 0xbf, 0x95, 0x82, 0x53, 0xd8,
	0x94, 0x4f, 0x77, 0x56, 0x91, 0x0d, 0x27, 0xc3, 0x5e, 0x82, 0xbd, 0x47, 0x86, 0x9c, 0x4d, 0xfd,
	0x5b, 0x99, 0x24, 0xf3, 0xce, 0xaa, 0x9c, 0x44, 0x43, 0x4b, 0x26, 0x4d, 0x5c, 0x9b, 0x40, 0xb8,
	0x02, 0x7f, 0x25, 0x02, 0x45, 0x27, 0x60, 0x66, 0xdb, 0xd6, 0xad, 0x3e, 0x5b, 0xe5, 0xd2, 0x07,
	0x74, 0x06, 0x16, 0xc8, 0x8f, 0x7a, 0x30, 0xfb, 0x03, 0x00, 0xda, 0x80, 0xb9, 0x9e, 0x6e, 0xf7,
	0x65, 0xdb, 0x25, 0x27, 0xa6, 0x27, 0x5e, 0xd1, 0xf5, 0x7b, 0x50, 0xa6, 0x58, 0x9a, 0x87, 0x1e,
	0x3d, 0x17, 0x36, 0x1b, 0x3f, 0x17, 0xf6, 0x22, 0x1c, 0x35, 0x76, 0x76, 0x8c, 0x9e, 0x6b, 0x3e,
	0x34, 0xaa, 0xf6, 0x70, 0x8f, 0x85, 0xb1, 0xc2, 0x40, 0x4c, 0xc7, 0x07, 0xb4, 0x87, 0x2c, 0x96,
	0xc5, 0x83, 0xc8, 0x95, 0x44, 0xa7, 0xad, 0x9b, 0x83, 0xa1, 0xed, 0x5f, 0x0c, 0xe1, 0x20, 0xe4,
	0x52, 0x8e, 0xee, 0xb8, 0x9d, 0xfd, 0xbe, 0xee, 0x1a, 0x7d, 0x76, 0x62, 0x8b, 0x07, 0x25, 0x86,
	0x99, 0x12, 0x52, 0x27, 0x2c, 0x1d, 0x4a, 0xea, 0x84, 0x33, 0xb0, 0xe0, 0x9f, 0x42, 0x67, 0xb7,
	0x40, 0x02, 0x80, 0xf4, 0x47, 0xc1, 0x1d, 0xd8, 0xf1, 0xd2, 0x41, 0x06, 0x92, 0x9c, 0xba, 0xc7,
	0x12, 0xc0, 0x2e, 0x5d, 0xfb, 0x00, 0x2c, 0x24, 0xdc, 0xe6, 0x33, 0x27, 0x24, 0x61, 0x28, 0xf6,
	0x7f, 0x77, 0x0c, 0xc3, 0x91, 0xad, 0x7e, 0xd3, 0x36, 0x7b, 0xa6, 0xb5, 0xcb, 0x1d, 0x28, 0x8c,
	0xbd, 0xc0, 0xac, 0x1c, 0x3e, 0x34, 0xec, 0x87, 0xa6, 0xf1, 0x41, 0x10, 0xe1, 0xe4, 0x41, 0xe8,
	0x34, 0xcc, 0xbb, 0x86, 0xbd, 0xe7, 0xe0, 0xd7, 0x2c, 0x47, 0x80, 0xf7, 0x2c, 0xdd, 0xf6, 0xf3,
	0x31, 0x44, 0xc5, 0x06, 0xa3, 0x99, 0x7b, 0xfa, 0x2e, 0xd7, 0x17, 0xff, 0x19, 0xcb, 0xb1, 0x6b,
	0xba, 0x03, 0x2f, 0x40, 0x4b, 0x1f, 0xa4, 0x5f, 0x9f, 0xf1, 0xa9, 0xb5, 0x7a, 0xf7, 0x8d, 0xfe,
	0x68, 0x60, 0xf4, 0xd9, 0xa2, 0x1c, 0x55, 0xa1, 0xb4, 0x83, 0x05, 0x2a, 0x93, 0xfd, 0x8d, 0x62,
	0x63, 0xa9, 0xd3, 0x08, 0x7e, 0xe8, 0xde, 0x47, 0x21, 0x72, 0xef, 0x83, 0x5e, 0x99, 0x37, 0x0c,
	0xcd, 0xd8, 0x31, 0x6c, 0x23, 0x48, 0xac, 0x10, 0x81, 0x7a, 0xe5, 0xec, 0xa0, 0x5c, 0x70, 0xb5,
	0x9e, 0x83, 0xa2, 0xf7, 0x01, 0xd8, 0x05, 0x9a, 0x96, 0xe1, 0x4d, 0xbe, 0x6b, 0xf9, 0x5a, 0xde,
	0x32, 0x5c, 0x8d, 0x23, 0x82, 0xee, 0x01, 0xd8, 0x06, 0x8b, 0xfa, 0x1a, 0xcc, 0x73, 0xbe, 0x9e,
	0x8f, 0xa4, 0xe6, 0xe3, 0x6b, 0x1c, 0x2d, 0x74, 0x15, 0x90, 0x13, 0x29, 0xa9, 0xf6, 0xd9, 0xfc,
	0x4d, 0x78, 0x83, 0xfa, 0x30, 0xeb, 0xd0, 0x1c, 0x27, 0x34, 0x4e, 0x54, 0xcb, 0xd7, 0x8a, 0xd4,
	0x0e, 0xd3, 0x8c, 0x27, 0x8c, 0xb6, 0xf4, 0x0b, 0xc1, 0x1d, 0xe0, 0xe4, 0x92, 0x7c, 0x6c, 0xb6,
	0x55, 0xde, 0x50, 0x2a, 0x9d, 0x9a, 0x52, 0xf1, 0x83, 0x2a, 0x2c, 0xaf, 0x88, 0x5c, 0x6e, 0xab,
	0x77, 0xb0, 0x85, 0xe5, 0xe2, 0xa8, 0xa9, 0x85, 0x5b, 0xb7, 0xd5, 0xa6, 0x28, 0xa0, 0x2b, 0xf0,
	0xf2, 0xc4, 0xa2, 0x6a, 0x9d, 0x51, 0x2e, 0x48, 0x37, 0xfd, 0xb5, 0x6b, 0x92, 0xf0, 0x8d, 0x4f,
	0xa7, 0x20, 0xf5, 0xfc, 0xdb, 0x57, 0x51, 0x64, 0x12, 0x9b, 0x7a, 0xa8, 0x0f, 0xb0, 0x66, 0xed,
	0xeb, 0x8f, 0x54, 0xcb, 0x03, 0x78, 0xb7, 0x61, 0x43, 0x40, 0x32, 0xe7, 0xbc, 0x02, 0x4c, 0xba,
	0xbd, 0x67, 0xe9, 0x8f, 0xe6, 0xfc, 0x73, 0x96, 0xe9, 0x22, 0x81, 0xb6, 0x01, 0x8c, 0x87, 0x24,
	0xb9, 0x87, 0x63, 0xf4, 0xd9, 0x6c, 0x5b, 0x9b, 0x56, 0xc0, 0x14, 0x9f, 0x92, 0xc6, 0x51, 0x45,
	0x2e, 0x88, 0x5e, 0xab, 0x3c, 0x5c, 0x76, 0x71, 0x77, 0x63, 0xda, 0x9a, 0xd4, 0x08, 0x3d, 0x2d,
	0x56, 0x03, 0x32, 0xa8, 0xcd, 0xb8, 0x6b, 0x18, 0x0f, 0x2a, 0xfa, 0x23, 0x96, 0x59, 0xa1, 0x3c,
	0x6d, 0x85, 0x35, 0x46, 0xaa, 0xaf, 0x3f, 0xd2, 0x78, 0xba, 0xe8, 0x02, 0x3c, 0x61, 0x19, 0x07,
	0x7e, 0x30, 0x31, 0x48, 0xbc, 0x11, 0x05, 0xa3, 0x2d, 0x98, 0x1b, 0x5a, 0x3d, 0xa3, 0xb1, 0xb3,
	0x43, 0xd4, 0xea, 0xe2, 0xea, 0xbb, 0xd3, 0x36, 0xa6, 0x41, 0xc9, 0x68, 0x1e, 0x3d, 0xf4, 0x15,
	0x01, 0x9e, 0x08, 0xe6, 0x76, 0x87, 0xbb, 0x8e, 0x61, 0x4e, 0x5b, 0x47, 0x06, 0x75, 0x12, 0xae,
	0x50, 0x8b, 0xb6, 0x40, 0xfa, 0xc3, 0x02, 0xbc, 0x92, 0x97, 0x0a, 0xbf, 0x5e, 0x8e, 0xcf, 0x43,
	0x4d, 0x29, 0x77, 0x34, 0x4d, 0xa9, 0x97, 0x15, 0xfe, 0x27, 0xcb, 0xd9, 0xd0, 0xc0, 0xbf, 0x1b,
	0xd5, 0xaa, 0x78, 0x84, 0xf7, 0xd3, 0x73, 0x12, 0x21, 0x71, 0xda, 0x3b, 0x72, 0xcd, 0xc7, 0x13,
	0x05, 0x3e, 0x7c, 0x96, 0x93, 0x5a, 0x4d, 0x6e, 0xb5, 0xbb, 0x77, 0x15, 0xe5, 0x36, 0x71, 0x40,
	0x0b, 0xa8, 0x0a, 0x6b, 0x53, 0x52, 0x22, 0xdb, 0x38, 0xdd, 0x35, 0xb9, 0xa5, 0x54, 0xc4, 0xa2,
	0xd4, 0xf0, 0x63, 0x10, 0x59, 0x26, 0x63, 0xd4, 0x91, 0x13, 0x62, 0x8e, 0x9c, 0xf4, 0x3f, 0x67,
	0xe1, 0x5a, 0xee, 0x49, 0x87, 0x2e, 0x82, 0xb8, 0x63, 0xd2, 0xab, 0xda, 0xbe, 0xf0, 0xb3, 0x9d,
	0xda, 0x28, 0x1c, 0xb5, 0x61, 0xc1, 0x9b, 0xa2, 0xce, 0x72, 0x81, 0xd8, 0xc6, 0x37, 0xf2, 0xc9,
	0xa6, 0x57, 0xbd, 0x16, 0x10, 0x42, 0xbf, 0x2b, 0xc0, 0x53, 0xd6, 0xd0, 0x5a, 0x1b, 0x39, 0xa6,
	0x65, 0x38, 0x4e, 0x45, 0x7f, 0xd4, 0xb6, 0x0d, 0xdd, 0xc5, 0xc5, 0x59, 0xae, 0x8a, 0x2f, 0x09,
	0x87, 0xa5, 0x63, 0xf2, 0x63, 0xd4, 0x93, 0x5b, 0xa6, 0xa5, 0x35, 0x19, 0xbb, 0x72, 0xcc, 0xf8,
	0x3b, 0x9a, 0xb1, 0xa7, 0x9b, 0x96, 0x69, 0xed, 0x12, 0x75, 0x32, 0xa3, 0xc5, 0x5f, 0x48, 0xbf,
	0x51, 0x84, 0x8d, 0xc3, 0x6a, 0x13, 0xfa, 0x14, 0xdc, 0xcd, 0x24, 0x9a, 0xb1, 0x09, 0xd2, 0xad,
	0x37, 0xea, 0xfe, 0xc1, 0x45, 0x2c, 0xe7, 0xdd, 0xb6, 0xa6, 0xc8, 0x6d, 0x82, 0x27, 0x57, 0xdb,
	0x0a, 0x5e, 0x32, 0xfe, 0x20, 0xdc, 0x3b, 0x7c, 0xe2, 0x6b, 0x4a, 0xb5, 0xa1, 0xe1, 0xf9, 0x79,
	0x0f, 0xda, 0x87, 0x4f, 0xbd, 0x51, 0x17, 0x0b, 0xe8, 0x93, 0x70, 0xe7, 0xbb, 0x41, 0xb9, 0x86,
	0x17, 0xa3, 0xff, 0x63, 0x11, 0x2e, 0xe7, 0x31, 0x3b, 0xb9, 0x66, 0xdb, 0x18, 0xc7, 0x00, 0xfd,
	0xac, 0x10, 0xb7, 0x8c, 0xc7, 0x56, 0x3f, 0x7b, 0x08, 0x96, 0x31, 0x57, 0xe1, 0x5a, 0xd0, 0x84,
	0xb0, 0x45, 0xfd, 0xd6, 0x98, 0x39, 0x4d, 0x8f, 0xf1, 0xfd, 0xb8, 0xf0, 0x61, 0x37, 0xf6, 0x70,
	0x66, 0xf2, 0x4c, 0xda, 0x4c, 0xfe, 0xe7, 0x25, 0x78, 0x73, 0x4a, 0xde, 0xf1, 0x51, 0xa4, 0xb1,
	0x32, 0xea, 0xdb, 0x22, 0x2c, 0x8d, 0x21, 0xc3, 0xd4, 0xdd, 0x6c, 0xd4, 0xc3, 0xe1, 0xa8, 0x69,
	0x09, 0xb5, 0x3b, 0x78, 0x3e, 0x1e, 0x02, 0xa1, 0xbb, 0x4a, 0x45, 0x2c, 0x1c, 0x4a, 0x8b, 0x36,
	0x3a, 0x62, 0xf1, 0x30, 0x08, 0x55, 0x35, 0x55, 0x2c, 0x1d, 0x06, 0xa1, 0x96, 0xdc, 0x16, 0x67,
	0x0e, 0x85, 0x50, 0xa7, 0x2e, 0xce, 0x4a, 0x7f, 0xaf, 0x08, 0xe5, 0x43, 0x90, 0x64, 0x74, 0x07,
	0xb4, 0xfc, 0x0d, 0xca, 0xa0, 0xfa, 0xef, 0x42, 0xeb, 0x50, 0xe9, 0xfa, 0x5a, 0x9f, 0xbb, 0xef,
	0x71, 0x28, 0x84, 0x89, 0xc2, 0xef, 0xc0, 0xfb, 0x87, 0x4c, 0x94, 0xe8, 0xfa, 0x9a, 0xbf, 0xb5,
	0x3f, 0xd1, 0xa9, 0x27, 0x79, 0x39, 0x63, 0x1a, 0x9e, 0x07, 0x49, 0xdf, 0x12, 0xe0, 0x74, 0x7a,
	0xfc, 0x60, 0x9a, 0x24, 0x8a, 0xe8, 0x2a, 0x20, 0xd3, 0xa1, 0xf9, 0x51, 0xca, 0xec, 0x98, 0x8b,
	0x41, 0xa3, 0x8e, 0xf3, 0x5a, 0xc2, 0x1b, 0xf4, 0x1e, 0x14, 0xdc, 0x21, 0xd1, 0xc6, 0x13, 0xb3,
	0xd5, 0x45, 0x9b, 0xd8, 0x1e, 0x6a, 0x05, 0x77, 0x28, 0xfd, 0xe1, 0x8c, 0x7f, 0x7c, 0x28, 0x5e,
	0x62, 0x42, 0x3a, 0x42, 0x19, 0x66, 0x69, 0xaa, 0x46, 0xb6, 0x8c, 0x7c, 0x79, 0x42, 0x06, 0xca,
	0x20, 0x2f, 0xa4, 0xc6, 0x10, 0xd1, 0x3a, 0xcc, 0xf7, 0x59, 0x92, 0x31, 0xb6, 0x34, 0xbc, 0x94,
	0x23, 0xa9, 0x99, 0xe6, 0x23, 0xa3, 0x3b, 0x70, 0xd4, 0xe4, 0xd3, 0x16, 0x65, 0x63, 0x4a, 0x3c,
	0xd3, 0x91, 0x16, 0x26, 0xc3, 0x27, 0x25, 0x99, 0x09, 0x27, 0x25, 0x79, 0x00, 0x73, 0xee, 0x90,
	0x5f, 0xe3, 0xbd, 0x9f, 0x77, 0x00, 0xd2, 0xdf, 0xb4, 0x29, 0x61, 0xcd, 0xab, 0x41, 0xfa, 0xe5,
	0x82, 0x7f, 0xaa, 0x3d, 0xb5, 0x34, 0xbf, 0x01, 0x18, 0x9f, 0x35, 0xed, 0x06, 0xfe, 0x17, 0x4e,
	0xe3, 0xd7, 0x55, 0x2b, 0xe1, 0x4b, 0xae, 0x13, 0xd0, 0x68, 0x5e, 0x13, 0xb5, 0x12, 0xde, 0x35,
	0x9c, 0x80, 0xe4, 0x27, 0x52, 0x09, 0xed, 0x1a, 0x4e, 0x40, 0x62, 0x69, 0x53, 0x42, 0x19, 0x22,
	0x26, 0xa0, 0x84, 0xf3, 0xb1, 0x94, 0xa4, 0x2f, 0x95, 0x7c, 0xc9, 0x6e, 0x1b, 0xf6, 0x1e, 0x4b,
	0x17, 0xe0, 0xe5, 0x97, 0x7a, 0x11, 0x8e, 0x0e, 0x86, 0xfd, 0x5d, 0x23, 0x32, 0xc1, 0xc3, 0x40,
	0x74, 0x0e, 0x8e, 0xed, 0xe9, 0xee, 0xc8, 0x36, 0xdd, 0x47, 0x2c, 0x9f, 0x11, 0x8b, 0xfd, 0x86,
	0xa1, 0x24, 0xef, 0x28, 0x83, 0x44, 0x92, 0x4d, 0xc5, 0xe0, 0x74, 0xdf, 0x91, 0xc2, 0xb8, 0x30,
	0x45, 0x08, 0x86, 0xbe, 0x2c, 0xc0, 0x09, 0x0f, 0xa0, 0x5a, 0x8e, 0x6b, 0x8f, 0x7a, 0x74, 0x1f,
	0x94, 0x6e, 0x1f, 0xfe, 0xd0, 0x78, 0x49, 0x8b, 0x77, 0x37, 0xfd, 0xcd, 0x66, 0x42, 0x2d, 0x5a,
	0x62, 0xdd, 0xd2, 0x6f, 0x09, 0x70, 0x25, 0x17, 0x1d, 0xfe, 0x5a, 0x4e, 0x5b, 0xd1, 0x36, 0xfd,
	0x94, 0x00, 0x9e, 0xf8, 0x6d, 0xca, 0xed, 0x8e, 0xa6, 0xb6, 0xb7, 0xba, 0x6a, 0xbd, 0xd5, 0xd6,
	0x3a, 0xe4, 0xdc, 0x67, 0xab, 0xab, 0x35, 0x6a, 0x78, 0x90, 0xc9, 0x65, 0xa2, 0x23, 0xfc, 0x51,
	0x97, 0x1c, 0x34, 0x9a, 0xb2, 0x5a, 0xe9, 0x36, 0x3a, 0xed, 0xae, 0x1c, 0x94, 0x10, 0x05, 0xe9,
	0x77, 0x17, 0xfc, 0x2c, 0x3c, 0xed, 0xe0, 0x88, 0xeb, 0x04, 0x35, 0x17, 0x28, 0xf2, 0x42, 0x48,
	0x91, 0x3f, 0x07, 0xa0, 0xef, 0xf7, 0x74, 0x96, 0xd0, 0x8d, 0x0e, 0x37, 0x07, 0x89, 0xe4, 0xbe,
	0x2d, 0x4d, 0xc8, 0x7d, 0x3b, 0x93, 0x96, 0xfb, 0x76, 0xd6, 0xcf, 0x7d, 0x1b, 0x32, 0x1d, 0x73,
	0x11, 0xd3, 0x11, 0x09, 0x2e, 0xcc, 0xc7, 0x77, 0x89, 0x2e, 0xc3, 0x71, 0xe3, 0xc0, 0xe8, 0x8d,
	0xbc, 0x74, 0x4d, 0x24, 0x6f, 0x2b, 0x3d, 0xf3, 0x17, 0x7f, 0x81, 0x4b, 0x9b, 0x0e, 0x4d, 0xc8,
	0x20, 0x7b, 0x09, 0x8e, 0xc9, 0x8e, 0xcf, 0xbc, 0x16, 0x7f, 0x81, 0x56, 0xe1, 0xc4, 0x9e, 0x61,
	0xf7, 0xee, 0xeb, 0x96, 0xbf, 0x3d, 0x43, 0x7a, 0x4d, 0xf7, 0x81, 0x12, 0xdf, 0x91, 0x89, 0xc0,
	0xe0, 0x84, 0x03, 0x4b, 0x6c, 0x22, 0x70, 0x30, 0x92, 0xa4, 0x77, 0xe8, 0xb8, 0x58, 0xf1, 0x7b,
	0x2d, 0x3e, 0xca, 0x92, 0xf4, 0x86, 0xc1, 0x78, 0x0c, 0x6d, 0x7f, 0x63, 0x80, 0xe6, 0xf8, 0x0a,
	0x00, 0xe8, 0x93, 0x7e, 0xd8, 0x9c, 0xe6, 0xf4, 0x9a, 0x10, 0x5b, 0xe5, 0x84, 0x23, 0x01, 0x14,
	0x0e, 0x96, 0x63, 0x55, 0xc2, 0x9d, 0x97, 0x56, 0xfb, 0xcb, 0x22, 0x55, 0x25, 0x21, 0x20, 0x6a,
	0xb3, 0x1c, 0x56, 0xc7, 0x49, 0xfd, 0xef, 0x3d, 0x4e, 0xfd, 0x41, 0x3e, 0x2b, 0x5c, 0xf7, 0x43,
	0x7d, 0x40, 0x73, 0x0a, 0x13, 0xee, 0x20, 0x5a, 0x77, 0x08, 0x28, 0x99, 0xfe, 0xe9, 0xed, 0x58,
	0x2f, 0xf8, 0x83, 0xcb, 0xdc, 0xe9, 0x6b, 0x2f, 0xd4, 0xde, 0xa4, 0x07, 0xc9, 0xc4, 0x23, 0xfc,
	0x71, 0xe4, 0xa4, 0x72, 0x8d, 0x56, 0x9b, 0xa4, 0x10, 0xff, 0xf3, 0x82, 0x7f, 0xae, 0x2b, 0xd2,
	0x62, 0x74, 0x16, 0xce, 0x24, 0x51, 0xf0, 0x92, 0x1a, 0x88, 0x47, 0xf8, 0xe0, 0x7f, 0xac, 0x84,
	0x7f, 0x72, 0xb3, 0xbc, 0x21, 0x6b, 0xeb, 0xb8, 0x2e, 0x3e, 0x4f, 0x68, 0x7a, 0x71, 0xac, 0x09,
	0xc4, 0x02, 0x7f, 0x27, 0x22, 0x56, 0xd6, 0xbb, 0x43, 0x83, 0x15, 0xc6, 0x7a, 0x03, 0x77, 0xb7,
	0x98, 0xad, 0x3c, 0xb9, 0x30, 0x89, 0xcb, 0x97, 0xf8, 0x1c, 0x61, 0xb1, 0xf2, 0xde, 0x81, 0xf2,
	0x19, 0x7e, 0x23, 0x24, 0x56, 0xaa, 0xa2, 0x6a, 0x0a, 0xc9, 0xa1, 0xb2, 0xa6, 0xb6, 0xc5, 0x59,
	0x24, 0xc1, 0x73, 0xa9, 0x45, 0xe9, 0xc5, 0x8d, 0x39, 0xe9, 0x74, 0xd2, 0xb8, 0xb2, 0x24, 0x2a,
	0xff, 0x7e, 0xc6, 0x4f, 0xf8, 0x19, 0x7b, 0xa9, 0x1c, 0xb8, 0x86, 0xd5, 0x37, 0xfa, 0x15, 0xdd,
	0xd5, 0xd1, 0xcf, 0x08, 0x70, 0xcc, 0xc0, 0x00, 0xc7, 0x1c, 0x5a, 0xd4, 0x9f, 0x11, 0x88, 0x8c,
	0x5a, 0x99, 0x65, 0x34, 0x4e, 0x35, 0x53, 0x21, 0x25, 0x54, 0xab, 0x16, 0x69, 0x05, 0x3a, 0x41,
	0xb2, 0x31, 0x1b, 0xfe, 0x6e, 0x25, 0x79, 0xf0, 0xa0, 0x9e, 0xc2, 0xa5, 0x0f, 0xe8, 0xff, 0x17,
	0x60, 0x8e, 0x7d, 0x16, 0x81, 0x05, 0x27, 0x76, 0xbf, 0xdb, 0xad, 0x6f, 0xd1, 0xea, 0x34, 0xaf,
	0x5e, 0x64, 0xc1, 0xd1, 0x83, 0xd5, 0xfd, 0x6b, 0xaf, 0x5c, 0x6b, 0xea, 0x8f, 0x06, 0x43, 0xbd,
	0xcf, 0xb6, 0x17, 0x36, 0x1e, 0xa3, 0x21, 0xf7, 0x78, 0x7a, 0x5a, 0x98, 0xbc, 0xf4, 0xf9, 0xe0,
	0xf0, 0x4c, 0x0e, 0x36, 0xf3, 0x41, 0x79, 0x5e, 0xb0, 0x2a, 0x4a, 0x5b, 0x56, 0x6b, 0x5d, 0xe5,
	0x5e, 0x5b, 0xa9, 0x57, 0x94, 0x4a, 0xb7, 0x22, 0xb7, 0x65, 0xfa, 0x44, 0xee, 0x33, 0x33, 0x27,
	0xeb, 0xde, 0x6a, 0xf3, 0xda, 0x2b, 0xd7, 0xb0, 0x44, 0xd7, 0x1a, 0x72, 0x45, 0x3c, 0x22, 0x3d,
	0xf0, 0x43, 0xe0, 0x59, 0x98, 0xc5, 0x1f, 0x3a, 0x99, 0x58, 0x79, 0x4b, 0xd1, 0xee, 0xa8, 0x65,
	0x5c, 0x67, 0x17, 0x57, 0x2a, 0x1e, 0x91, 0x7e, 0x51, 0xf0, 0xc3, 0xe3, 0xd9, 0xd9, 0x86, 0xed,
	0xac, 0x61, 0xf5, 0xdb, 0x43, 0xc5, 0xea, 0xfb, 0xe6, 0x9d, 0x83, 0xa0, 0x57, 0xe0, 0x49, 0xc3,
	0x43, 0x8e, 0x65, 0x2f, 0x4c, 0x7a, 0x45, 0xd6, 0x86, 0x23, 0x7b, 0x7f, 0xe8, 0x18, 0xc4, 0xc8,
	0xb1, 0x34, 0x7a, 0x1c, 0x48, 0xfa, 0xab, 0x02, 0xa0, 0xf2, 0x70, 0x6f, 0x6f, 0x68, 0x29, 0x7b,
	0xd8, 0x50, 0x4e, 0xcc, 0xc8, 0x7a, 0x16, 0x16, 0x4d, 0xa7, 0x49, 0x0c, 0x96, 0x6d, 0xd0, 0x34,
	0xe6, 0xf3, 0x1a, 0x0f, 0x42, 0x9f, 0x86, 0x39, 0x56, 0x03, 0x0b, 0x15, 0xa6, 0x6d, 0xa2, 0xc5,
	0xeb, 0x4d, 0x00, 0x35, 0x29, 0x29, 0xcd, 0xa3, 0x29, 0xfd, 0xa6, 0x00, 0x4f, 0xa7, 0x16, 0xc3,
	0xda, 0xbf, 0xdc, 0xd8, 0xdc, 0x6c, 0xd4, 0x69, 0x5a, 0xe7, 0xae, 0x5c, 0xa9, 0x68, 0x78, 0x99,
	0xdd, 0xec, 0x68, 0xcd, 0x46, 0x4b, 0xe9, 0xde, 0x6d, 0x68, 0xb7, 0xa9, 0x91, 0x18, 0x5b, 0x6c,
	0xa3, 0xb1, 0xa9, 0x88, 0x02, 0xb6, 0x39, 0x63, 0x8b, 0x51, 0xfd, 0x56, 0x40, 0x97, 0xe1, 0xc2,
	0xd8, 0x72, 0x9d, 0x7a, 0xab, 0xa9, 0x94, 0xd5, 0xaa, 0x4a, 0x76, 0x63, 0x7e, 0x7d, 0xce, 0xe3,
	0x79, 0xc3, 0xde, 0xd5, 0x2d, 0xd3, 0xa1, 0xa7, 0x3b, 0xb2, 0x7c, 0xa0, 0xe2, 0x1c, 0x1c, 0xd3,
	0x77, 0x0d, 0xcb, 0xad, 0x9a, 0xb6, 0xe3, 0x72, 0x1f, 0x2f, 0x89, 0x40, 0x49, 0x72, 0x64, 0x0c,
	0xa9, 0xe9, 0xac, 0x58, 0x89, 0x25, 0x47, 0xe6, 0x81, 0xc4, 0x9d, 0xc4, 0x00, 0x6d, 0x38, 0xf0,
	0xfc, 0xba, 0x00, 0x80, 0xdd, 0x9e, 0x6d, 0x16, 0xf9, 0xa9, 0x07, 0x5f, 0x32, 0x09, 0xc1, 0x88,
	0xab, 0xe6, 0xb8, 0xfa, 0xf6, 0xc0, 0x74, 0xee, 0xfb, 0x2b, 0x14, 0x96, 0x09, 0x36, 0xf6, 0x02,
	0x53, 0x34, 0xad, 0xfe, 0xc8, 0x71, 0x99, 0xd3, 0x45, 0x7d, 0xbf, 0x10, 0x0c, 0xaf, 0x50, 0x4c,
	0x47, 0x2e, 0xd7, 0xcb, 0x9a, 0xb1, 0x6b, 0x3a, 0xae, 0x11, 0x1c, 0xf0, 0x89, 0xc1, 0x31, 0x37,
	0x82, 0x33, 0x3d, 0xc4, 0xab, 0xa0, 0x27, 0x7d, 0x22, 0x50, 0xdc, 0x4f, 0x92, 0xed, 0xb8, 0x1e,
	0x9c, 0xf8, 0x09, 0x00, 0xe8, 0x00, 0xc4, 0x21, 0x37, 0x0e, 0xc4, 0xb0, 0x2c, 0x8d, 0x3d, 0xb3,
	0x10, 0x1f, 0xbc, 0x04, 0x50, 0x23, 0x42, 0x53, 0x8b, 0xd5, 0x82, 0xb9, 0x67, 0xfb, 0xbd, 0x29,
	0xb3, 0x24, 0xc5, 0x2c, 0x4b, 0x6c, 0xec, 0x05, 0xee, 0x85, 0x73, 0x7f, 0x68, 0xd3, 0xf1, 0x64,
	0x8e, 0xa3, 0x0f, 0x90, 0xbe, 0x53, 0x00, 0x69, 0x72, 0x23, 0xf0, 0xd2, 0x9b, 0x49, 0x6a, 0x43,
	0x5b, 0x97, 0xeb, 0x6a, 0x8b, 0x9e, 0x11, 0x0c, 0x3d, 0xd0, 0x9c, 0x05, 0x8d, 0x1a, 0x71, 0x20,
	0x2a, 0x64, 0x71, 0x73, 0x0d, 0xae, 0x64, 0x43, 0x2b, 0x37, 0x36, 0x9b, 0x72, 0x7d, 0x4b, 0x14,
	0xb2, 0xd7, 0xd4, 0x94, 0xb5, 0x76, 0x5d, 0xd1, 0x5a, 0x1b, 0x6a, 0x53, 0x2c, 0xa0, 0x15, 0xb8,
	0x94, 0x0d, 0xad, 0xad, 0x75, 0x5a, 0x6d, 0x9a, 0x40, 0x22, 0x1b, 0xc2, 0x3a, 0x5e, 0xa8, 0xd5,
	0xc9, 0x7a, 0x5c, 0xa9, 0xb7, 0x55, 0x72, 0xcd, 0x23, 0x73, 0x6d, 0x74, 0xa6, 0xcf, 0x60, 0x4f,
	0x26, 0xce, 0x65, 0xe6, 0xc9, 0xfc, 0xa3, 0x39, 0x10, 0xe9, 0xcb, 0xa6, 0x5c, 0xf5, 0x34, 0xe9,
	0x8b, 0x70, 0x74, 0x7b, 0x64, 0x0e, 0xfa, 0xa6, 0xb5, 0x8b, 0xc7, 0xe9, 0x9a, 0xb7, 0x7e, 0x0f,
	0x01, 0xa3, 0xa5, 0x56, 0xbd, 0xac, 0xff, 0x21, 0x20, 0x42, 0x50, 0xea, 0xef, 0x9b, 0xde, 0xe9,
	0x3e, 0xf2, 0x1b, 0xcf, 0x81, 0x9d, 0x81, 0xee, 0x76, 0x2c, 0xd3, 0x0d, 0xa5, 0x12, 0x8f, 0x40,
	0xf1, 0xdc, 0xf3, 0x20, 0x6d, 0x2f, 0x45, 0xed, 0x82, 0x16, 0x82, 0x91, 0x1d, 0xa3, 0xc1, 0x70,
	0x68, 0xd7, 0x8c, 0x87, 0xc6, 0x20, 0x94, 0x5b, 0x3c, 0x06, 0xa7, 0xf5, 0x7a, 0x30, 0x42, 0x71,
	0xce, 0xab, 0x97, 0x87, 0xe2, 0x7a, 0x07, 0xc3, 0x9e, 0x3e, 0x30, 0x5d, 0xfa, 0xb1, 0x25, 0x36,
	0xe7, 0x79, 0x18, 0x99, 0x9f, 0x43, 0xaf, 0xf9, 0x0b, 0x6c, 0x7e, 0x7a, 0x00, 0xbc, 0x64, 0xc3,
	0x6b, 0x28, 0x7d, 0x50, 0x31, 0x06, 0xe6, 0x43, 0xc3, 0x7e, 0xc4, 0x0a, 0x02, 0xd9, 0x1d, 0x49,
	0x7c, 0x87, 0xde, 0x81, 0xd3, 0x49, 0x70, 0x6c, 0xa4, 0xcc, 0x03, 0xa6, 0x02, 0xc6, 0x94, 0x48,
	0xc3, 0x6f, 0x8d, 0x76, 0x30, 0xfe, 0x52, 0x3a, 0x3e, 0x2d, 0x81, 0xae, 0x02, 0x0a, 0xbf, 0x25,
	0x1c, 0xa2, 0x53, 0x3b, 0xe1, 0x0d, 0x5e, 0x30, 0x63, 0x68, 0x0f, 0x6b, 0x45, 0x3a, 0xb5, 0xfd,
	0x67, 0xec, 0x48, 0xe2, 0x05, 0x1c, 0xcd, 0xf2, 0xbc, 0xa0, 0xd1, 0x07, 0xec, 0x2c, 0x38, 0xae,
	0x6d, 0x18, 0x54, 0x1d, 0xd0, 0x95, 0x1c, 0x07, 0xc1, 0x7c, 0xa7, 0x4f, 0xac, 0xcd, 0xc7, 0x29,
	0xdf, 0x79, 0x58, 0x40, 0x83, 0xb4, 0x0e, 0xf1, 0x34, 0x48, 0xab, 0x5e, 0x81, 0x27, 0xdd, 0xfb,
	0x43, 0x7b, 0x38, 0xda, 0xbd, 0xbf, 0xa3, 0x7b, 0x89, 0xe5, 0xaf, 0x2d, 0x3f, 0x49, 0x18, 0x9f,
	0xf4, 0x0a, 0xdd, 0x82, 0xa7, 0x13, 0xc0, 0xac, 0x09, 0x27, 0x48, 0x05, 0xe9, 0x05, 0x92, 0xeb,
	0x5b, 0x5d, 0x3e, 0x99, 0x56, 0xdf, 0x6a, 0x72, 0x7d, 0xab, 0xac, 0xbe, 0x53, 0x69, 0xf5, 0xb1,
	0x02, 0xd2, 0x9f, 0x0b, 0xb0, 0xc4, 0x26, 0xac, 0x61, 0x3b, 0x34, 0xbe, 0xb2, 0xe3, 0x5b, 0x56,
	0x16, 0x5f, 0xf1, 0x01, 0x78, 0x90, 0x06, 0x9e, 0x3d, 0x65, 0x01, 0x71, 0xef, 0x39, 0xc1, 0x14,
	0x15, 0x13, 0x4d, 0xd1, 0x59, 0x58, 0xdc, 0x33, 0xfb, 0xfd, 0x81, 0x81, 0xb1, 0x9c, 0xe5, 0x12,
	0xc9, 0x51, 0xcc, 0x83, 0x30, 0xa5, 0x61, 0xaf, 0x37, 0xda, 0x27, 0x9a, 0x85, 0x98, 0x49, 0x3a,
	0x55, 0x23, 0x50, 0x74, 0x0a, 0x66, 0xf7, 0xa9, 0x38, 0xb3, 0x8b, 0xe2, 0xf4, 0x09, 0xc3, 0x1d,
	0xda, 0x7f, 0x3a, 0x21, 0xd9, 0x93, 0x74, 0xc2, 0x73, 0x3a, 0x68, 0x5f, 0x99, 0xce, 0xfa, 0x46,
	0x09, 0x8e, 0x33, 0xf0, 0xfd, 0xa1, 0x65, 0x04, 0xf9, 0xfd, 0x75, 0xdb, 0xd0, 0xb9, 0x6f, 0x21,
	0xf9, 0xcf, 0xe4, 0xa3, 0x51, 0xd4, 0x22, 0x91, 0xd7, 0xec, 0x0a, 0x3d, 0x07, 0xc2, 0x5c, 0xf4,
	0x57, 0x48, 0x8c, 0x0d, 0x01, 0x00, 0x0b, 0xdd, 0xce, 0x68, 0x30, 0x08, 0x7f, 0xf7, 0x20, 0x80,
	0x44, 0x1d, 0xcc, 0x99, 0xb8, 0x83, 0x79, 0x0a, 0x66, 0x2d, 0x5e, 0x39, 0xb1, 0x27, 0xf4, 0xa9,
	0xc0, 0xf1, 0x9c, 0x1b, 0x7b, 0x2f, 0x3d, 0xd6, 0xe1, 0x38, 0x24, 0xe6, 0x76, 0x7e, 0xa9, 0xe0,
	0x69, 0xfe, 0x78, 0x29, 0xce, 0x4f, 0x24, 0x9f, 0x06, 0xe9, 0xd6, 0x3b, 0x9b, 0x6b, 0x8a, 0xe6,
	0xbb, 0x7f, 0x9b, 0x8d, 0x35, 0xb5, 0xa6, 0xd0, 0x04, 0xdd, 0xe3, 0xca, 0x31, 0xaf, 0x73, 0x42,
	0x29, 0xe2, 0xc2, 0x16, 0x38, 0x17, 0x36, 0xb1, 0x14, 0x35, 0x58, 0x45, 0x74, 0x05, 0x5e, 0x1e,
	0x57, 0x2c, 0x12, 0x8c, 0x46, 0x97, 0xe0, 0xfc, 0xb8, 0xe2, 0xbc, 0x23, 0x3b, 0x23, 0x7d, 0xa5,
	0x08, 0x27, 0x3d, 0x9e, 0x3c, 0x72, 0xcc, 0x9e, 0xee, 0xaf, 0x1f, 0x6c, 0x58, 0x62, 0x0b, 0x06,
	0x7e, 0xa1, 0x5e, 0x9f, 0x30, 0x1e, 0x21, 0x1a, 0xc9, 0x50, 0x99, 0xa3, 0xaa, 0x85, 0xea, 0x40,
	0x6f, 0x41, 0x71, 0x5f, 0xdf, 0x61, 0x5b, 0x3c, 0xe7, 0xc7, 0x57, 0xe5, 0xdb, 0x67, 0x0d, 0xe3,
	0xa0, 0x35, 0x98, 0x75, 0xcc, 0xbd, 0xfd, 0x81, 0xc1, 0xf6, 0x76, 0x2e, 0x8e, 0xc5, 0x6e, 0x91,
	0xa2, 0x1e, 0x01, 0x86, 0x29, 0x7d, 0x51, 0x80, 0xe7, 0x27, 0x36, 0x99, 0x73, 0xa4, 0x9a, 0x1b,
	0x5b, 0x2d, 0xb5, 0x2c, 0x07, 0x8b, 0x05, 0xef, 0x2f, 0x5b, 0xc1, 0xb6, 0xd4, 0xcd, 0x26, 0x11,
	0x9a, 0xab, 0x70, 0x31, 0x23, 0x4a, 0x53, 0xae, 0x8a, 0x82, 0x24, 0xc1, 0xd9, 0xc4, 0x76, 0xdc,
	0x35, 0xdd, 0xfb, 0x4c, 0x60, 0xa5, 0x2f, 0x14, 0xe0, 0xc9, 0x84, 0xce, 0x60, 0xab, 0xc1, 0x78,
	0x5a, 0x33, 0x2d, 0xdf, 0x59, 0x09, 0xc1, 0x22, 0x65, 0x3c, 0x57, 0x25, 0x04, 0x8b, 0x94, 0x79,
	0x95, 0x69, 0x81, 0x10, 0x0c, 0x7b, 0x33, 0x3d, 0xd3, 0xf5, 0xae, 0xd8, 0x93, 0xdf, 0x63, 0x3e,
	0x7a, 0x82, 0x15, 0xa7, 0x6e, 0x0e, 0x98, 0x2f, 0xe4, 0x5d, 0x2e, 0xe0, 0x40, 0x21, 0x1b, 0x3a,
	0x97, 0x66, 0x43, 0xe7, 0x39, 0x1b, 0x2a, 0xfd, 0x0d, 0x01, 0x9e, 0x20, 0x09, 0x2e, 0xb0, 0x1d,
	0x6e, 0x8c, 0x5c, 0x7d, 0x97, 0x50, 0xe9, 0x8f, 0x6c, 0x9d, 0x3b, 0xf8, 0xe6, 0x3f, 0x93, 0x8b,
	0x09, 0x07, 0xfb, 0x03, 0x9d, 0x6e, 0xba, 0x79, 0xaa, 0x8f, 0x03, 0x61, 0xd5, 0x67, 0x3a, 0x4d,
	0xdd, 0x76, 0x4d, 0x7d, 0xc0, 0xb6, 0x43, 0x03, 0x00, 0x56, 0x7d, 0x43, 0x52, 0x0b, 0xf7, 0x25,
	0x32, 0x0e, 0x22, 0xfd, 0xfd, 0x02, 0x3c, 0xb5, 0xee, 0x7f, 0xab, 0x82, 0x6a, 0x68, 0xcd, 0xf8,
	0xcc, 0xc8, 0x70, 0x26, 0x7d, 0x70, 0x6d, 0x05, 0x4e, 0x1c, 0x74, 0x7b, 0x7d, 0xa7, 0xdb, 0x1b,
	0x98, 0x86, 0xe5, 0x76, 0xef, 0x1b, 0x7a, 0xdf, 0xb0, 0x1d, 0xef, 0x5a, 0xeb, 0x41, 0xb9, 0xef,
	0x94, 0xc9, 0x9b, 0x0d, 0xfa, 0x02, 0x9d, 0x07, 0xf1, 0xa0, 0xbb, 0xa3, 0xef, 0x9b, 0x5d, 0x7d,
	0xe4, 0xde, 0xef, 0x62, 0xfb, 0xc4, 0x06, 0xe9, 0xe8, 0x41, 0x55, 0xdf, 0x37, 0xe5, 0x91, 0x7b,
	0x9f, 0xac, 0xd9, 0x6e, 0xc0, 0x69, 0x56, 0xb0, 0x37, 0x72, 0xdc, 0xe1, 0x9e, 0x61, 0x77, 0xcd,
	0xfd, 0xae, 0x17, 0x1c, 0xa0, 0x7d, 0x38, 0x45, 0x50, 0xca, 0xec, 0xbd, 0xba, 0xef, 0x49, 0xd3,
	0x35, 0x38, 0xc9, 0x70, 0xc9, 0x5e, 0x25, 0x8d, 0x82, 0x74, 0x4d, 0x6f, 0x87, 0x12, 0x11, 0x34,
	0x35, 0x78, 0x45, 0xf6, 0x30, 0xe6, 0x0e, 0xba, 0x7b, 0xa6, 0xd5, 0x7d, 0xc8, 0x86, 0x78, 0xe6,
	0x60, 0xd3, 0xb4, 0xee, 0xa0, 0x27, 0xa0, 0x78, 0xd0, 0x7d, 0xc8, 0xc6, 0xb5, 0x70, 0x70, 0x47,
	0xfa, 0xb9, 0x02, 0x1c, 0x5f, 0x37, 0xbc, 0x8f, 0x0c, 0x7e, 0xcc, 0xa5, 0x64, 0x2e, 0xfd, 0x54,
	0x01, 0x96, 0xd7, 0x0d, 0xd7, 0xab, 0x34, 0x2c, 0x52, 0x69, 0xec, 0x10, 0xf2, 0xb0, 0xa3, 0x90,
	0x9f, 0x1d, 0xc5, 0xe9, 0xd8, 0x51, 0xca, 0xc2, 0x8e, 0x99, 0x04, 0x76, 0xcc, 0xfa, 0xec, 0xf8,
	0x62, 0x01, 0x10, 0xc7, 0x8e, 0xef, 0x5f, 0x46, 0xdc, 0x22, 0x93, 0x87, 0xaa, 0x3c, 0xc7, 0x63,
	0x03, 0x87, 0x2d, 0x24, 0x60, 0x17, 0xf8, 0xb9, 0x77, 0x72, 0xdd, 0x70, 0xb9, 0xef, 0x83, 0x78,
	0x24, 0xb8, 0x53, 0x08, 0x42, 0xf8, 0x14, 0xc2, 0xf7, 0xdf, 0xdc, 0xfb, 0x61, 0xa2, 0xcc, 0x43,
	0x19, 0xe3, 0x39, 0x35, 0x15, 0x5c, 0x08, 0x13, 0x22, 0x17, 0xc2, 0xf8, 0x1a, 0x0a, 0x09, 0x35,
	0x14, 0xfd, 0x1a, 0x6e, 0x82, 0xb8, 0x6e, 0x78, 0x57, 0x62, 0xf2, 0x0e, 0xe2, 0x1f, 0x14, 0xe0,
	0x99, 0x75, 0xc3, 0x8d, 0xc5, 0xa7, 0xb3, 0xa9, 0xd2, 0xd8, 0x5e, 0x62, 0x21, 0x69, 0x2f, 0x31,
	0x6d, 0xd0, 0x8b, 0x79, 0x06, 0xbd, 0x94, 0x7f, 0xd0, 0x67, 0xa6, 0x1b, 0xf4, 0xd9, 0x2c, 0x83,
	0x3e, 0x97, 0xc0, 0xd5, 0x79, 0x9f, 0xab, 0xff, 0xa2, 0x08, 0xa7, 0xc2, 0x5c, 0x75, 0xb2, 0x31,
	0xf4, 0x59, 0x80, 0x3d, 0xfd, 0xa0, 0x1b, 0xda, 0xc0, 0x5f, 0xd8, 0xd3, 0x0f, 0xd8, 0xc1, 0x0d,
	0xfc, 0xda, 0xb4, 0xbc, 0xd7, 0x45, 0xff, 0x8b, 0x5c, 0xec, 0xf5, 0x27, 0x60, 0xd1, 0x32, 0x3e,
	0x30, 0x1c, 0xb7, 0xeb, 0x72, 0xae, 0x05, 0x05, 0x91, 0x75, 0xe7, 0x27, 0x60, 0x71, 0x38, 0xe8,
	0xfb, 0x05, 0xd8, 0x26, 0x3e, 0x05, 0x91, 0x02, 0x08, 0x4a, 0xfb, 0xfa, 0x2e, 0x75, 0xac, 0x66,
	0x34, 0xf2, 0x1b, 0x3d, 0x03, 0x0b, 0xf8, 0x6f, 0xd7, 0x31, 0x7f, 0x84, 0xba, 0x54, 0x33, 0xda,
	0x3c, 0x06, 0xb4, 0xcc, 0x1f, 0x21, 0x08, 0xae, 0x71, 0xe0, 0xb2, 0xbe, 0x93, 0xdf, 0x89, 0xc3,
	0xb7, 0x90, 0x7f, 0xf8, 0x60, 0xba, 0xe1, 0x5b, 0xcc, 0x32, 0x7c, 0x4b, 0x09, 0xc3, 0x77, 0xd4,
	0x1f, 0xbe, 0x67, 0x60, 0xa6, 0x66, 0x5a, 0x0f, 0xc8, 0x87, 0xe7, 0x1c, 0x63, 0xb0, 0xc3, 0xc6,
	0x89, 0xfc, 0x96, 0x1e, 0xc2, 0x31, 0xf2, 0xb2, 0xa9, 0xef, 0x9a, 0x16, 0x39, 0xd6, 0x76, 0x02,
	0x66, 0x48, 0x78, 0xc0, 0x9b, 0x6a, 0xe4, 0x01, 0xe3, 0xe2, 0x55, 0xbf, 0xf7, 0xd1, 0x3a, 0xfc,
	0x9b, 0xdc, 0x37, 0xc5, 0xdc, 0xf2, 0xbe, 0x28, 0x87, 0xb9, 0x85, 0x59, 0x6e, 0x1b, 0x0f, 0x3d,
	0x07, 0x18, 0xff, 0xf6, 0xeb, 0x9d, 0xe1, 0xea, 0xfd, 0x4f, 0x8b, 0xf0, 0x64, 0xcd, 0x74, 0x3c,
	0xbf, 0xd0, 0x17, 0xa8, 0xa7, 0x61, 0xde, 0x74, 0xba, 0x43, 0xf2, 0x95, 0x72, 0x21, 0xfc, 0x95,
	0x72, 0x13, 0x16, 0x87, 0xfb, 0x86, 0xd5, 0x65, 0x67, 0x09, 0x0a, 0x64, 0xf9, 0x95, 0xb6, 0xc1,
	0x97, 0x40, 0x3b, 0x09, 0x96, 0xf2, 0xc1, 0x71, 0x4f, 0x70, 0x8a, 0x69, 0x82, 0x53, 0x8a, 0x08,
	0xce, 0x01, 0x88, 0x4c, 0xd7, 0x75, 0x7b, 0xde, 0x3d, 0xdb, 0x99, 0xb1, 0xe9, 0x56, 0x33, 0x36,
	0x70, 0xe2, 0x3d, 0xdc, 0x34, 0x75, 0x34, 0x9b, 0x47, 0x1d, 0xcd, 0xe5, 0x97, 0xe7, 0xf9, 0xe9,
	0xe4, 0x79, 0x21, 0x8b, 0x3c, 0x43, 0x82, 0x3c, 0x2f, 0xfa, 0xf2, 0xfc, 0xf3, 0x02, 0x3c, 0x3b,
	0x76, 0x28, 0xd1, 0x45, 0x38, 0x57, 0x53, 0x5b, 0xfe, 0x31, 0xa5, 0x56, 0x57, 0x53, 0xde, 0xef,
	0x90, 0xef, 0xb3, 0xc5, 0x3f, 0xcf, 0x7e, 0x19, 0x2e, 0x4c, 0x2e, 0xeb, 0x7d, 0xa4, 0x1d, 0xbd,
	0x0c, 0x2f, 0x4d, 0x2e, 0x2d, 0xd7, 0x6a, 0x62, 0x41, 0xfa, 0xdf, 0x33, 0x20, 0x4d, 0x1e, 0x50,
	0xa4, 0x80, 0x9c, 0x4c, 0xd1, 0xff, 0x26, 0x93, 0xdc, 0x56, 0xd6, 0x1b, 0xda, 0x16, 0xdd, 0xb3,
	0x25, 0x9f, 0x8a, 0x6b, 0xc9, 0x77, 0xd4, 0xfa, 0x7a, 0xcb, 0xc7, 0xa1, 0x9f, 0xd1, 0xc9, 0x4a,
	0x86, 0x3b, 0xc8, 0xc5, 0xb2, 0xe3, 0x66, 0x6f, 0xc0, 0x1d, 0xc5, 0x4b, 0xab, 0x5b, 0x40, 0x65,
	0x78, 0x37, 0x23, 0xa2, 0xa6, 0xac, 0x77, 0x6a, 0x32, 0x49, 0xac, 0xab, 0x75, 0x38, 0x0c, 0xb1,
	0x88, 0xde, 0x83, 0x5b, 0x99, 0x89, 0xb4, 0xe8, 0x57, 0x64, 0xe5, 0x5a, 0x77, 0xb3, 0xa1, 0xb5,
	0xd7, 0xe5, 0x75, 0xa5, 0x25, 0x96, 0xd0, 0x3b, 0x70, 0x23, 0x23, 0x85, 0xb2, 0xa6, 0x54, 0x08,
	0xff, 0xca, 0x1b, 0xda, 0x3a, 0xeb, 0xc6, 0x0c, 0x7a, 0x1d, 0xae, 0x65, 0xc4, 0x6f, 0x2a, 0x5a,
	0x8b, 0x7c, 0xd0, 0xaf, 0x25, 0xce, 0xe6, 0x60, 0xdb, 0xa6, 0xac, 0xad, 0xab, 0x75, 0x86, 0x38,
	0x87, 0xae, 0xc1, 0x95, 0x8c, 0x88, 0x35, 0x45, 0x6e, 0x29, 0x2d, 0x71, 0x3e, 0xcf, 0xe0, 0x6a,
	0x72, 0x45, 0xe9, 0x56, 0xd5, 0x3a, 0xcb, 0xa5, 0x9b, 0xbd, 0x73, 0x7e, 0x9a, 0xdf, 0x96, 0x08,
	0xe8, 0x2d, 0x78, 0x3d, 0x23, 0x9a, 0x7f, 0xe6, 0x9b, 0x76, 0x6f, 0x51, 0xfa, 0xe6, 0x12, 0x3c,
	0x85, 0xc5, 0x9e, 0x2d, 0x62, 0x9d, 0xb5, 0xd1, 0xe0, 0x41, 0x06, 0xe5, 0xfe, 0x99, 0x24, 0xe5,
	0xde, 0x1c, 0xa3, 0x3b, 0x13, 0xe8, 0xa7, 0xc1, 0x0f, 0x4b, 0xc9, 0xff, 0x98, 0x90, 0xaa, 0xe5,
	0x3b, 0x87, 0xd3, 0xd2, 0x8f, 0xb5, 0x7d, 0x4c, 0xdb, 0xff, 0x9a, 0x00, 0xcf, 0x4f, 0x1c, 0x57,
	0xb4, 0x02, 0x97, 0x88, 0xc0, 0xb2, 0xc4, 0x32, 0xad, 0xee, 0x5a, 0xa7, 0x76, 0x7b, 0x9c, 0xda,
	0xf7, 0x66, 0xe1, 0x64, 0x04, 0x5f, 0xf7, 0x5f, 0x85, 0x8b, 0x19, 0x51, 0xa8, 0x01, 0xf8, 0x67,
	0xb3, 0x70, 0x2e, 0xdb, 0x38, 0xa3, 0x1f, 0x80, 0xea, 0x18, 0xd2, 0xf9, 0x2c, 0xc1, 0xdb, 0xf0,
	0x56, 0x2e, 0x5a, 0x11, 0x73, 0x70, 0x0b, 0xae, 0xe7, 0x6c, 0x0a, 0x6f, 0x13, 0x36, 0xa0, 0x92,
	0x07, 0x7b, 0x8c, 0x61, 0xf0, 0xec, 0x62, 0x66, 0x4a, 0xc9, 0xd6, 0xc1, 0x33, 0x52, 0x19, 0xc9,
	0x24, 0x9b, 0x88, 0x1b, 0xf0, 0x46, 0x1e, 0x22, 0x21, 0x3b, 0x91, 0x93, 0x9f, 0x11, 0x63, 0xf1,
	0x06, 0xac, 0xe6, 0xc1, 0xf6, 0x2d, 0x46, 0x5e, 0x21, 0x88, 0x98, 0x8d, 0x9c, 0x1d, 0x0e, 0xd9,
	0x0e, 0xcf, 0x1e, 0x67, 0xc4, 0x8d, 0x19, 0x90, 0x2f, 0x17, 0xe1, 0x05, 0x7e, 0xda, 0xb4, 0xf6,
	0x8d, 0x9e, 0xb9, 0x63, 0xf6, 0xa2, 0x2b, 0x85, 0x0d, 0x00, 0x3d, 0xf8, 0x30, 0x32, 0xcd, 0xda,
	0x70, 0x21, 0x45, 0x0d, 0x33, 0x9c, 0xe0, 0x83, 0xc9, 0x1a, 0x87, 0xeb, 0x1b, 0x82, 0x42, 0x9a,
	0x21, 0x28, 0x46, 0x0c, 0x41, 0x9a, 0x16, 0x2e, 0xe5, 0xd1, 0xc2, 0x33, 0xf9, 0xb5, 0xf0, 0xec,
	0x74, 0x5a, 0x78, 0x2e, 0x8b, 0x16, 0x9e, 0x4f, 0xd0, 0xc2, 0x0b, 0xbe, 0x16, 0xfe, 0xfa, 0x51,
	0x78, 0x06, 0x0f, 0x4a, 0xc5, 0xb4, 0x8d, 0x9e, 0x5b, 0x31, 0xb6, 0x4d, 0x37, 0xab, 0x65, 0x7f,
	0x94, 0x64, 0xd9, 0xef, 0x8d, 0xb1, 0x97, 0x29, 0x75, 0x8c, 0x7b, 0x77, 0x58, 0x16, 0xfe, 0x27,
	0xd2, 0x2d, 0xfc, 0xa7, 0x0f, 0xb7, 0xc5, 0x1f, 0x5b, 0xfa, 0x98, 0xa5, 0xff, 0x1d, 0x01, 0x5e,
	0xca, 0x34, 0xc6, 0xe8, 0x35, 0x78, 0x85, 0xa8, 0x18, 0xfe, 0xd4, 0xf6, 0x64, 0x93, 0xef, 0xe9,
	0xd2, 0x8c, 0x58, 0xbe, 0xdd, 0x7f, 0x15, 0x56, 0xf2, 0xe0, 0xb1, 0xd5, 0xdf, 0x2c, 0x5c, 0xcc,
	0x3e, 0xfc, 0xa8, 0x01, 0xb7, 0x27, 0xd5, 0x91, 0xcf, 0x0b, 0x58, 0x83, 0x77, 0xf2, 0x13, 0x8c,
	0xb8, 0x02, 0x32, 0xbc, 0x3d, 0x4d, 0xa3, 0x78, 0x7f, 0x60, 0x13, 0xd4, 0xdc, 0x24, 0xc6, 0x38,
	0x05, 0x9e, 0x9f, 0x94, 0x8f, 0x5c, 0xb2, 0x67, 0xe0, 0xb9, 0x2a, 0x79, 0x68, 0x25, 0xbb, 0x07,
	0xef, 0xc2, 0xcd, 0xdc, 0x94, 0x42, 0x3e, 0xc2, 0x34, 0x8c, 0x8e, 0x38, 0x0a, 0x37, 0xe1, 0xcd,
	0xdc, 0x24, 0x7c, 0x6f, 0x61, 0x2a, 0x61, 0x89, 0xb8, 0x0c, 0xd3, 0x30, 0x21, 0xe4, 0x37, 0x78,
	0x9e, 0x5a, 0x1e, 0x02, 0x31, 0xe7, 0xe1, 0x8f, 0x0b, 0x74, 0xf5, 0xc9, 0x4f, 0xbb, 0x6c, 0xb1,
	0xea, 0x8f, 0x9d, 0x80, 0x89, 0x4e, 0xc0, 0xcf, 0x14, 0xe1, 0x7c, 0x94, 0xb9, 0x1f, 0x7b, 0x67,
	0xdf, 0x03, 0x03, 0xf3, 0xcd, 0x12, 0x1c, 0xc7, 0x03, 0x43, 0x36, 0x2f, 0xfd, 0x21, 0xf0, 0x18,
	0x27, 0xa4, 0x31, 0xae, 0x10, 0x61, 0x9c, 0xc6, 0x6e, 0xc9, 0xd1, 0x1b, 0x0e, 0xef, 0x8c, 0x71,
	0x78, 0x42, 0x15, 0xc5, 0x21, 0xdc, 0x1d, 0xb9, 0xef, 0xbf, 0xc1, 0xf8, 0x15, 0x01, 0x4e, 0x26,
	0x72, 0x04, 0xbd, 0x04, 0xcf, 0x13, 0x0d, 0x47, 0x6e, 0x72, 0x07, 0x31, 0xb5, 0xf0, 0x45, 0xed,
	0x23, 0x7e, 0xf4, 0x3a, 0xa9, 0x58, 0xf8, 0x68, 0x9b, 0x80, 0x5e, 0x80, 0x4f, 0xa4, 0x96, 0x65,
	0xd7, 0xb8, 0x0b, 0xe8, 0x2c, 0x9c, 0x49, 0x2d, 0x84, 0xbd, 0x95, 0xa2, 0xf4, 0x75, 0xa0, 0xbb,
	0x31, 0xcc, 0x2d, 0xf1, 0x45, 0xc8, 0xcf, 0xbd, 0x2a, 0xf0, 0xb9, 0x57, 0x0d, 0x58, 0xf0, 0x13,
	0x97, 0x32, 0x7f, 0x7e, 0x7d, 0x9c, 0xb0, 0x84, 0x89, 0x26, 0xc1, 0x14, 0x8f, 0x9c, 0x16, 0x50,
	0xfe, 0xb0, 0x36, 0x61, 0x32, 0x34, 0x6f, 0xa2, 0xb3, 0xfe, 0x02, 0x1c, 0x1d, 0xd1, 0x24, 0xac,
	0x5d, 0xc7, 0xf4, 0xb2, 0x54, 0x2e, 0x68, 0x4b, 0x0c, 0xd8, 0xc2, 0xb0, 0xec, 0xfb, 0xad, 0x7f,
	0x47, 0x80, 0x33, 0xe3, 0x98, 0x84, 0x2e, 0xc1, 0x79, 0x3a, 0xa0, 0xd4, 0x1e, 0x06, 0x43, 0xaa,
	0x54, 0xab, 0x0a, 0xc9, 0xce, 0xd8, 0xa5, 0x59, 0x3a, 0xda, 0xbc, 0x38, 0xa5, 0x17, 0xae, 0x76,
	0xda, 0x1d, 0x92, 0x4f, 0xe4, 0x3c, 0xbc, 0x30, 0xa9, 0x6c, 0x78, 0x73, 0x63, 0x3c, 0xa3, 0xfc,
	0x20, 0x4e, 0x8c, 0xde, 0x74, 0x9b, 0x1b, 0x19, 0xc8, 0xa4, 0x6c, 0x6e, 0x64, 0x6a, 0x40, 0xd2,
	0xe6, 0xc6, 0x64, 0xc4, 0x0c, 0x9b, 0x1b, 0x59, 0x88, 0x8c, 0xdf, 0xdc, 0x98, 0x4c, 0x61, 0xfc,
	0xe6, 0xc6, 0x64, 0xfc, 0xc4, 0xcd, 0x8d, 0xc9, 0x68, 0x29, 0x9b, 0x1b, 0x93, 0x11, 0x63, 0x9b,
	0x1b, 0x99, 0x86, 0x28, 0x71, 0x73, 0x63, 0x32, 0x66, 0xe2, 0xe6, 0xc6, 0x64, 0xb4, 0x98, 0x7b,
	0xf9, 0xd5, 0x63, 0x70, 0x16, 0x8b, 0x7d, 0x34, 0x0d, 0x48, 0xd6, 0x58, 0xc8, 0x17, 0x84, 0xa4,
	0x60, 0xc8, 0xf6, 0x18, 0xed, 0x34, 0xae, 0xa6, 0x89, 0x05, 0x0e, 0x2b, 0x2c, 0xf2, 0xe5, 0xf4,
	0xb0, 0xc8, 0xee, 0x77, 0xab, 0xed, 0x1f, 0x07, 0x48, 0x62, 0x01, 0x92, 0x3f, 0x11, 0x68, 0x4c,
	0x21, 0xdb, 0x90, 0xfb, 0x72, 0x1e, 0x4b, 0xdd, 0x32, 0x39, 0x54, 0xe2, 0xad, 0x26, 0xf3, 0xa0,
	0xfa, 0xf1, 0x12, 0x6f, 0x42, 0xe7, 0x41, 0xa6, 0x56, 0xe5, 0x57, 0xe7, 0x60, 0x25, 0xa7, 0x5c,
	0xa0, 0x36, 0x34, 0x33, 0xd5, 0x96, 0xcf, 0xe2, 0xac, 0x43, 0x79, 0x4a, 0xaa, 0x11, 0x03, 0x54,
	0x85, 0xb5, 0xa9, 0x9b, 0xc7, 0xdb, 0x23, 0x0d, 0xea, 0xd3, 0xd1, 0x19, 0x63, 0x9e, 0xbc, 0xa0,
	0xd3, 0x14, 0x34, 0x93, 0xad, 0x95, 0x17, 0xed, 0xc9, 0x4d, 0x30, 0xd9, 0x78, 0x55, 0xe0, 0xbd,
	0xe9, 0xc8, 0x85, 0x6c, 0xd9, 0xd4, 0x23, 0x10, 0x31, 0x6d, 0x9e, 0x31, 0xcf, 0x4d, 0xc7, 0xb7,
	0x74, 0xd3, 0x0b, 0x55, 0xc4, 0xf0, 0x4d, 0xcd, 0x98, 0x90, 0x1d, 0xf4, 0x02, 0x60, 0xb9, 0xa9,
	0xc4, 0xcc, 0xe2, 0x7f, 0x29, 0x50, 0x87, 0x35, 0x36, 0x6f, 0x3f, 0x0e, 0xbd, 0x1c, 0xd2, 0xa2,
	0xf2, 0x6f, 0x15, 0xe1, 0x72, 0x22, 0x87, 0x3f, 0x8e, 0xbf, 0x7c, 0x0f, 0x8c, 0xce, 0x2c, 0x94,
	0x36, 0x0d, 0x57, 0x97, 0x5a, 0x70, 0x14, 0xff, 0x0d, 0xce, 0x52, 0x3e, 0x07, 0xe0, 0x0e, 0x5d,
	0x7d, 0xd0, 0xd4, 0x77, 0x0d, 0x87, 0x05, 0x62, 0x38, 0x08, 0x92, 0x60, 0x89, 0x3c, 0x69, 0x46,
	0x6f, 0x68, 0xf7, 0x1d, 0xc6, 0xe3, 0x10, 0x4c, 0xfa, 0xa2, 0x00, 0xc7, 0x63, 0x23, 0x84, 0xde,
	0x83, 0x12, 0x1e, 0x44, 0x36, 0xb2, 0x97, 0xb3, 0x8e, 0x6c, 0x45, 0x77, 0x75, 0x8d, 0x60, 0xa2,
	0x15, 0x28, 0xed, 0x19, 0xae, 0xce, 0xee, 0x96, 0x3d, 0x93, 0x42, 0x01, 0xf7, 0x47, 0x23, 0x05,
	0xa5, 0x37, 0xe1, 0x64, 0x22, 0x3d, 0x92, 0x8b, 0x8b, 0x97, 0xb5, 0x22, 0xc9, 0xc5, 0xe5, 0x43,
	0x48, 0xae, 0x46, 0xcd, 0x70, 0xf6, 0x87, 0x96, 0x63, 0xb0, 0x0c, 0x22, 0x8c, 0xc2, 0xda, 0x23,
	0xb5, 0x8f, 0xde, 0x0d, 0x75, 0x65, 0x42, 0x0a, 0xc2, 0xf0, 0x3d, 0x22, 0xda, 0x93, 0x55, 0x98,
	0x19, 0x98, 0xd6, 0x03, 0x87, 0x75, 0xe5, 0x4c, 0xaa, 0x4b, 0x6a, 0x3d, 0x70, 0x34, 0x5a, 0xd4,
	0xef, 0x7d, 0x31, 0x6b, 0xef, 0xff, 0x24, 0xb5, 0x13, 0x78, 0x5e, 0x22, 0x35, 0xd4, 0x89, 0xd7,
	0x53, 0xc7, 0x23, 0x8d, 0x00, 0x37, 0x30, 0x37, 0xc3, 0xdd, 0x79, 0x69, 0x5c, 0x77, 0x7c, 0x51,
	0xf3, 0xfa, 0x75, 0x3d, 0xd4, 0xaf, 0x17, 0xc7, 0xf4, 0x2b, 0x40, 0xa5, 0x1d, 0xec, 0xc1, 0x73,
	0xe3, 0x9b, 0x87, 0x64, 0x98, 0x67, 0xa3, 0x4a, 0x47, 0x39, 0xbd, 0x6d, 0x61, 0x02, 0x9a, 0x8f,
	0x26, 0x7d, 0x5b, 0x00, 0x29, 0xb9, 0x16, 0x87, 0xed, 0xf7, 0x13, 0x91, 0x78, 0x2b, 0xc4, 0xcd,
	0x09, 0xb5, 0x78, 0xd7, 0xa5, 0x3e, 0x44, 0x61, 0xf8, 0x8b, 0x89, 0xdd, 0x20, 0x42, 0xf1, 0x7e,
	0xa8, 0x1b, 0x6f, 0xe7, 0x12, 0x0a, 0x9e, 0xd0, 0x47, 0x2f, 0x1c, 0x0f, 0xe0, 0x5c, 0xb6, 0x66,
	0x62, 0x21, 0x61, 0x1f, 0xf0, 0xce, 0x28, 0x24, 0xde, 0xf0, 0xf9, 0x68, 0xd2, 0x8f, 0x15, 0xe0,
	0x52, 0xa4, 0x36, 0x6e, 0xcb, 0x01, 0x5b, 0x83, 0xa1, 0xcd, 0xb2, 0x54, 0x10, 0x36, 0x7f, 0x32,
	0xc4, 0xe6, 0x6a, 0x36, 0x36, 0x8f, 0xa3, 0xf8, 0xd1, 0xf3, 0xfb, 0x6f, 0x0a, 0xb0, 0x92, 0xb3,
	0xc1, 0x68, 0x17, 0x9e, 0xee, 0xa7, 0x94, 0xf1, 0x86, 0x62, 0x42, 0x92, 0x58, 0xae, 0x0a, 0x2d,
	0x9d, 0x96, 0xf4, 0x4d, 0x01, 0x96, 0x23, 0x8d, 0x23, 0xc1, 0x6e, 0x32, 0x75, 0xdf, 0x0e, 0x0d,
	0xc6, 0x84, 0x0a, 0xf9, 0xdb, 0x56, 0x1f, 0xe2, 0xf4, 0xfd, 0xe3, 0x94, 0x0e, 0x10, 0x69, 0x5a,
	0x0f, 0x75, 0xe0, 0xd5, 0x6c, 0xd2, 0xe4, 0xa3, 0x7f, 0xf4, 0xa2, 0xf3, 0x29, 0x38, 0x33, 0xae,
	0x71, 0xe8, 0x26, 0xcc, 0x92, 0xfb, 0x6b, 0x9e, 0x4c, 0xbc, 0x90, 0x61, 0x88, 0x34, 0x86, 0x92,
	0x64, 0xca, 0xd9, 0x82, 0x3c, 0xbf, 0x29, 0x0f, 0xdf, 0x22, 0xfb, 0x68, 0x4d, 0xb9, 0xf7, 0xb5,
	0xe9, 0xa9, 0x4d, 0x39, 0x47, 0xe0, 0xa3, 0x17, 0x01, 0x23, 0x66, 0xca, 0x23, 0xcd, 0x43, 0x65,
	0x98, 0x67, 0xf1, 0x34, 0x4f, 0x0c, 0xce, 0x67, 0xfc, 0x42, 0x9e, 0xe6, 0x23, 0x4a, 0xff, 0x4b,
	0x80, 0x17, 0x23, 0xf5, 0xc4, 0xd6, 0x27, 0x84, 0xa3, 0xad, 0x10, 0x47, 0xdf, 0xcd, 0xc6, 0xd1,
	0x44, 0x52, 0x1f, 0x3d, 0x6f, 0x7f, 0x42, 0x80, 0x0b, 0x59, 0x5b, 0x8a, 0x7e, 0x10, 0x8e, 0x47,
	0x3f, 0x23, 0xe6, 0xf1, 0xfb, 0x6a, 0xce, 0xcf, 0x37, 0xc4, 0x09, 0x49, 0xbf, 0x23, 0xc4, 0xc6,
	0x99, 0xbb, 0xa3, 0x47, 0x26, 0x64, 0x39, 0xc4, 0xf9, 0x95, 0x9c, 0xd9, 0x10, 0x3f, 0xcc, 0x49,
	0xf9, 0x67, 0x63, 0x3b, 0x43, 0xc4, 0x68, 0x33, 0xd4, 0x99, 0xb7, 0xb2, 0x89, 0x51, 0x84, 0xc8,
	0x47, 0x2f, 0x40, 0x4e, 0xcc, 0x75, 0x4c, 0x68, 0x22, 0xda, 0x84, 0x25, 0xee, 0xda, 0x69, 0x46,
	0xfb, 0xcd, 0x11, 0xd2, 0x42, 0xe8, 0xd8, 0xef, 0x3e, 0xe5, 0xd5, 0x4a, 0x73, 0x64, 0x78, 0x2b,
	0x64, 0xa4, 0x84, 0xb8, 0x7a, 0x6d, 0x02, 0x57, 0xc3, 0xc8, 0x1c, 0x37, 0x3f, 0x14, 0x21, 0xf9,
	0xfd, 0x62, 0xa0, 0xb9, 0xe3, 0x2d, 0x41, 0x3f, 0x0a, 0x47, 0xbd, 0xc0, 0x00, 0x9f, 0xa2, 0x65,
	0x2b, 0x77, 0x9f, 0xc6, 0xbc, 0x2a, 0xf3, 0x15, 0x68, 0xe1, 0xfa, 0xf0, 0xa8, 0xf1, 0x09, 0xf1,
	0x26, 0xa4, 0xe6, 0x8f, 0x27, 0x5d, 0xd3, 0x42, 0xe8, 0xc4, 0x54, 0x93, 0xc4, 0x46, 0x8c, 0x43,
	0x2f, 0x8c, 0x4f, 0x00, 0x43, 0x8a, 0x6a, 0x0c, 0x45, 0xfa, 0x39, 0x01, 0xce, 0x67, 0xec, 0x06,
	0xba, 0x0e, 0xaf, 0x69, 0x4a, 0xab, 0xd9, 0xa8, 0xb7, 0x48, 0xb6, 0xbb, 0xcd, 0x46, 0xbd, 0x5b,
	0xee, 0xb4, 0xda, 0x8d, 0x4d, 0x45, 0xa3, 0xe9, 0x40, 0xfd, 0x27, 0x2f, 0x2b, 0x8b, 0xa2, 0xb5,
	0xc8, 0x07, 0x53, 0xde, 0x81, 0x1b, 0xf9, 0x30, 0xf9, 0x34, 0x74, 0xa2, 0x20, 0xfd, 0x3b, 0x21,
	0x70, 0x57, 0x22, 0xad, 0x24, 0x2a, 0x08, 0xdd, 0x0e, 0x89, 0xe7, 0x9b, 0xf9, 0x86, 0x92, 0x90,
	0xf8, 0xb0, 0x85, 0xf4, 0xf3, 0x25, 0x38, 0x3b, 0xa9, 0x3d, 0xe8, 0x27, 0x85, 0x64, 0x59, 0x35,
	0xa6, 0xec, 0xe0, 0xc4, 0x02, 0x63, 0xe5, 0xb6, 0x95, 0x28, 0xb7, 0x2b, 0x99, 0xe5, 0x96, 0x99,
	0x8b, 0xb0, 0xf4, 0xca, 0x11, 0xe9, 0x7d, 0x39, 0x83, 0xf4, 0x32, 0x42, 0x9e, 0x0c, 0xff, 0x9a,
	0x00, 0x57, 0x72, 0x75, 0x0c, 0xbd, 0x0b, 0x37, 0xd3, 0xe5, 0x91, 0x26, 0xba, 0x1d, 0x2f, 0xd0,
	0x0a, 0xc8, 0x53, 0x11, 0x88, 0xc8, 0xf5, 0x7f, 0x10, 0xe0, 0xd9, 0x70, 0xcb, 0xfd, 0xa4, 0x3c,
	0x6c, 0x7b, 0xae, 0x16, 0x12, 0xec, 0xeb, 0x99, 0xc6, 0x3d, 0x42, 0xe3, 0xc3, 0x96, 0xec, 0xff,
	0x5a, 0x82, 0xe7, 0x27, 0x36, 0x88, 0x7c, 0xb6, 0xd3, 0x70, 0x0d, 0x9a, 0x7b, 0xdc, 0xf4, 0x93,
	0xce, 0x85, 0x81, 0xe8, 0x0d, 0x38, 0x65, 0x1c, 0xec, 0x1b, 0x3d, 0x6c, 0x18, 0x0d, 0x67, 0x38,
	0x18, 0xf9, 0xc5, 0xe9, 0x15, 0xf3, 0x94, 0xb7, 0xd1, 0x7c, 0x45, 0xc5, 0x78, 0xbe, 0xa2, 0x03,
	0x3f, 0xdd, 0x3c, 0x4d, 0x46, 0xfd, 0xc3, 0xd3, 0xb2, 0x76, 0x72, 0x89, 0x48, 0x32, 0xfa, 0xe7,
	0x00, 0x46, 0x41, 0xb2, 0x3c, 0x96, 0x8f, 0x20, 0x80, 0x48, 0x7f, 0xb7, 0x10, 0x55, 0xc9, 0xa9,
	0x34, 0xd1, 0xab, 0xb0, 0x12, 0x95, 0xc3, 0x8a, 0xda, 0x2a, 0x37, 0xee, 0x28, 0xda, 0x96, 0xb7,
	0x6b, 0x4a, 0x33, 0x35, 0xb3, 0x9d, 0xdb, 0xdb, 0xe2, 0x11, 0xf4, 0x1e, 0xdc, 0xca, 0x85, 0xd4,
	0x94, 0x35, 0xb2, 0x89, 0x57, 0x95, 0xd5, 0x1a, 0x3d, 0x01, 0x74, 0x0b, 0xae, 0xe7, 0xa2, 0xd0,
	0xa9, 0xcb, 0x77, 0x64, 0xb5, 0x26, 0xaf, 0xd5, 0x14, 0xb1, 0x80, 0x64, 0x78, 0x3b, 0x17, 0x76,
	0xb0, 0xf5, 0xd4, 0xe8, 0xb4, 0xe5, 0x75, 0x45, 0x2c, 0x86, 0x0c, 0x42, 0x24, 0x8f, 0x15, 0x5d,
	0x4c, 0xe4, 0x33, 0x08, 0x49, 0x24, 0x3e, 0xec, 0x69, 0xd3, 0x0f, 0xec, 0x41, 0x5a, 0x73, 0xd0,
	0x7b, 0x30, 0x47, 0x93, 0x66, 0x79, 0xae, 0xde, 0xb9, 0x14, 0xba, 0x11, 0x0a, 0x9a, 0x87, 0x26,
	0x7d, 0x0a, 0x8e, 0x7b, 0xb5, 0x28, 0xb6, 0x3d, 0xb4, 0x09, 0xb3, 0xaa, 0x30, 0x6b, 0xe0, 0x87,
	0x49, 0xab, 0x8e, 0x18, 0x26, 0xf9, 0xe1, 0x68, 0x0c, 0x5b, 0xfa, 0x86, 0x00, 0x4f, 0xa5, 0x94,
	0x21, 0x39, 0xcf, 0x82, 0xa4, 0x8a, 0xe4, 0x37, 0x3a, 0x05, 0xb3, 0x7d, 0xa2, 0xa1, 0xbd, 0xcf,
	0x76, 0xd0, 0x27, 0x54, 0x0f, 0xf1, 0xee, 0x46, 0xbe, 0xd6, 0x10, 0x9e, 0x6e, 0x1a, 0x8e, 0x83,
	0xfb, 0x4d, 0xe8, 0x04, 0x1f, 0xd5, 0x2e, 0x71, 0x1f, 0xd5, 0x3e, 0x7d, 0x14, 0x16, 0xb9, 0xa2,
	0x17, 0xbf, 0x1a, 0x7c, 0x16, 0x21, 0x7a, 0x7a, 0xe0, 0x39, 0x38, 0x3d, 0xf6, 0x1c, 0xc0, 0x71,
	0x38, 0x1a, 0xdd, 0xd1, 0x17, 0x61, 0x29, 0xb2, 0x37, 0x7f, 0x06, 0x96, 0xc7, 0xec, 0xb2, 0x3f,
	0x0d, 0x27, 0xd3, 0xf6, 0xcb, 0x9f, 0x82, 0x27, 0x93, 0x77, 0xbe, 0x8f, 0x01, 0x84, 0xf6, 0xb0,
	0x45, 0x58, 0x8a, 0xec, 0x46, 0x03, 0xcc, 0xfa, 0xfb, 0xca, 0xb8, 0x91, 0x91, 0x1d, 0xe2, 0x63,
	0x00, 0xa1, 0xbd, 0x5e, 0x04, 0xc7, 0xa2, 0xbb, 0xb6, 0x17, 0xdf, 0x84, 0x53, 0x4d, 0xdd, 0xd6,
	0xf7, 0x58, 0x24, 0x97, 0x3b, 0x39, 0x32, 0x0f, 0x25, 0x76, 0x10, 0x04, 0x60, 0xd6, 0x3f, 0xd7,
	0x31, 0x07, 0x45, 0x72, 0x4c, 0x63, 0xf5, 0x5f, 0x3f, 0x0b, 0x67, 0xca, 0x6c, 0xe0, 0x98, 0xc6,
	0xa2, 0x03, 0xe7, 0x25, 0x9a, 0xff, 0x05, 0x81, 0x24, 0xf1, 0x09, 0xed, 0xd5, 0xa0, 0x34, 0xd1,
	0x4b, 0x49, 0x0e, 0x77, 0xfa, 0x5a, 0xae, 0x70, 0x39, 0x5e, 0xed, 0x4a, 0x2b, 0x9f, 0xff, 0x83,
	0xef, 0x7c, 0xa5, 0xf0, 0x32, 0x3a, 0xbf, 0xd2, 0xeb, 0x3b, 0x57, 0xf4, 0xd1, 0xca, 0xc3, 0x6b,
	0x2b, 0xdb, 0xb4, 0xd8, 0x8a, 0xb7, 0x05, 0xb1, 0xf2, 0x59, 0x7f, 0x67, 0xea, 0x73, 0xe8, 0x1f,
	0x08, 0x00, 0x41, 0xc2, 0x35, 0x74, 0x21, 0xbd, 0x89, 0xe1, 0x9c, 0x6c, 0xa7, 0xdf, 0x9a, 0x2a,
	0x96, 0x4f, 0x1a, 0xf9, 0x26, 0x69, 0xe4, 0x35, 0xb4, 0x92, 0xb1, 0x91, 0x2b, 0x2c, 0x2e, 0x8e,
	0x5d, 0xc6, 0x45, 0x2e, 0xd1, 0x17, 0x7a, 0x39, 0xbd, 0xb5, 0x91, 0x64, 0x60, 0xa7, 0xaf, 0xe4,
	0xf2, 0x2a, 0x25, 0x89, 0x34, 0xf1, 0x0c, 0x3a, 0xcd, 0x35, 0xb1, 0x47, 0x8a, 0xac, 0x78, 0x7e,
	0x23, 0xfa, 0x79, 0x81, 0xa4, 0xdb, 0x8a, 0x78, 0xeb, 0x2b, 0x93, 0xdb, 0x14, 0x1e, 0xe5, 0x57,
	0xa7, 0xf0, 0x77, 0xa5, 0x97, 0x49, 0xfb, 0x5e, 0x40, 0xcf, 0xa7, 0xb7, 0x6f, 0x85, 0x29, 0x9c,
	0x2f, 0xd1, 0x11, 0x66, 0xea, 0x76, 0xdc, 0x08, 0x87, 0x13, 0x87, 0x4d, 0x6c, 0x58, 0x92, 0x26,
	0x97, 0x5e, 0x24, 0x0d, 0x7b, 0x0e, 0x9d, 0xe1, 0x1a, 0xd6, 0xf7, 0x0a, 0xae, 0x30, 0x4d, 0x8d,
	0xfe, 0xb6, 0x00, 0xc7, 0xc2, 0xa9, 0xc6, 0xd0, 0xe5, 0xf4, 0x76, 0xc5, 0x33, 0x92, 0x9d, 0x5e,
	0xc9, 0x11, 0x94, 0x26, 0x32, 0x77, 0x89, 0xb4, 0xeb, 0x25, 0xf4, 0x42, 0x82, 0xcc, 0xd1, 0xc8,
	0xee, 0xca, 0x67, 0x59, 0x52, 0xb3, 0xcf, 0x79, 0xb3, 0x37, 0x14, 0x9e, 0x1d, 0x37, 0x7b, 0x93,
	0xb2, 0x81, 0x65, 0x9d, 0xbd, 0x5c, 0xf0, 0x78, 0xec, 0xec, 0xf5, 0x62, 0x8e, 0x2b, 0x9f, 0xf5,
	0x53, 0x8a, 0x7d, 0x0e, 0xfd, 0xb4, 0x00, 0x0b, 0x7e, 0xae, 0x30, 0x74, 0x3e, 0xbd, 0x85, 0xa1,
	0x6c, 0x62, 0xa7, 0x5f, 0x9b, 0xc6, 0x1f, 0x94, 0x5e, 0x20, 0xad, 0x7b, 0x16, 0x3d, 0x93, 0x38,
	0xb4, 0xcc, 0x01, 0xfc, 0x7d, 0x01, 0x4e, 0x24, 0xe5, 0x1f, 0x43, 0xab, 0xe9, 0x8d, 0x4b, 0x4b,
	0x56, 0x76, 0xfa, 0xf5, 0xdc, 0x01, 0x2e, 0xc2, 0xc6, 0x1a, 0x69, 0x68, 0x15, 0x55, 0xb2, 0xea,
	0x17, 0x3e, 0x50, 0xb4, 0xf2, 0xd9, 0x50, 0xb2, 0xb3, 0xcf, 0xa1, 0x5f, 0x15, 0xe0, 0x89, 0x48,
	0xee, 0x2f, 0x74, 0x25, 0x53, 0x67, 0x9c, 0xe9, 0xfb, 0x41, 0xe6, 0xd2, 0x2d, 0xd2, 0x8f, 0x37,
	0xd0, 0x6b, 0xd3, 0xf4, 0x03, 0x7d, 0x59, 0x80, 0x25, 0x3e, 0xfb, 0x0e, 0xba, 0x98, 0x3d, 0x0f,
	0x53, 0x4e, 0xd3, 0x43, 0x5a, 0x9b, 0x24, 0x1e, 0xd1, 0xd6, 0xa2, 0x5f, 0x12, 0x40, 0x8c, 0x66,
	0x84, 0x48, 0x9d, 0x59, 0x29, 0xa9, 0x23, 0xa6, 0x34, 0x3d, 0xa4, 0x91, 0x97, 0x49, 0x23, 0xcf,
	0xa1, 0x17, 0xc7, 0xb1, 0xd4, 0xdb, 0x86, 0xc5, 0xc2, 0x7c, 0x66, 0xdc, 0x45, 0x7c, 0x74, 0x23,
	0x43, 0xcb, 0x53, 0xce, 0x27, 0x3d, 0x4e, 0x2f, 0xae, 0x93, 0x5e, 0xac, 0x4a, 0x99, 0x7a, 0x71,
	0x83, 0x3f, 0xca, 0xf4, 0xaf, 0x18, 0xff, 0xf9, 0x0b, 0x6c, 0x63, 0xf9, 0x9f, 0x70, 0x8d, 0xf0,
	0xf4, 0xda, 0xe3, 0xef, 0x2f, 0x4b, 0x6f, 0x93, 0x2e, 0xbc, 0x89, 0x5e, 0xcf, 0x2a, 0xdb, 0x74,
	0x33, 0xf6, 0x4a, 0x9f, 0x36, 0xf9, 0xb7, 0x05, 0x38, 0x91, 0x74, 0xb9, 0x38, 0x55, 0xcd, 0x8c,
	0xb9, 0x89, 0x7c, 0x28, 0xfd, 0xb9, 0x46, 0xfa, 0x73, 0x09, 0xbd, 0x3c, 0xae, 0x3f, 0xe1, 0x3e,
	0xfc, 0x77, 0x81, 0x1e, 0xa5, 0x1f, 0x77, 0x99, 0x10, 0xbd, 0x93, 0xb1, 0x3f, 0x69, 0x52, 0x76,
	0x88, 0x63, 0x25, 0x65, 0xef, 0x5b, 0x48, 0xe6, 0xfe, 0xba, 0x00, 0x10, 0x5c, 0x07, 0x4b, 0x75,
	0x40, 0x62, 0x37, 0xc6, 0x72, 0x19, 0x79, 0xd2, 0xd0, 0xe7, 0x49, 0x43, 0x9f, 0x41, 0x4f, 0xa7,
	0x1a, 0x79, 0x5f, 0x2b, 0x7a, 0xd7, 0x76, 0xc6, 0x6a, 0xc5, 0xc8, 0xdd, 0x9e, 0x9c, 0x26, 0x7d,
	0xa2, 0x56, 0xf4, 0x4c, 0x3a, 0xfa, 0xb7, 0xec, 0xc2, 0x5c, 0x6c, 0x1b, 0x0d, 0xbd, 0x9a, 0xe7,
	0x72, 0x81, 0xd7, 0xcc, 0x9b, 0x8f, 0xb1, 0xbd, 0x28, 0xad, 0x91, 0x06, 0xdf, 0x42, 0x37, 0xb2,
	0x4e, 0x4c, 0xef, 0x3b, 0xe6, 0x2b, 0xfe, 0xf6, 0x1c, 0xfa, 0x2d, 0x01, 0x9e, 0x4e, 0x3d, 0xc5,
	0x8e, 0xde, 0x9c, 0xf2, 0xc2, 0xc4, 0xe3, 0xf5, 0xeb, 0x0a, 0xe9, 0xd7, 0x79, 0xf4, 0x52, 0xb2,
	0x6c, 0x44, 0xbb, 0xf0, 0x1d, 0x96, 0x8a, 0x61, 0xe2, 0x71, 0x53, 0x54, 0xce, 0xd3, 0x9d, 0xb4,
	0x69, 0xfa, 0x58, 0x5d, 0x7b, 0x8b, 0x74, 0xed, 0x55, 0x29, 0x5b, 0xd7, 0xf8, 0xb9, 0xb9, 0x3d,
	0xbb, 0x6f, 0x0f, 0xdd, 0xe1, 0xab, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0x13, 0xfe, 0x2a, 0x58,
	0xde, 0xcf, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConsumerDataStandardsServiceClient is the client API for ConsumerDataStandardsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsumerDataStandardsServiceClient interface {
	// Get Account Detail
	//
	// Obtain detailed information on a single account
	GetAccountDetail(ctx context.Context, in *GetAccountDetailRequest, opts ...grpc.CallOption) (*ResponseBankingAccountById, error)
	// Get Account Balance
	//
	// Obtain the balance for a single specified account
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceById, error)
	// Get Customer
	//
	// Obtain basic information on the customer that has authorised the current session
	GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*ResponseCommonCustomer, error)
	// Get Customer Detail
	//
	// Obtain detailed information on the authorised customer within the current session.
	GetCustomerDetail(ctx context.Context, in *GetCustomerDetailRequest, opts ...grpc.CallOption) (*ResponseCommonCustomerDetail, error)
	// Get Outages
	//
	// Obtain a list of scheduled outages for the implementation
	GetOutages(ctx context.Context, in *GetOutagesRequest, opts ...grpc.CallOption) (*ResponseDiscoveryOutagesList, error)
	// Get Payee Detail
	//
	// Obtain detailed information on a single payee.
	//
	// Note that the payee sub-structure should be selected to represent the payment destination only rather than any known characteristics of the payment recipient
	GetPayeeDetail(ctx context.Context, in *GetPayeeDetailRequest, opts ...grpc.CallOption) (*ResponseBankingPayeeById, error)
	// Get Product Detail
	//
	// Obtain detailed information on a single product offered openly to the market.
	//
	// NOTE: This version must be implemented by **July 2020**
	//
	// Obsolete versions: [v1](includes/obsolete/get-product-detail-v1.html)
	GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*ResponseBankingProductById, error)
	// Get Status
	//
	// Obtain a health check status for the implementation
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*ResponseCommonDiscoveryStatus, error)
	// Get Transaction Detail
	//
	// Obtain detailed information on a transaction for a specific account
	GetTransactionDetail(ctx context.Context, in *GetTransactionDetailRequest, opts ...grpc.CallOption) (*ResponseBankingTransactionById, error)
	// Get Transactions For Account
	//
	// Obtain transactions for a specific account.
	//
	// Some general notes that apply to all end points that retrieve transactions:
	//
	// - Where multiple transactions are returned, transactions should be ordered according to effective date in descending order
	// - As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the “effective” date/time which will be defined as:
	// 		- Posted date/time if available, then
	// 		- Execution date/time if available, then
	// 		- A reasonable date/time nominated by the data holder using internal data structures
	// - For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account
	// - For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*ResponseBankingTransactionList, error)
	// Get Accounts
	//
	// Obtain a list of accounts
	ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingAccountList, error)
	// Get Bulk Balances
	//
	// Obtain balances for multiple, filtered accounts
	ListBalancesBulk(ctx context.Context, in *ListBalancesBulkRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceList, error)
	// Get Balances For Specific Accounts
	//
	// Obtain balances for a specified list of accounts
	ListBalancesSpecificAccounts(ctx context.Context, in *ListBalancesSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceList, error)
	// Get Direct Debits For Account
	//
	// Obtain direct debit authorisations for a specific account
	ListDirectDebits(ctx context.Context, in *ListDirectDebitsRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Bulk Direct Debits
	//
	// Obtain direct debit authorisations for multiple, filtered accounts
	ListDirectDebitsBulk(ctx context.Context, in *ListDirectDebitsBulkRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Direct Debits For Specific Accounts
	//
	// Obtain direct debit authorisations for a specified list of accounts
	ListDirectDebitsSpecificAccounts(ctx context.Context, in *ListDirectDebitsSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Payees
	//
	// Obtain a list of pre-registered payees
	ListPayees(ctx context.Context, in *ListPayeesRequest, opts ...grpc.CallOption) (*ResponseBankingPayeeList, error)
	// Get Products
	//
	// Obtain a list of products that are currently openly offered to the market
	//
	// Note that the results returned by this end point are expected to be ordered according to updated-since
	//
	// ### Conventions
	// In the product reference payloads there are a number of recurring conventions that are explained here, in one place.
	//
	// #### Arrays Of Features
	//
	// In the product detail payload there are a number of arrays articulating generic features, constraints, prices, etc. The intent of these arrays is as follows:
	//
	// - Each element in an array has the same structure so that clients can reliably interpret the payloads
	// - Each element as a type element that is an enumeration of the specific aspect of a product being described, such as types of fees.
	// - Each element has a field name [additionalValue](#productfeaturetypedoc).  This is a generic field with contents that will vary based on the type of object being described. The contents of this field for the ADDITIONAL_CARDS feature is the number of cards allowed while the contents of this field for the MAX_LIMIT constraint would be the maximum credit limit allowed for the product.
	// - An element in these arrays of the same type may appear more than once. For instance, a product may offer two separate loyalty programs that the customer can select from. A fixed term mortgage may have different rates for different term lengths.
	// - An element in these arrays may contain an additionalInfo and additionalInfoUri field. The additionalInfo field is used to provide displayable text clarifying the purpose of the element in some way when the product is presented to a customer. The additionalInfoUri provides a link to externally hosted information specifically relevant to that feature of the product.
	// - Depending on the type of data being represented there may be additional specific fields.
	//
	// #### URIs To More Information
	//
	// As the complexities and nuances of a financial product can not easily be fully expressed in a data structure without a high degree of complexity it is necessary to provide additional reference information that a potential customer can access so that they are fully informed of the features and implications of the product. The payloads for product reference therefore contain numerous fields that are provided to allow the product holder to describe the product more fully using a web page hosted on their online channels.
	//
	// These URIs do not need to all link to different pages. If desired, they can all link to a single hosted page and use difference HTML anchors to focus on a specific topic such as eligibility or fees.
	//
	// #### Linkage To Accounts
	// From the moment that a customer applies for a product and an account is created the account and the product that spawned it will diverge.  Rates and features of the product may change and a discount may be negotiated for the account.
	//
	// For this reason, while productCategory is a common field between accounts and products, there is no specific ID that can be used to link an account to a product within the regime.
	//
	// Similarly, many of the fields and objects in the product payload will appear in the account detail payload but the structures and semantics are not identical as one refers to a product that can potentially be originated and one refers to an account that actual has been instantiated and created along with the associated decisions inherent in that process.
	//
	// #### Dates
	// It is expected that data consumers needing this data will call relatively frequently to ensure the data they have is representative of the current offering from a bank.  To minimise the volume and frequency of these calls the ability to set a lastUpdated field with the date and time of the last update to this product is included.  A call for a list of products can then be filtered to only return products that have been updated since the last time that data was obtained using the updated-since query parameter.
	//
	// In addition, the concept of effective date and time has also been included.  This allows for a product to be marked for obsolescence, or introduction, from a certain time without the need for an update to show that a product has been changed.  The inclusion of these dates also removes the need to represent deleted products in the payload.  Products that are no long offered can be marked not effective for a few weeks before they are then removed from the product set as an option entirely.
	//
	// NOTE: This version must be implemented by **July 2020**
	//
	// Obsolete versions: [v1](includes/obsolete/get-products-v1.html)
	ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ResponseBankingProductList, error)
	// Get Scheduled Payments for Account
	//
	// Obtain scheduled, outgoing payments for a specific account
	ListScheduledPayments(ctx context.Context, in *ListScheduledPaymentsRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error)
	// Get Scheduled Payments Bulk
	//
	// Obtain scheduled payments for multiple, filtered accounts that are the source of funds for the payments
	ListScheduledPaymentsBulk(ctx context.Context, in *ListScheduledPaymentsBulkRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error)
	// Get Scheduled Payments For Specific Accounts
	//
	// Obtain scheduled payments for a specified list of accounts
	ListScheduledPaymentsSpecificAccounts(ctx context.Context, in *ListScheduledPaymentsSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error)
}

type consumerDataStandardsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConsumerDataStandardsServiceClient(cc grpc.ClientConnInterface) ConsumerDataStandardsServiceClient {
	return &consumerDataStandardsServiceClient{cc}
}

func (c *consumerDataStandardsServiceClient) GetAccountDetail(ctx context.Context, in *GetAccountDetailRequest, opts ...grpc.CallOption) (*ResponseBankingAccountById, error) {
	out := new(ResponseBankingAccountById)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetAccountDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceById, error) {
	out := new(ResponseBankingAccountsBalanceById)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*ResponseCommonCustomer, error) {
	out := new(ResponseCommonCustomer)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetCustomerDetail(ctx context.Context, in *GetCustomerDetailRequest, opts ...grpc.CallOption) (*ResponseCommonCustomerDetail, error) {
	out := new(ResponseCommonCustomerDetail)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetCustomerDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetOutages(ctx context.Context, in *GetOutagesRequest, opts ...grpc.CallOption) (*ResponseDiscoveryOutagesList, error) {
	out := new(ResponseDiscoveryOutagesList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetOutages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetPayeeDetail(ctx context.Context, in *GetPayeeDetailRequest, opts ...grpc.CallOption) (*ResponseBankingPayeeById, error) {
	out := new(ResponseBankingPayeeById)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetPayeeDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*ResponseBankingProductById, error) {
	out := new(ResponseBankingProductById)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetProductDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*ResponseCommonDiscoveryStatus, error) {
	out := new(ResponseCommonDiscoveryStatus)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetTransactionDetail(ctx context.Context, in *GetTransactionDetailRequest, opts ...grpc.CallOption) (*ResponseBankingTransactionById, error) {
	out := new(ResponseBankingTransactionById)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetTransactionDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*ResponseBankingTransactionList, error) {
	out := new(ResponseBankingTransactionList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingAccountList, error) {
	out := new(ResponseBankingAccountList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListBalancesBulk(ctx context.Context, in *ListBalancesBulkRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceList, error) {
	out := new(ResponseBankingAccountsBalanceList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListBalancesBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListBalancesSpecificAccounts(ctx context.Context, in *ListBalancesSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingAccountsBalanceList, error) {
	out := new(ResponseBankingAccountsBalanceList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListBalancesSpecificAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListDirectDebits(ctx context.Context, in *ListDirectDebitsRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error) {
	out := new(ResponseBankingDirectDebitAuthorisationList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListDirectDebitsBulk(ctx context.Context, in *ListDirectDebitsBulkRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error) {
	out := new(ResponseBankingDirectDebitAuthorisationList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebitsBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListDirectDebitsSpecificAccounts(ctx context.Context, in *ListDirectDebitsSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingDirectDebitAuthorisationList, error) {
	out := new(ResponseBankingDirectDebitAuthorisationList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebitsSpecificAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListPayees(ctx context.Context, in *ListPayeesRequest, opts ...grpc.CallOption) (*ResponseBankingPayeeList, error) {
	out := new(ResponseBankingPayeeList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListPayees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ResponseBankingProductList, error) {
	out := new(ResponseBankingProductList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListScheduledPayments(ctx context.Context, in *ListScheduledPaymentsRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error) {
	out := new(ResponseBankingScheduledPaymentsList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPayments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListScheduledPaymentsBulk(ctx context.Context, in *ListScheduledPaymentsBulkRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error) {
	out := new(ResponseBankingScheduledPaymentsList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPaymentsBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerDataStandardsServiceClient) ListScheduledPaymentsSpecificAccounts(ctx context.Context, in *ListScheduledPaymentsSpecificAccountsRequest, opts ...grpc.CallOption) (*ResponseBankingScheduledPaymentsList, error) {
	out := new(ResponseBankingScheduledPaymentsList)
	err := c.cc.Invoke(ctx, "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPaymentsSpecificAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsumerDataStandardsServiceServer is the server API for ConsumerDataStandardsService service.
type ConsumerDataStandardsServiceServer interface {
	// Get Account Detail
	//
	// Obtain detailed information on a single account
	GetAccountDetail(context.Context, *GetAccountDetailRequest) (*ResponseBankingAccountById, error)
	// Get Account Balance
	//
	// Obtain the balance for a single specified account
	GetBalance(context.Context, *GetBalanceRequest) (*ResponseBankingAccountsBalanceById, error)
	// Get Customer
	//
	// Obtain basic information on the customer that has authorised the current session
	GetCustomer(context.Context, *GetCustomerRequest) (*ResponseCommonCustomer, error)
	// Get Customer Detail
	//
	// Obtain detailed information on the authorised customer within the current session.
	GetCustomerDetail(context.Context, *GetCustomerDetailRequest) (*ResponseCommonCustomerDetail, error)
	// Get Outages
	//
	// Obtain a list of scheduled outages for the implementation
	GetOutages(context.Context, *GetOutagesRequest) (*ResponseDiscoveryOutagesList, error)
	// Get Payee Detail
	//
	// Obtain detailed information on a single payee.
	//
	// Note that the payee sub-structure should be selected to represent the payment destination only rather than any known characteristics of the payment recipient
	GetPayeeDetail(context.Context, *GetPayeeDetailRequest) (*ResponseBankingPayeeById, error)
	// Get Product Detail
	//
	// Obtain detailed information on a single product offered openly to the market.
	//
	// NOTE: This version must be implemented by **July 2020**
	//
	// Obsolete versions: [v1](includes/obsolete/get-product-detail-v1.html)
	GetProductDetail(context.Context, *GetProductDetailRequest) (*ResponseBankingProductById, error)
	// Get Status
	//
	// Obtain a health check status for the implementation
	GetStatus(context.Context, *GetStatusRequest) (*ResponseCommonDiscoveryStatus, error)
	// Get Transaction Detail
	//
	// Obtain detailed information on a transaction for a specific account
	GetTransactionDetail(context.Context, *GetTransactionDetailRequest) (*ResponseBankingTransactionById, error)
	// Get Transactions For Account
	//
	// Obtain transactions for a specific account.
	//
	// Some general notes that apply to all end points that retrieve transactions:
	//
	// - Where multiple transactions are returned, transactions should be ordered according to effective date in descending order
	// - As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the “effective” date/time which will be defined as:
	// 		- Posted date/time if available, then
	// 		- Execution date/time if available, then
	// 		- A reasonable date/time nominated by the data holder using internal data structures
	// - For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account
	// - For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared
	GetTransactions(context.Context, *GetTransactionsRequest) (*ResponseBankingTransactionList, error)
	// Get Accounts
	//
	// Obtain a list of accounts
	ListAccounts(context.Context, *ListAccountsRequest) (*ResponseBankingAccountList, error)
	// Get Bulk Balances
	//
	// Obtain balances for multiple, filtered accounts
	ListBalancesBulk(context.Context, *ListBalancesBulkRequest) (*ResponseBankingAccountsBalanceList, error)
	// Get Balances For Specific Accounts
	//
	// Obtain balances for a specified list of accounts
	ListBalancesSpecificAccounts(context.Context, *ListBalancesSpecificAccountsRequest) (*ResponseBankingAccountsBalanceList, error)
	// Get Direct Debits For Account
	//
	// Obtain direct debit authorisations for a specific account
	ListDirectDebits(context.Context, *ListDirectDebitsRequest) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Bulk Direct Debits
	//
	// Obtain direct debit authorisations for multiple, filtered accounts
	ListDirectDebitsBulk(context.Context, *ListDirectDebitsBulkRequest) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Direct Debits For Specific Accounts
	//
	// Obtain direct debit authorisations for a specified list of accounts
	ListDirectDebitsSpecificAccounts(context.Context, *ListDirectDebitsSpecificAccountsRequest) (*ResponseBankingDirectDebitAuthorisationList, error)
	// Get Payees
	//
	// Obtain a list of pre-registered payees
	ListPayees(context.Context, *ListPayeesRequest) (*ResponseBankingPayeeList, error)
	// Get Products
	//
	// Obtain a list of products that are currently openly offered to the market
	//
	// Note that the results returned by this end point are expected to be ordered according to updated-since
	//
	// ### Conventions
	// In the product reference payloads there are a number of recurring conventions that are explained here, in one place.
	//
	// #### Arrays Of Features
	//
	// In the product detail payload there are a number of arrays articulating generic features, constraints, prices, etc. The intent of these arrays is as follows:
	//
	// - Each element in an array has the same structure so that clients can reliably interpret the payloads
	// - Each element as a type element that is an enumeration of the specific aspect of a product being described, such as types of fees.
	// - Each element has a field name [additionalValue](#productfeaturetypedoc).  This is a generic field with contents that will vary based on the type of object being described. The contents of this field for the ADDITIONAL_CARDS feature is the number of cards allowed while the contents of this field for the MAX_LIMIT constraint would be the maximum credit limit allowed for the product.
	// - An element in these arrays of the same type may appear more than once. For instance, a product may offer two separate loyalty programs that the customer can select from. A fixed term mortgage may have different rates for different term lengths.
	// - An element in these arrays may contain an additionalInfo and additionalInfoUri field. The additionalInfo field is used to provide displayable text clarifying the purpose of the element in some way when the product is presented to a customer. The additionalInfoUri provides a link to externally hosted information specifically relevant to that feature of the product.
	// - Depending on the type of data being represented there may be additional specific fields.
	//
	// #### URIs To More Information
	//
	// As the complexities and nuances of a financial product can not easily be fully expressed in a data structure without a high degree of complexity it is necessary to provide additional reference information that a potential customer can access so that they are fully informed of the features and implications of the product. The payloads for product reference therefore contain numerous fields that are provided to allow the product holder to describe the product more fully using a web page hosted on their online channels.
	//
	// These URIs do not need to all link to different pages. If desired, they can all link to a single hosted page and use difference HTML anchors to focus on a specific topic such as eligibility or fees.
	//
	// #### Linkage To Accounts
	// From the moment that a customer applies for a product and an account is created the account and the product that spawned it will diverge.  Rates and features of the product may change and a discount may be negotiated for the account.
	//
	// For this reason, while productCategory is a common field between accounts and products, there is no specific ID that can be used to link an account to a product within the regime.
	//
	// Similarly, many of the fields and objects in the product payload will appear in the account detail payload but the structures and semantics are not identical as one refers to a product that can potentially be originated and one refers to an account that actual has been instantiated and created along with the associated decisions inherent in that process.
	//
	// #### Dates
	// It is expected that data consumers needing this data will call relatively frequently to ensure the data they have is representative of the current offering from a bank.  To minimise the volume and frequency of these calls the ability to set a lastUpdated field with the date and time of the last update to this product is included.  A call for a list of products can then be filtered to only return products that have been updated since the last time that data was obtained using the updated-since query parameter.
	//
	// In addition, the concept of effective date and time has also been included.  This allows for a product to be marked for obsolescence, or introduction, from a certain time without the need for an update to show that a product has been changed.  The inclusion of these dates also removes the need to represent deleted products in the payload.  Products that are no long offered can be marked not effective for a few weeks before they are then removed from the product set as an option entirely.
	//
	// NOTE: This version must be implemented by **July 2020**
	//
	// Obsolete versions: [v1](includes/obsolete/get-products-v1.html)
	ListProducts(context.Context, *ListProductsRequest) (*ResponseBankingProductList, error)
	// Get Scheduled Payments for Account
	//
	// Obtain scheduled, outgoing payments for a specific account
	ListScheduledPayments(context.Context, *ListScheduledPaymentsRequest) (*ResponseBankingScheduledPaymentsList, error)
	// Get Scheduled Payments Bulk
	//
	// Obtain scheduled payments for multiple, filtered accounts that are the source of funds for the payments
	ListScheduledPaymentsBulk(context.Context, *ListScheduledPaymentsBulkRequest) (*ResponseBankingScheduledPaymentsList, error)
	// Get Scheduled Payments For Specific Accounts
	//
	// Obtain scheduled payments for a specified list of accounts
	ListScheduledPaymentsSpecificAccounts(context.Context, *ListScheduledPaymentsSpecificAccountsRequest) (*ResponseBankingScheduledPaymentsList, error)
}

// UnimplementedConsumerDataStandardsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConsumerDataStandardsServiceServer struct {
}

func (*UnimplementedConsumerDataStandardsServiceServer) GetAccountDetail(ctx context.Context, req *GetAccountDetailRequest) (*ResponseBankingAccountById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountDetail not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetBalance(ctx context.Context, req *GetBalanceRequest) (*ResponseBankingAccountsBalanceById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetCustomer(ctx context.Context, req *GetCustomerRequest) (*ResponseCommonCustomer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetCustomerDetail(ctx context.Context, req *GetCustomerDetailRequest) (*ResponseCommonCustomerDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerDetail not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetOutages(ctx context.Context, req *GetOutagesRequest) (*ResponseDiscoveryOutagesList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOutages not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetPayeeDetail(ctx context.Context, req *GetPayeeDetailRequest) (*ResponseBankingPayeeById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayeeDetail not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetProductDetail(ctx context.Context, req *GetProductDetailRequest) (*ResponseBankingProductById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductDetail not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetStatus(ctx context.Context, req *GetStatusRequest) (*ResponseCommonDiscoveryStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetTransactionDetail(ctx context.Context, req *GetTransactionDetailRequest) (*ResponseBankingTransactionById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionDetail not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) GetTransactions(ctx context.Context, req *GetTransactionsRequest) (*ResponseBankingTransactionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListAccounts(ctx context.Context, req *ListAccountsRequest) (*ResponseBankingAccountList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccounts not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListBalancesBulk(ctx context.Context, req *ListBalancesBulkRequest) (*ResponseBankingAccountsBalanceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBalancesBulk not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListBalancesSpecificAccounts(ctx context.Context, req *ListBalancesSpecificAccountsRequest) (*ResponseBankingAccountsBalanceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBalancesSpecificAccounts not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListDirectDebits(ctx context.Context, req *ListDirectDebitsRequest) (*ResponseBankingDirectDebitAuthorisationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectDebits not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListDirectDebitsBulk(ctx context.Context, req *ListDirectDebitsBulkRequest) (*ResponseBankingDirectDebitAuthorisationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectDebitsBulk not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListDirectDebitsSpecificAccounts(ctx context.Context, req *ListDirectDebitsSpecificAccountsRequest) (*ResponseBankingDirectDebitAuthorisationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectDebitsSpecificAccounts not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListPayees(ctx context.Context, req *ListPayeesRequest) (*ResponseBankingPayeeList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPayees not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListProducts(ctx context.Context, req *ListProductsRequest) (*ResponseBankingProductList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProducts not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListScheduledPayments(ctx context.Context, req *ListScheduledPaymentsRequest) (*ResponseBankingScheduledPaymentsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListScheduledPayments not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListScheduledPaymentsBulk(ctx context.Context, req *ListScheduledPaymentsBulkRequest) (*ResponseBankingScheduledPaymentsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListScheduledPaymentsBulk not implemented")
}
func (*UnimplementedConsumerDataStandardsServiceServer) ListScheduledPaymentsSpecificAccounts(ctx context.Context, req *ListScheduledPaymentsSpecificAccountsRequest) (*ResponseBankingScheduledPaymentsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListScheduledPaymentsSpecificAccounts not implemented")
}

func RegisterConsumerDataStandardsServiceServer(s *grpc.Server, srv ConsumerDataStandardsServiceServer) {
	s.RegisterService(&_ConsumerDataStandardsService_serviceDesc, srv)
}

func _ConsumerDataStandardsService_GetAccountDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetAccountDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetAccountDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetAccountDetail(ctx, req.(*GetAccountDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetCustomer(ctx, req.(*GetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetCustomerDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetCustomerDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetCustomerDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetCustomerDetail(ctx, req.(*GetCustomerDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetOutages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetOutages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetOutages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetOutages(ctx, req.(*GetOutagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetPayeeDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayeeDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetPayeeDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetPayeeDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetPayeeDetail(ctx, req.(*GetPayeeDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetProductDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetProductDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetProductDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetProductDetail(ctx, req.(*GetProductDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetTransactionDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetTransactionDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetTransactionDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetTransactionDetail(ctx, req.(*GetTransactionDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).GetTransactions(ctx, req.(*GetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListAccounts(ctx, req.(*ListAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListBalancesBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBalancesBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListBalancesBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListBalancesBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListBalancesBulk(ctx, req.(*ListBalancesBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListBalancesSpecificAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBalancesSpecificAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListBalancesSpecificAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListBalancesSpecificAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListBalancesSpecificAccounts(ctx, req.(*ListBalancesSpecificAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListDirectDebits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectDebitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebits(ctx, req.(*ListDirectDebitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListDirectDebitsBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectDebitsBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebitsBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebitsBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebitsBulk(ctx, req.(*ListDirectDebitsBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListDirectDebitsSpecificAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectDebitsSpecificAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebitsSpecificAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListDirectDebitsSpecificAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListDirectDebitsSpecificAccounts(ctx, req.(*ListDirectDebitsSpecificAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListPayees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPayeesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListPayees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListPayees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListPayees(ctx, req.(*ListPayeesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListProducts(ctx, req.(*ListProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListScheduledPayments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListScheduledPaymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPayments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPayments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPayments(ctx, req.(*ListScheduledPaymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListScheduledPaymentsBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListScheduledPaymentsBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPaymentsBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPaymentsBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPaymentsBulk(ctx, req.(*ListScheduledPaymentsBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerDataStandardsService_ListScheduledPaymentsSpecificAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListScheduledPaymentsSpecificAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPaymentsSpecificAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumerdatastandards.ConsumerDataStandardsService/ListScheduledPaymentsSpecificAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerDataStandardsServiceServer).ListScheduledPaymentsSpecificAccounts(ctx, req.(*ListScheduledPaymentsSpecificAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsumerDataStandardsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "consumerdatastandards.ConsumerDataStandardsService",
	HandlerType: (*ConsumerDataStandardsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountDetail",
			Handler:    _ConsumerDataStandardsService_GetAccountDetail_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _ConsumerDataStandardsService_GetBalance_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _ConsumerDataStandardsService_GetCustomer_Handler,
		},
		{
			MethodName: "GetCustomerDetail",
			Handler:    _ConsumerDataStandardsService_GetCustomerDetail_Handler,
		},
		{
			MethodName: "GetOutages",
			Handler:    _ConsumerDataStandardsService_GetOutages_Handler,
		},
		{
			MethodName: "GetPayeeDetail",
			Handler:    _ConsumerDataStandardsService_GetPayeeDetail_Handler,
		},
		{
			MethodName: "GetProductDetail",
			Handler:    _ConsumerDataStandardsService_GetProductDetail_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _ConsumerDataStandardsService_GetStatus_Handler,
		},
		{
			MethodName: "GetTransactionDetail",
			Handler:    _ConsumerDataStandardsService_GetTransactionDetail_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _ConsumerDataStandardsService_GetTransactions_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _ConsumerDataStandardsService_ListAccounts_Handler,
		},
		{
			MethodName: "ListBalancesBulk",
			Handler:    _ConsumerDataStandardsService_ListBalancesBulk_Handler,
		},
		{
			MethodName: "ListBalancesSpecificAccounts",
			Handler:    _ConsumerDataStandardsService_ListBalancesSpecificAccounts_Handler,
		},
		{
			MethodName: "ListDirectDebits",
			Handler:    _ConsumerDataStandardsService_ListDirectDebits_Handler,
		},
		{
			MethodName: "ListDirectDebitsBulk",
			Handler:    _ConsumerDataStandardsService_ListDirectDebitsBulk_Handler,
		},
		{
			MethodName: "ListDirectDebitsSpecificAccounts",
			Handler:    _ConsumerDataStandardsService_ListDirectDebitsSpecificAccounts_Handler,
		},
		{
			MethodName: "ListPayees",
			Handler:    _ConsumerDataStandardsService_ListPayees_Handler,
		},
		{
			MethodName: "ListProducts",
			Handler:    _ConsumerDataStandardsService_ListProducts_Handler,
		},
		{
			MethodName: "ListScheduledPayments",
			Handler:    _ConsumerDataStandardsService_ListScheduledPayments_Handler,
		},
		{
			MethodName: "ListScheduledPaymentsBulk",
			Handler:    _ConsumerDataStandardsService_ListScheduledPaymentsBulk_Handler,
		},
		{
			MethodName: "ListScheduledPaymentsSpecificAccounts",
			Handler:    _ConsumerDataStandardsService_ListScheduledPaymentsSpecificAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/ob-service.proto",
}
